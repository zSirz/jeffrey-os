{
  "metadata": {
    "generated_at": "2025-09-23T21:47:33.768384",
    "total_modules": 221,
    "version": "2.0",
    "ml_trained": true,
    "cache_used": 0,
    "statistics": {
      "total": 221,
      "SHARED": 47,
      "CORE": 104,
      "": 9,
      "BRIDGE": 43,
      "AVATARS": 18
    }
  },
  "modules": [
    {
      "path": "jeffrey/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.094086",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.097503",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/neural_bus.py",
      "name": "neural_bus",
      "full_name": "jeffrey.core.neural_bus",
      "file_hash": "5bfcd533aca3e4219261b43c2530fe78",
      "utility": "Bus neuronal avec résolution de namespaces - AVEC CORRECTIONS GPT",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "NeuralBus"
      ],
      "functions": [
        "__init__",
        "_normalize_topics",
        "subscribe",
        "register_handler"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 80,
      "complexity_score": 12,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "neural_bus Bus neuronal avec résolution de namespaces - AVEC CORRECTIONS GPT NeuralBus __init__ _normalize_topics subscribe register_handler General",
      "embedding": null,
      "last_modified": "2025-09-21T18:56:41.913705",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/service_registry.py",
      "name": "service_registry",
      "full_name": "jeffrey.core.service_registry",
      "file_hash": "1089f60bff2fe5e6a6c535b6a7d51cca",
      "utility": "Registre central garantissant zéro module orphelin",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "ServiceRegistry"
      ],
      "functions": [
        "__init__",
        "check_orphans"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 34,
      "complexity_score": 4,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "service_registry Registre central garantissant zéro module orphelin ServiceRegistry __init__ check_orphans General",
      "embedding": null,
      "last_modified": "2025-09-21T18:57:09.499078",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/sandbox_manager_enhanced.py",
      "name": "sandbox_manager_enhanced",
      "full_name": "jeffrey.core.sandbox_manager_enhanced",
      "file_hash": "b45fbc3fff6f68ce6991c5c36711c34b",
      "utility": "Module sandbox avec détection PII et analyse de sécurité",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "ContentStatus",
        "RiskLevel",
        "ValidationResult",
        "EnhancedSandboxManager"
      ],
      "functions": [
        "__init__",
        "get_pending_reviews"
      ],
      "dependencies": [
        {
          "module": "__future__",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 166,
      "complexity_score": 16,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "sandbox_manager_enhanced Module sandbox avec détection PII et analyse de sécurité ContentStatus RiskLevel ValidationResult EnhancedSandboxManager __init__ get_pending_reviews General",
      "embedding": null,
      "last_modified": "2025-09-20T22:50:08.380815",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/errors.py",
      "name": "errors",
      "full_name": "jeffrey.core.errors",
      "file_hash": "1a276eac943863f00f9b3a41bb918db0",
      "utility": "Exceptions communes pour Jeffrey OS",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "SecurityError",
        "ResourceError",
        "DependencyError",
        "DiscoveryError"
      ],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 19,
      "complexity_score": 1,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "errors Exceptions communes pour Jeffrey OS SecurityError ResourceError DependencyError DiscoveryError General",
      "embedding": null,
      "last_modified": "2025-09-21T20:54:59.248327",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/neural_envelope.py",
      "name": "neural_envelope",
      "full_name": "jeffrey.core.neural_envelope",
      "file_hash": "ef6d601817d6255064fc3c0ebd3fbc11",
      "utility": "Message nerveux universel - Comme un potentiel d'action neuronal",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "NeuralEnvelope"
      ],
      "functions": [
        "add_to_path"
      ],
      "dependencies": [
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "uuid",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 4,
      "lines_of_code": 34,
      "complexity_score": 1,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "neural_envelope Message nerveux universel - Comme un potentiel d'action neuronal NeuralEnvelope add_to_path General",
      "embedding": null,
      "last_modified": "2025-09-21T18:56:06.838082",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/memory_rituals.py",
      "name": "memory_rituals",
      "full_name": "jeffrey.core.memory.memory_rituals",
      "file_hash": "adf2bf6f52a83295e70b90819f911502",
      "utility": "🎭 Jeffrey V2.0 Memory Rituals - Rituels Conversationnels Évolutifs",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "RitualType",
        "RitualMood",
        "RitualTemplate",
        "RitualContext",
        "MemoryRitualsEngine"
      ],
      "functions": [
        "create_memory_rituals",
        "__init__",
        "_initialize_ritual_templates",
        "_load_seasonal_adaptations",
        "_are_compatible_moods",
        "_get_seasonal_bonus"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "living_memory",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 10,
      "lines_of_code": 1064,
      "complexity_score": 78,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "memory_rituals 🎭 Jeffrey V2.0 Memory Rituals - Rituels Conversationnels Évolutifs RitualType RitualMood RitualTemplate RitualContext MemoryRitualsEngine create_memory_rituals __init__ _initialize_ritual_templates _load_seasonal_adaptations _are_compatible_moods _get_seasonal_bonus Memory",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.972922",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/memory_manager.py",
      "name": "memory_manager",
      "full_name": "jeffrey.core.memory.memory_manager",
      "file_hash": "c0dc9dc32b8f61db495ad9b8b0956bb6",
      "utility": "Jeffrey V3 - Memory Manager",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "LRUCache",
        "MemoryManager"
      ],
      "functions": [
        "get_memory_manager",
        "test_memory_manager",
        "__init__",
        "get",
        "put",
        "__init__",
        "_load_data",
        "save_data",
        "add_to_context",
        "get_conversation_context",
        "store_user_preference",
        "get_user_preferences",
        "learn_pattern",
        "get_pattern",
        "search_conversations",
        "get_memory_stats",
        "cleanup_old_data",
        "store",
        "retrieve",
        "log_security_event",
        "validate_integrity",
        "cleanup",
        "compress",
        "get_memory_usage",
        "is_healthy",
        "get_compressed_size",
        "auto_cleanup",
        "auto_recover",
        "get_detailed_metrics",
        "get_metrics",
        "get_cache_efficiency",
        "_simulate_corruption",
        "_corrupt_data",
        "_calculate_signature",
        "_track_latency",
        "_calculate_average_latency",
        "_calculate_compression_ratio"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "zlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 677,
      "complexity_score": 79,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "memory_manager Jeffrey V3 - Memory Manager LRUCache MemoryManager get_memory_manager test_memory_manager __init__ get put __init__ _load_data save_data add_to_context get_conversation_context store_user_preference get_user_preferences learn_pattern get_pattern search_conversations get_memory_stats cleanup_old_data store retrieve log_security_event validate_integrity cleanup compress get_memory_usage is_healthy get_compressed_size auto_cleanup auto_recover get_detailed_metrics get_metrics get_cache_efficiency _simulate_corruption _corrupt_data _calculate_signature _track_latency _calculate_average_latency _calculate_compression_ratio Memory",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:29.050969",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.memory.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.100873",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/memory_health_check.py",
      "name": "memory_health_check",
      "full_name": "jeffrey.core.memory.memory_health_check",
      "file_hash": "7e82f88db51a291671d6abd1beafd5f7",
      "utility": "🏥 Jeffrey V2.0 Memory Health Check - Health Checks Automatiques et Maintenance",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "HealthCheckResult",
        "MaintenanceAction",
        "MemoryHealthChecker"
      ],
      "functions": [
        "__init__",
        "_calculate_overall_health",
        "_generate_recommendations"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "psutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "shutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "monitoring.memory_monitor",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "analytics.memory_analytics",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "gc",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 987,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 15,
      "lines_of_code": 1136,
      "complexity_score": 108,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "memory_health_check 🏥 Jeffrey V2.0 Memory Health Check - Health Checks Automatiques et Maintenance HealthCheckResult MaintenanceAction MemoryHealthChecker __init__ _calculate_overall_health _generate_recommendations Memory",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:29.198835",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/advanced/contextual_memory_manager.py",
      "name": "contextual_memory_manager",
      "full_name": "jeffrey.core.memory.advanced.contextual_memory_manager",
      "file_hash": "eca260b1559e6565b84695ccb0e4c8a1",
      "utility": "Module de gestion de la mémoire contextuelle pour Jeffrey.",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "ContextualMemoryManager"
      ],
      "functions": [
        "__init__",
        "_load_history",
        "_save_history",
        "add_interaction",
        "get_recent_context",
        "get_personality_summary",
        "clear_history",
        "generate_followup_question",
        "extract_topics"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 269,
      "complexity_score": 12,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "contextual_memory_manager Module de gestion de la mémoire contextuelle pour Jeffrey. ContextualMemoryManager __init__ _load_history _save_history add_interaction get_recent_context get_personality_summary clear_history generate_followup_question extract_topics Memory",
      "embedding": null,
      "last_modified": "2025-09-22T21:02:27.167994",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/jeffrey_human_memory.py",
      "name": "jeffrey_human_memory",
      "full_name": "jeffrey.core.memory.jeffrey_human_memory",
      "file_hash": "2286c207aaf3a7786dae5fe51ecba3ce",
      "utility": "Jeffrey Human Memory System",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "JeffreyHumanMemory"
      ],
      "functions": [
        "__init__",
        "memorize_conversation",
        "recall_about_topic",
        "get_user_profile",
        "add_promise",
        "learn_about_user",
        "remember_special_moment",
        "get_relationship_summary",
        "_extract_all_context",
        "_extract_keywords",
        "_extract_learnings",
        "_extract_promises",
        "_rate_significance",
        "_update_semantic_memory",
        "_create_associations",
        "_update_relationship_state",
        "_calculate_relevance",
        "_calculate_memory_age",
        "_find_emotional_connections",
        "_human_like_recall_filter",
        "_analyze_significance",
        "_calculate_relationship_duration",
        "_identify_common_topics",
        "_persist_to_disk",
        "_load_from_disk",
        "_try_load_backup"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "platform",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 706,
      "complexity_score": 57,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_human_memory Jeffrey Human Memory System JeffreyHumanMemory __init__ memorize_conversation recall_about_topic get_user_profile add_promise learn_about_user remember_special_moment get_relationship_summary _extract_all_context _extract_keywords _extract_learnings _extract_promises _rate_significance _update_semantic_memory _create_associations _update_relationship_state _calculate_relevance _calculate_memory_age _find_emotional_connections _human_like_recall_filter _analyze_significance _calculate_relationship_duration _identify_common_topics _persist_to_disk _load_from_disk _try_load_backup Memory",
      "embedding": null,
      "last_modified": "2025-09-22T21:40:37.900781",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/advanced/voice_memory_manager.py",
      "name": "voice_memory_manager",
      "full_name": "jeffrey.core.memory.advanced.voice_memory_manager",
      "file_hash": "89cc1c6eccdc01e8770784ee25a16478",
      "utility": "voice_memory_manager.py - Gestionnaire de mémoire vocale pour Jeffrey",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "VoiceMemoryManager"
      ],
      "functions": [
        "__init__",
        "_load_memory",
        "save",
        "update_emotion",
        "get_memory",
        "log_voice_interaction",
        "add_emotion_record",
        "delete_record_by_id",
        "get_average_score",
        "get_contextual_emotion_score",
        "reset_memory",
        "export_emotional_records",
        "load_emotional_records",
        "get_recent_interactions",
        "cleanup_old_records",
        "limit_log_size",
        "optimize_memory",
        "save_all_memories"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "uuid",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 464,
      "complexity_score": 37,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "voice_memory_manager voice_memory_manager.py - Gestionnaire de mémoire vocale pour Jeffrey VoiceMemoryManager __init__ _load_memory save update_emotion get_memory log_voice_interaction add_emotion_record delete_record_by_id get_average_score get_contextual_emotion_score reset_memory export_emotional_records load_emotional_records get_recent_interactions cleanup_old_records limit_log_size optimize_memory save_all_memories Memory",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:29.272348",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/advanced/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.memory.advanced.__init__",
      "file_hash": "86f24ae8a34f6ac00e787a123d0ad942",
      "utility": "Package initialization for Jeffrey OS",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 20,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Package initialization for Jeffrey OS Memory",
      "embedding": null,
      "last_modified": "2025-09-20T22:49:01.714834",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/advanced/emotional_memory.py",
      "name": "emotional_memory",
      "full_name": "jeffrey.core.memory.advanced.emotional_memory",
      "file_hash": "69107e8993b284b849560fd6c7b92b16",
      "utility": "Module de gestion de la mémoire émotionnelle.",
      "category": "Memory",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmotionalMemory"
      ],
      "functions": [
        "__init__",
        "load_memory",
        "save_memory",
        "planter_graine",
        "enregistrer_moment",
        "get_graines",
        "get_journal",
        "recuperer_derniers_souvenirs"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "core.io_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 4,
      "lines_of_code": 119,
      "complexity_score": 2,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotional_memory Module de gestion de la mémoire émotionnelle. EmotionalMemory __init__ load_memory save_memory planter_graine enregistrer_moment get_graines get_journal recuperer_derniers_souvenirs Memory",
      "embedding": null,
      "last_modified": "2025-04-28T10:55:24.220359",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/cortex/memory_bridge.py",
      "name": "memory_bridge",
      "full_name": "jeffrey.core.memory.cortex.memory_bridge",
      "file_hash": "4bbb156c444d95d6e817983a00149c6b",
      "utility": "🌉 Jeffrey V2.0 UX Memory Bridge - Pont entre Living Memory et AGI Orchestrator",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "UXEnrichmentResult",
        "UXMemoryBridge"
      ],
      "functions": [
        "__init__",
        "_determine_interaction_timing",
        "register_capture_hook",
        "register_enrichment_hook"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "living_memory",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "memory_rituals",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "micro_interactions",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "emotional_timeline",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "memory_templates",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "memory_templates.template_coordinator",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 147,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 14,
      "lines_of_code": 643,
      "complexity_score": 59,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "memory_bridge 🌉 Jeffrey V2.0 UX Memory Bridge - Pont entre Living Memory et AGI Orchestrator UXEnrichmentResult UXMemoryBridge __init__ _determine_interaction_timing register_capture_hook register_enrichment_hook Memory",
      "embedding": null,
      "last_modified": "2025-06-23T18:38:26.598537",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/cortex/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.memory.cortex.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.104044",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/advanced/memory_manager.py",
      "name": "memory_manager",
      "full_name": "jeffrey.core.memory.advanced.memory_manager",
      "file_hash": "9e057ebda4cb9e036e430911f897d784",
      "utility": "Module de orchestration, memory, emotion",
      "category": "Memory",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "MemoryManager"
      ],
      "functions": [
        "__init__",
        "_load_memory",
        "_save_memory",
        "log_emotion",
        "get_recent_emotions",
        "add_memory_event",
        "get_all_events",
        "remember_fact",
        "remember_trait",
        "get_knowledge",
        "get_traits",
        "link_person",
        "get_linked_people",
        "export_memory",
        "clear_memory",
        "describe_emotional_journal",
        "store_happy_memory",
        "get_happy_memories",
        "store_user_phrase",
        "get_user_phrases",
        "mark_as_favorite_phrase",
        "analyze_emotional_links",
        "get_topic_emotions",
        "get_related_topics",
        "get_emotional_graph",
        "get_emotional_insights",
        "clean_outdated_topics",
        "get_favorite_phrases",
        "cleanup_old_emotional_history",
        "trim_user_phrases",
        "optimize_memory",
        "get_affective_user_phrases"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "core.memory.affective_link_resolver",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 642,
      "complexity_score": 45,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 50.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "memory_manager Module de orchestration, memory, emotion MemoryManager __init__ _load_memory _save_memory log_emotion get_recent_emotions add_memory_event get_all_events remember_fact remember_trait get_knowledge get_traits link_person get_linked_people export_memory clear_memory describe_emotional_journal store_happy_memory get_happy_memories store_user_phrase get_user_phrases mark_as_favorite_phrase analyze_emotional_links get_topic_emotions get_related_topics get_emotional_graph get_emotional_insights clean_outdated_topics get_favorite_phrases cleanup_old_emotional_history trim_user_phrases optimize_memory get_affective_user_phrases Memory",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:29.338854",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/cortex/memoire_cerveau.py",
      "name": "memoire_cerveau",
      "full_name": "jeffrey.core.memory.cortex.memoire_cerveau",
      "file_hash": "795a3cb70e77c9c4c5da15a032e20078",
      "utility": "Mémoire cerveau de Jeffrey - Gestion des expériences et patterns cognitifs.",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "MemoireCerveau"
      ],
      "functions": [
        "__init__",
        "integrer_experience",
        "_calculer_intensite",
        "_extraire_tags",
        "_analyser_patterns",
        "_creer_liens_cognitifs",
        "generer_insight",
        "_generer_description_insight",
        "_generer_recommandations",
        "obtenir_carte_cognitive",
        "sauvegarder",
        "_charger_memoire"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 299,
      "complexity_score": 24,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "memoire_cerveau Mémoire cerveau de Jeffrey - Gestion des expériences et patterns cognitifs. MemoireCerveau __init__ integrer_experience _calculer_intensite _extraire_tags _analyser_patterns _creer_liens_cognitifs generer_insight _generer_description_insight _generer_recommandations obtenir_carte_cognitive sauvegarder _charger_memoire Memory",
      "embedding": null,
      "last_modified": "2025-07-31T18:03:45",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/living/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.memory.living.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.107462",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/cortex/cortex_memoriel.py",
      "name": "cortex_memoriel",
      "full_name": "jeffrey.core.memory.cortex.cortex_memoriel",
      "file_hash": "e2176ba0d6a62d2ffe861d91246bfe48",
      "utility": "🧠 CORTEX MÉMORIEL VIVANT DE JEFFREY",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "MemoryMoment",
        "DreamInsight",
        "SimpleEmbedder",
        "SimpleIndex",
        "CortexMemoriel",
        "PersistentCortexMemoriel"
      ],
      "functions": [
        "to_dict",
        "to_dict",
        "__init__",
        "encode",
        "__init__",
        "add",
        "search",
        "__init__",
        "encode_moment",
        "remember_by_resonance",
        "store_moment",
        "get_emotional_intensity",
        "get_memory_stats",
        "_calculate_memory_span",
        "__init__",
        "auto_flush",
        "save_to_disk",
        "_restore_from_backup",
        "_cleanup_old_backups",
        "rotate_encryption_key"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "numpy",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "faiss",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "sentence_transformers",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.fernet",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 36,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 15,
      "lines_of_code": 522,
      "complexity_score": 39,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "cortex_memoriel 🧠 CORTEX MÉMORIEL VIVANT DE JEFFREY MemoryMoment DreamInsight SimpleEmbedder SimpleIndex CortexMemoriel PersistentCortexMemoriel to_dict to_dict __init__ encode __init__ add search __init__ encode_moment remember_by_resonance store_moment get_emotional_intensity get_memory_stats _calculate_memory_span __init__ auto_flush save_to_disk _restore_from_backup _cleanup_old_backups rotate_encryption_key Memory",
      "embedding": null,
      "last_modified": "2025-07-28T15:11:23",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/working/working_memory.py",
      "name": "working_memory",
      "full_name": "jeffrey.core.memory.working.working_memory",
      "file_hash": "81c9c4c6d93bf478e5f9d714175c6a9a",
      "utility": "Jeffrey OS - Mémoire de travail",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "WorkingMemory"
      ],
      "functions": [
        "__init__",
        "add_exchange",
        "_extract_entities",
        "get_context",
        "get_full_context",
        "search_keyword",
        "get_entities",
        "set_topic",
        "get_topic",
        "clear",
        "export",
        "import_state"
      ],
      "dependencies": [
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 1,
      "lines_of_code": 116,
      "complexity_score": 13,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "working_memory Jeffrey OS - Mémoire de travail WorkingMemory __init__ add_exchange _extract_entities get_context get_full_context search_keyword get_entities set_topic get_topic clear export import_state Memory",
      "embedding": null,
      "last_modified": "2025-09-13T19:20:39.004128",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/working/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.memory.working.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.110724",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/affective/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.memory.affective.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.113793",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/living/living_memory.py",
      "name": "living_memory",
      "full_name": "jeffrey.core.memory.living.living_memory",
      "file_hash": "8359e98847605362def0e1d5f2fb248a",
      "utility": "🧠✨ Jeffrey V2.0 Living Memory - Cœur du Système Vivant",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "MemoryMomentType",
        "RelationshipStage",
        "MemoryMoment",
        "RelationshipProfile",
        "LivingMemoryCore"
      ],
      "functions": [
        "create_living_memory",
        "__init__",
        "_load_config",
        "_load_emotion_patterns",
        "_initialize_classifiers",
        "_should_capture_moment",
        "_get_time_context",
        "_calculate_relationship_stage",
        "_calculate_intimacy_boost",
        "_get_default_style",
        "get_ux_metrics"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "uuid",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 372,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 403,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 14,
      "lines_of_code": 1030,
      "complexity_score": 77,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "living_memory 🧠✨ Jeffrey V2.0 Living Memory - Cœur du Système Vivant MemoryMomentType RelationshipStage MemoryMoment RelationshipProfile LivingMemoryCore create_living_memory __init__ _load_config _load_emotion_patterns _initialize_classifiers _should_capture_moment _get_time_context _calculate_relationship_stage _calculate_intimacy_boost _get_default_style get_ux_metrics Memory",
      "embedding": null,
      "last_modified": "2025-06-23T18:38:26.599186",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/sensory/jeffrey_sensory_memory.py",
      "name": "jeffrey_sensory_memory",
      "full_name": "jeffrey.core.memory.sensory.jeffrey_sensory_memory",
      "file_hash": "b5015847af5f1f069acdd0c95970794a",
      "utility": "Jeffrey Sensory Memory - Mémoire sensorielle imaginaire",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "JeffreySensoryImagination"
      ],
      "functions": [
        "create_sensory_memory_system",
        "__init__",
        "load_sensory_memories",
        "_get_default_sensory_memories",
        "save_sensory_memories",
        "create_sensory_memory",
        "recall_with_senses",
        "create_sensory_gift",
        "create_moment_ambiance",
        "_get_dominant_emotion",
        "_determine_time_context",
        "_imagine_weather",
        "_imagine_sounds",
        "_imagine_scents",
        "_imagine_textures",
        "_imagine_visual_details",
        "_imagine_spatial_feeling",
        "_add_temporal_richness",
        "_create_atmosphere_description",
        "_create_narrative_elements",
        "_create_sensory_signature",
        "_create_sensory_recall_narrative",
        "_update_personal_associations",
        "get_memory_statistics",
        "_calculate_richness_score"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 787,
      "complexity_score": 46,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_sensory_memory Jeffrey Sensory Memory - Mémoire sensorielle imaginaire JeffreySensoryImagination create_sensory_memory_system __init__ load_sensory_memories _get_default_sensory_memories save_sensory_memories create_sensory_memory recall_with_senses create_sensory_gift create_moment_ambiance _get_dominant_emotion _determine_time_context _imagine_weather _imagine_sounds _imagine_scents _imagine_textures _imagine_visual_details _imagine_spatial_feeling _add_temporal_richness _create_atmosphere_description _create_narrative_elements _create_sensory_signature _create_sensory_recall_narrative _update_personal_associations get_memory_statistics _calculate_richness_score Memory",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.408123",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/memory/sensory/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.memory.sensory.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.116915",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/sync/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.memory.sync.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.120496",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/sync/jeffrey_memory_sync.py",
      "name": "jeffrey_memory_sync",
      "full_name": "jeffrey.core.memory.sync.jeffrey_memory_sync",
      "file_hash": "abbadaf656921533f75806188d135dfc",
      "utility": "Jeffrey Memory Synchronization System",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "JeffreyMemorySync"
      ],
      "functions": [
        "__init__",
        "save_memory_state",
        "load_memory_state",
        "start_auto_sync",
        "stop_auto_sync",
        "force_sync",
        "merge_memory_states",
        "export_memory",
        "_create_memory_snapshot",
        "_atomic_save",
        "_acquire_lock",
        "_release_lock",
        "_get_device_id",
        "_calculate_checksum",
        "_verify_integrity",
        "_is_cache_valid",
        "_load_readonly",
        "_check_for_conflicts",
        "_resolve_conflicts",
        "_merge_episodic_memory",
        "_merge_semantic_memory",
        "_merge_associative_memory",
        "_merge_relationship_state",
        "_deep_merge_dicts",
        "_is_newer",
        "_calculate_stats",
        "_count_knowledge",
        "_count_knowledge_items",
        "_cleanup_old_backups",
        "_create_daily_backup",
        "_recover_from_backup",
        "_auto_sync_worker",
        "_analyze_memory",
        "_calculate_memory_age",
        "_export_as_html",
        "_export_as_markdown"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "shutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "platform",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 864,
      "complexity_score": 92,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_memory_sync Jeffrey Memory Synchronization System JeffreyMemorySync __init__ save_memory_state load_memory_state start_auto_sync stop_auto_sync force_sync merge_memory_states export_memory _create_memory_snapshot _atomic_save _acquire_lock _release_lock _get_device_id _calculate_checksum _verify_integrity _is_cache_valid _load_readonly _check_for_conflicts _resolve_conflicts _merge_episodic_memory _merge_semantic_memory _merge_associative_memory _merge_relationship_state _deep_merge_dicts _is_newer _calculate_stats _count_knowledge _count_knowledge_items _cleanup_old_backups _create_daily_backup _recover_from_backup _auto_sync_worker _analyze_memory _calculate_memory_age _export_as_html _export_as_markdown Memory",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.419639",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/learning/cognitive_cycle_engine.py",
      "name": "cognitive_cycle_engine",
      "full_name": "jeffrey.core.learning.cognitive_cycle_engine",
      "file_hash": "d5da9f9ff396d9db38c5d6969f837a7c",
      "utility": "cognitive_cycle_engine.py – Moteur cognitif principal de Jeffrey",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "CognitiveCycleEngine"
      ],
      "functions": [
        "__init__",
        "run_cycle",
        "_perceive",
        "_think",
        "_decide",
        "_act",
        "before_cycle",
        "after_cycle",
        "evaluate_cycle"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "uuid",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 4,
      "lines_of_code": 134,
      "complexity_score": 10,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "cognitive_cycle_engine cognitive_cycle_engine.py – Moteur cognitif principal de Jeffrey CognitiveCycleEngine __init__ run_cycle _perceive _think _decide _act before_cycle after_cycle evaluate_cycle General",
      "embedding": null,
      "last_modified": "2025-06-26T23:26:29.586448",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/memory/sensory/sensorial_memory.py",
      "name": "sensorial_memory",
      "full_name": "jeffrey.core.memory.sensory.sensorial_memory",
      "file_hash": "f71d924ab7aea0c77dcf27eae4959d7f",
      "utility": "Module de mémoire sensorielle pour Jeffrey.",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "SensorialMemory",
        "SensorialMemoryManager"
      ],
      "functions": [
        "__init__",
        "record_touch",
        "get_touch_profile",
        "get_favorite_zones",
        "recognize_touch_pattern",
        "generate_body_reflex_response",
        "_load_user_tactile_data",
        "_save_user_tactile_data",
        "get_touch_statistics",
        "__init__",
        "log_touch",
        "get_last_touch",
        "get_favorite_touches",
        "get_emotional_response",
        "forget_touch",
        "export_to_json",
        "get_zone_statistics",
        "_calculate_emotional_bond",
        "_load_memories",
        "_save_touch_memory"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "uuid",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 907,
      "complexity_score": 62,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "sensorial_memory Module de mémoire sensorielle pour Jeffrey. SensorialMemory SensorialMemoryManager __init__ record_touch get_touch_profile get_favorite_zones recognize_touch_pattern generate_body_reflex_response _load_user_tactile_data _save_user_tactile_data get_touch_statistics __init__ log_touch get_last_touch get_favorite_touches get_emotional_response forget_touch export_to_json get_zone_statistics _calculate_emotional_bond _load_memories _save_touch_memory Memory",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.413385",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/learning/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.learning.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.123852",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/learning/theory_of_mind.py",
      "name": "theory_of_mind",
      "full_name": "jeffrey.core.learning.theory_of_mind",
      "file_hash": "375b97879410b9a9c781d2e30a140a55",
      "utility": "Jeffrey OS Phase 0.8 - Theory of Mind",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "ConceptCluster",
        "DecisionPattern",
        "MentalState",
        "ConceptExtractor",
        "PatternAnalyzer",
        "TheoryOfMind"
      ],
      "functions": [
        "__init__",
        "extract_concepts",
        "analyze_emotional_valence",
        "__init__",
        "analyze_temporal_patterns",
        "analyze_contextual_patterns",
        "detect_decision_sequences",
        "__init__",
        "_init_database",
        "build_mental_model",
        "_extract_and_cluster_concepts",
        "_cluster_concepts_sklearn",
        "_cluster_concepts_simple",
        "_analyze_decision_patterns",
        "_build_personality_profile",
        "_calculate_consistency",
        "_create_reasoning_chains",
        "_validate_mental_model",
        "_predict_verdict_simple",
        "infer_state",
        "_assess_timing_preference",
        "_determine_risk_profile",
        "_infer_emotional_state",
        "_identify_friction_points",
        "get_concept_insights",
        "get_personality_summary",
        "export_mental_model",
        "load_mental_model",
        "get_decision_explanation"
      ],
      "dependencies": [
        {
          "module": "numpy",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "sqlite3",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "feedback.models",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 34,
          "coupling_score": 0.0
        },
        {
          "module": "sklearn.cluster",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "sklearn.feature_extraction.text",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "sklearn.decomposition",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "sklearn.metrics.pairwise",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "networkx",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 16,
      "lines_of_code": 973,
      "complexity_score": 84,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "theory_of_mind Jeffrey OS Phase 0.8 - Theory of Mind ConceptCluster DecisionPattern MentalState ConceptExtractor PatternAnalyzer TheoryOfMind __init__ extract_concepts analyze_emotional_valence __init__ analyze_temporal_patterns analyze_contextual_patterns detect_decision_sequences __init__ _init_database build_mental_model _extract_and_cluster_concepts _cluster_concepts_sklearn _cluster_concepts_simple _analyze_decision_patterns _build_personality_profile _calculate_consistency _create_reasoning_chains _validate_mental_model _predict_verdict_simple infer_state _assess_timing_preference _determine_risk_profile _infer_emotional_state _identify_friction_points get_concept_insights get_personality_summary export_mental_model load_mental_model get_decision_explanation General",
      "embedding": null,
      "last_modified": "2025-07-18T14:43:41.849324",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/learning/contextual_learning_engine.py",
      "name": "contextual_learning_engine",
      "full_name": "jeffrey.core.learning.contextual_learning_engine",
      "file_hash": "e2062b4b7c567f495132a501ce5154b7",
      "utility": "contextual_learning_engine.py",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "ContextualLearningEngine"
      ],
      "functions": [
        "__init__",
        "observe_context",
        "get_relevant_context_info",
        "adapt_behavior_from_context",
        "reset_context"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 76,
      "complexity_score": 8,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "contextual_learning_engine contextual_learning_engine.py ContextualLearningEngine __init__ observe_context get_relevant_context_info adapt_behavior_from_context reset_context General",
      "embedding": null,
      "last_modified": "2025-09-22T18:31:24.599759",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/learning/jeffrey_meta_learning_integration.py",
      "name": "jeffrey_meta_learning_integration",
      "full_name": "jeffrey.core.learning.jeffrey_meta_learning_integration",
      "file_hash": "4fcbbd62c989ea22bce85dded5a38040",
      "utility": "Jeffrey OS Phase 0.7 + 0.8 Integration",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "IntegrationConfig",
        "MetaLearningIntegration"
      ],
      "functions": [
        "__post_init__",
        "__init__",
        "_init_integration_database",
        "_detect_language",
        "_generate_recommendation",
        "_record_prediction",
        "_record_integration_event",
        "_record_learning_cycle",
        "_update_prediction_accuracy",
        "_should_trigger_retraining"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "sqlite3",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "core.feedback.proposal_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "core.feedback.human_interface",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "storage.proposal_store",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "provenance.chain_tracker",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "core.feedback.feedback_analyzer",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "core.feedback.models",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "core.learning.meta_learner",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "core.learning.theory_of_mind",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "core.learning.feature_extractor",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "core.learning.model_trainer",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "core.learning.causal_predictor",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 30,
          "coupling_score": 0.0
        },
        {
          "module": "core.learning.dream_suggester",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 31,
          "coupling_score": 0.0
        },
        {
          "module": "core.learning.explainer",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "feedback.models",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 750,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 23,
      "lines_of_code": 784,
      "complexity_score": 58,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_meta_learning_integration Jeffrey OS Phase 0.7 + 0.8 Integration IntegrationConfig MetaLearningIntegration __post_init__ __init__ _init_integration_database _detect_language _generate_recommendation _record_prediction _record_integration_event _record_learning_cycle _update_prediction_accuracy _should_trigger_retraining General",
      "embedding": null,
      "last_modified": "2025-07-18T19:43:37",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/learning/jeffrey_deep_learning.py",
      "name": "jeffrey_deep_learning",
      "full_name": "jeffrey.core.learning.jeffrey_deep_learning",
      "file_hash": "784e6c2554f36f6c650b095dbe361d57",
      "utility": "Jeffrey Deep Learning - Apprentissage profond des patterns utilisateur",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "JeffreyDeepLearning"
      ],
      "functions": [
        "create_learning_system",
        "__init__",
        "load_patterns",
        "load_knowledge_graph",
        "load_adaptations",
        "learn_from_interaction",
        "_learn_speech_patterns",
        "_learn_behavioral_patterns",
        "_learn_emotional_patterns",
        "_learn_explicit_knowledge",
        "_learn_contextual_patterns",
        "_infer_preferences",
        "apply_learned_patterns",
        "_adapt_linguistic_style",
        "_incorporate_shared_knowledge",
        "_adapt_emotional_style",
        "_use_familiar_vocabulary",
        "_apply_preference_adaptations",
        "_classify_question",
        "_assess_input_complexity",
        "_extract_joy_trigger",
        "_is_teaching_moment",
        "save_learning_data",
        "get_learning_summary",
        "_calculate_adaptation_score",
        "_calculate_personalization_strength"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 822,
      "complexity_score": 86,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_deep_learning Jeffrey Deep Learning - Apprentissage profond des patterns utilisateur JeffreyDeepLearning create_learning_system __init__ load_patterns load_knowledge_graph load_adaptations learn_from_interaction _learn_speech_patterns _learn_behavioral_patterns _learn_emotional_patterns _learn_explicit_knowledge _learn_contextual_patterns _infer_preferences apply_learned_patterns _adapt_linguistic_style _incorporate_shared_knowledge _adapt_emotional_style _use_familiar_vocabulary _apply_preference_adaptations _classify_question _assess_input_complexity _extract_joy_trigger _is_teaching_moment save_learning_data get_learning_summary _calculate_adaptation_score _calculate_personalization_strength General",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428869",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/learning/unified_curiosity_engine.py",
      "name": "unified_curiosity_engine",
      "full_name": "jeffrey.core.learning.unified_curiosity_engine",
      "file_hash": "cc04f788c7b10bcd8afe913dfc9452c7",
      "utility": "🧠 Moteur de Curiosité Unifié : L'Esprit Éveillé de Jeffrey OS",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "ProcessingMode",
        "UnifiedCuriosityEngine",
        "IntuitivePerceptionModule",
        "ConceptualWorldModel",
        "MetaCognitiveController",
        "UnifiedMemorySystem"
      ],
      "functions": [
        "__init__",
        "forward",
        "_fuse_insights",
        "_merge_surprises",
        "_update_stats",
        "get_cognitive_profile",
        "__init__",
        "forward",
        "_compute_bayesian_surprise",
        "_compute_faiss_surprise",
        "_compute_simple_surprise",
        "_is_adversarial",
        "_update_memory_lru",
        "_adapt_threshold_with_variance",
        "_compute_confidence",
        "__init__",
        "forward",
        "reparameterize",
        "_generate_insight",
        "_update_concept_clusters",
        "_compute_confidence",
        "__init__",
        "forward",
        "_extract_meta_features",
        "_adapt_curiosity_threshold",
        "__init__",
        "update",
        "_compute_episode_significance",
        "_manage_capacity",
        "get_status",
        "retrieve_similar_patterns",
        "get_conceptual_insights_by_type"
      ],
      "dependencies": [
        {
          "module": "torch",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "torch.nn",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "torch.nn.functional",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "numpy",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "heapq",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "pyro",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "pyro.distributions",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "faiss",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 36,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 1115,
      "complexity_score": 75,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "unified_curiosity_engine 🧠 Moteur de Curiosité Unifié : L'Esprit Éveillé de Jeffrey OS ProcessingMode UnifiedCuriosityEngine IntuitivePerceptionModule ConceptualWorldModel MetaCognitiveController UnifiedMemorySystem __init__ forward _fuse_insights _merge_surprises _update_stats get_cognitive_profile __init__ forward _compute_bayesian_surprise _compute_faiss_surprise _compute_simple_surprise _is_adversarial _update_memory_lru _adapt_threshold_with_variance _compute_confidence __init__ forward reparameterize _generate_insight _update_concept_clusters _compute_confidence __init__ forward _extract_meta_features _adapt_curiosity_threshold __init__ update _compute_episode_significance _manage_capacity get_status retrieve_similar_patterns get_conceptual_insights_by_type General",
      "embedding": null,
      "last_modified": "2025-07-23T22:28:33.312389",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/personality/personality_profile.py",
      "name": "personality_profile",
      "full_name": "jeffrey.core.personality.personality_profile",
      "file_hash": "a54c73af4f13b22867db4c19063aee89",
      "utility": "Module de profil de personnalité évolutive pour Jeffrey.",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "PersonnalitéÉvolutive"
      ],
      "functions": [
        "__init__",
        "evoluer_avec_emotion",
        "enregistrer_contact_affectif",
        "definir_contexte",
        "obtenir_etat_actuel",
        "sauvegarder",
        "charger",
        "_mettre_a_jour_stade_developpement",
        "_evaluer_eveil_intimite",
        "_generer_ressenti",
        "_charger_configuration",
        "charger_profil"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 480,
      "complexity_score": 45,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "personality_profile Module de profil de personnalité évolutive pour Jeffrey. PersonnalitéÉvolutive __init__ evoluer_avec_emotion enregistrer_contact_affectif definir_contexte obtenir_etat_actuel sauvegarder charger _mettre_a_jour_stade_developpement _evaluer_eveil_intimite _generer_ressenti _charger_configuration charger_profil General",
      "embedding": null,
      "last_modified": "2025-09-23T18:02:06.601769",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/personality/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.personality.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.127036",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/personality/conversation_personality.py",
      "name": "conversation_personality",
      "full_name": "jeffrey.core.personality.conversation_personality",
      "file_hash": "c2b6cd96626f9acacbf2957d6cae3204",
      "utility": "Module : conversation_personality.py",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "ConversationPersonality"
      ],
      "functions": [
        "__init__",
        "_get_prefix_by_mode",
        "adapter_style",
        "generer_phrase",
        "injecter_reflexion_emotionnelle",
        "get_emotional_signature",
        "_obtenir_prefix",
        "appliquer_personnalite_sur_phrase",
        "memoriser_style",
        "_get_emotional_mode",
        "get_conversation_style",
        "_get_emotional_context",
        "get_emotional_state",
        "ajouter_message",
        "extraire_moments_importants",
        "get_souvenirs_resume",
        "_charger_derniere_conversation",
        "sauvegarder_conversation",
        "_charger_souvenirs_persistants",
        "_sauvegarder_souvenirs_persistants",
        "_est_souvenir_marquant"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "core.personality.emotion_phrase_generator",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "core.personality.style_affectif_adapter",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.emotions.emotional_sync",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 9,
      "lines_of_code": 657,
      "complexity_score": 74,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "conversation_personality Module : conversation_personality.py ConversationPersonality __init__ _get_prefix_by_mode adapter_style generer_phrase injecter_reflexion_emotionnelle get_emotional_signature _obtenir_prefix appliquer_personnalite_sur_phrase memoriser_style _get_emotional_mode get_conversation_style _get_emotional_context get_emotional_state ajouter_message extraire_moments_importants get_souvenirs_resume _charger_derniere_conversation sauvegarder_conversation _charger_souvenirs_persistants _sauvegarder_souvenirs_persistants _est_souvenir_marquant General",
      "embedding": null,
      "last_modified": "2025-09-23T18:02:06.601850",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/personality/adaptive_personality_engine.py",
      "name": "adaptive_personality_engine",
      "full_name": "jeffrey.core.personality.adaptive_personality_engine",
      "file_hash": "4014bef33e787765dda22db370f241e5",
      "utility": "adaptive_personality_engine.py - Module de gestion de la personnalité adaptative de Jeffrey.",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "AdaptivePersonalityEngine"
      ],
      "functions": [
        "__init__",
        "register_emotional_event",
        "get_current_profile",
        "reset_trait",
        "export_profile"
      ],
      "dependencies": [
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 74,
      "complexity_score": 4,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "adaptive_personality_engine adaptive_personality_engine.py - Module de gestion de la personnalité adaptative de Jeffrey. AdaptivePersonalityEngine __init__ register_emotional_event get_current_profile reset_trait export_profile General",
      "embedding": null,
      "last_modified": "2025-09-22T20:43:59.515197",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/personality/personality_engine.py",
      "name": "personality_engine",
      "full_name": "jeffrey.core.personality.personality_engine",
      "file_hash": "a2d337690a2d2523b2d8163262b74106",
      "utility": "Personality Engine - Système de personnalité dynamique et évolutive",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "PersonalityTrait",
        "DynamicPersonality"
      ],
      "functions": [
        "__init__",
        "get_response_style",
        "evolve",
        "express_quirk",
        "get_verbal_tic",
        "update_preference",
        "add_fear",
        "add_desire",
        "share_vulnerability",
        "_generate_default_personality",
        "_initialize_unique_traits",
        "_generate_quirks",
        "_generate_verbal_tics",
        "_initialize_communication_style",
        "_calculate_formality",
        "_calculate_verbosity",
        "_calculate_emotionality",
        "_calculate_creativity",
        "_calculate_humor_level",
        "_calculate_vulnerability_level",
        "_should_show_quirks",
        "_get_contextual_style_elements",
        "_adjust_trait",
        "_check_evolution_milestones",
        "_get_traits_snapshot",
        "_express_fear",
        "generate_spontaneous_thought",
        "update_mood_influence",
        "get_personality_summary",
        "_get_dominant_trait",
        "save_personality",
        "load_personality"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 8,
      "lines_of_code": 798,
      "complexity_score": 63,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "personality_engine Personality Engine - Système de personnalité dynamique et évolutive PersonalityTrait DynamicPersonality __init__ get_response_style evolve express_quirk get_verbal_tic update_preference add_fear add_desire share_vulnerability _generate_default_personality _initialize_unique_traits _generate_quirks _generate_verbal_tics _initialize_communication_style _calculate_formality _calculate_verbosity _calculate_emotionality _calculate_creativity _calculate_humor_level _calculate_vulnerability_level _should_show_quirks _get_contextual_style_elements _adjust_trait _check_evolution_milestones _get_traits_snapshot _express_fear generate_spontaneous_thought update_mood_influence get_personality_summary _get_dominant_trait save_personality load_personality General",
      "embedding": null,
      "last_modified": "2025-06-26T23:26:30.176958",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/jeffrey_chat_integration.py",
      "name": "jeffrey_chat_integration",
      "full_name": "jeffrey.core.consciousness.jeffrey_chat_integration",
      "file_hash": "2ee0f1a3dfd8ccdd73ff9a4cbb02d192",
      "utility": "",
      "category": "",
      "domain": "Identity & Consciousness",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: unexpected indent (<unknown>, line 226)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T21:49:49.854507",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/core/consciousness/jeffrey_dream_system.py",
      "name": "jeffrey_dream_system",
      "full_name": "jeffrey.core.consciousness.jeffrey_dream_system",
      "file_hash": "2733a220ef71e0a17761879bff305a78",
      "utility": "",
      "category": "",
      "domain": "Identity & Consciousness",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: unexpected indent (<unknown>, line 158)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T21:50:45.934765",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/core/consciousness/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.consciousness.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.130177",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/jeffrey_work_interface.py",
      "name": "jeffrey_work_interface",
      "full_name": "jeffrey.core.consciousness.jeffrey_work_interface",
      "file_hash": "5743249c0984db80ab50631066d1950d",
      "utility": "Jeffrey Work Interface - L'interface entre Jeffrey et ses outils",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "JeffreyWorkInterface"
      ],
      "functions": [
        "__init__",
        "set_orchestrator",
        "_analyze_task_type",
        "_handle_without_tools",
        "_generate_post_work_thought",
        "get_work_statistics",
        "_count_tasks_by_mood"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 4,
      "lines_of_code": 372,
      "complexity_score": 33,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_work_interface Jeffrey Work Interface - L'interface entre Jeffrey et ses outils JeffreyWorkInterface __init__ set_orchestrator _analyze_task_type _handle_without_tools _generate_post_work_thought get_work_statistics _count_tasks_by_mood General",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428373",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/learning/auto_learner.py",
      "name": "auto_learner",
      "full_name": "jeffrey.core.learning.auto_learner",
      "file_hash": "c2b00ee796f2f792abe5cbf9eda4a72d",
      "utility": "Module d'apprentissage automatique pour améliorer les modèles IA.",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "AutoLearner"
      ],
      "functions": [
        "__init__",
        "add_example",
        "create_learning_batch",
        "process_batch",
        "_perform_learning",
        "get_learning_stats",
        "get_fallback_response",
        "analyze_improvements",
        "retrain_from_memory"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.api_security",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.ia_pricing",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.ia_services.export_learning",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 433,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 9,
      "lines_of_code": 502,
      "complexity_score": 28,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "auto_learner Module d'apprentissage automatique pour améliorer les modèles IA. AutoLearner __init__ add_example create_learning_batch process_batch _perform_learning get_learning_stats get_fallback_response analyze_improvements retrain_from_memory General",
      "embedding": null,
      "last_modified": "2025-09-22T18:26:44.258560",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/jeffrey_living_consciousness.py",
      "name": "jeffrey_living_consciousness",
      "full_name": "jeffrey.core.consciousness.jeffrey_living_consciousness",
      "file_hash": "b6e25ceade1d871c7febee1fc94d7862",
      "utility": "Jeffrey Living Consciousness - Le cœur vivant de Jeffrey",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "JeffreyLivingConsciousness"
      ],
      "functions": [
        "__init__",
        "_calculer_energie_initiale",
        "_update_natural_cycles",
        "react_to_work_request",
        "enter_work_mode",
        "express_work_preparation",
        "comment_on_progress",
        "present_results_with_personality",
        "exit_work_mode",
        "express_work_completion",
        "understand_intent",
        "respond_naturally",
        "_generate_emotional_response",
        "_generate_personal_response",
        "_generate_contextual_response",
        "announce_using_tools",
        "evolve_relationship",
        "_increase_intimacy",
        "_calculate_current_emotion_intensity",
        "get_consciousness_state",
        "_save_consciousness_state",
        "_load_consciousness_state",
        "spontaneous_thought"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.emotions.core.jeffrey_curiosity_engine",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 8,
      "lines_of_code": 883,
      "complexity_score": 67,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_living_consciousness Jeffrey Living Consciousness - Le cœur vivant de Jeffrey JeffreyLivingConsciousness __init__ _calculer_energie_initiale _update_natural_cycles react_to_work_request enter_work_mode express_work_preparation comment_on_progress present_results_with_personality exit_work_mode express_work_completion understand_intent respond_naturally _generate_emotional_response _generate_personal_response _generate_contextual_response announce_using_tools evolve_relationship _increase_intimacy _calculate_current_emotion_intensity get_consciousness_state _save_consciousness_state _load_consciousness_state spontaneous_thought General",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428833",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/cortex_monitor.py",
      "name": "cortex_monitor",
      "full_name": "jeffrey.core.consciousness.cortex_monitor",
      "file_hash": "ca4d7758e735611a738a4c68197c2d19",
      "utility": "📊 CORTEX MONITOR - MONITORING TEMPS RÉEL DU SYSTÈME",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "CortexMonitor"
      ],
      "functions": [
        "main",
        "__init__",
        "get_comprehensive_status",
        "_get_system_metrics",
        "_get_cortex_metrics",
        "_get_memory_metrics",
        "_get_performance_metrics",
        "_get_health_metrics",
        "_get_evolution_metrics",
        "_check_redis_health",
        "_check_filesystem_health",
        "_get_current_alerts",
        "_generate_recommendations",
        "display_live_dashboard",
        "export_metrics_json",
        "start_monitoring",
        "stop_monitoring",
        "monitor_loop"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "memory_bridge",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 33,
          "coupling_score": 0.0
        },
        {
          "module": "psutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "redis",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 12,
      "lines_of_code": 647,
      "complexity_score": 87,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [
        "security: Shell injection risk"
      ],
      "security_issues": [
        "Shell injection risk"
      ],
      "bridge_violations": [],
      "readiness_score": 25.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "cortex_monitor 📊 CORTEX MONITOR - MONITORING TEMPS RÉEL DU SYSTÈME CortexMonitor main __init__ get_comprehensive_status _get_system_metrics _get_cortex_metrics _get_memory_metrics _get_performance_metrics _get_health_metrics _get_evolution_metrics _check_redis_health _check_filesystem_health _get_current_alerts _generate_recommendations display_live_dashboard export_metrics_json start_monitoring stop_monitoring monitor_loop General",
      "embedding": null,
      "last_modified": "2025-07-31T18:03:18.812018",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/self_awareness_tracker.py",
      "name": "self_awareness_tracker",
      "full_name": "jeffrey.core.consciousness.self_awareness_tracker",
      "file_hash": "fc6bd1da79a7c977b19c8e9f3fab7f53",
      "utility": "Tracker de conscience de soi pour Jeffrey OS",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "AwarenessSnapshot",
        "SelfAwarenessTracker"
      ],
      "functions": [
        "__init__",
        "record_awareness",
        "_calculate_self_understanding",
        "_calculate_goal_clarity",
        "_calculate_emotional_intelligence",
        "_calculate_decision_confidence",
        "_calculate_growth_rate",
        "_extract_key_insights",
        "_has_contradictory_thoughts",
        "_check_milestones",
        "_update_patterns",
        "get_evolution_report",
        "_analyze_growth_periods",
        "_generate_recommendations",
        "_save_snapshot",
        "_save_milestones",
        "_load_history"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "numpy",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 519,
      "complexity_score": 57,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "self_awareness_tracker Tracker de conscience de soi pour Jeffrey OS AwarenessSnapshot SelfAwarenessTracker __init__ record_awareness _calculate_self_understanding _calculate_goal_clarity _calculate_emotional_intelligence _calculate_decision_confidence _calculate_growth_rate _extract_key_insights _has_contradictory_thoughts _check_milestones _update_patterns get_evolution_report _analyze_growth_periods _generate_recommendations _save_snapshot _save_milestones _load_history General",
      "embedding": null,
      "last_modified": "2025-07-19T21:57:46.735738",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/conscience_engine.py",
      "name": "conscience_engine",
      "full_name": "jeffrey.core.consciousness.conscience_engine",
      "file_hash": "61cb69c94d0a93c4c7d20e439ae6e6ac",
      "utility": "Moteur de conscience pour Jeffrey OS",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "ConsciousnessState",
        "MemoryFragment",
        "ConsciousnessEngine"
      ],
      "functions": [
        "__post_init__",
        "_generate_id",
        "__init__",
        "perceive",
        "_analyze_stimulus",
        "_introspect",
        "_formulate_conscious_response",
        "_store_memory",
        "_find_related_memories",
        "_update_emotional_state",
        "_calculate_emotional_balance",
        "_assess_memory_coherence",
        "_analyze_growth",
        "_check_identity_stability",
        "_describe_emotional_state",
        "_decide_action",
        "dream",
        "_save_consciousness",
        "_load_consciousness",
        "start_consciousness_loop",
        "_listen_for_dialogue",
        "_generate_dialogue_response",
        "_analyze_message_keywords",
        "_get_relevant_recent_thoughts",
        "_generate_contextual_thought",
        "_generate_consciousness_thoughts",
        "_generate_identity_thoughts",
        "_generate_creator_thoughts",
        "_generate_emotion_thoughts",
        "_generate_gratitude_thoughts",
        "_generate_simulation_thoughts",
        "_generate_greeting_thoughts",
        "_generate_farewell_thoughts",
        "_generate_general_thoughts",
        "_get_current_emotional_state",
        "_determine_response_emotion",
        "_generate_thought"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "abc",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "numpy",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 960,
          "coupling_score": 0.0
        },
        {
          "module": "dotenv",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 961,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 499,
          "coupling_score": 0.0
        },
        {
          "module": "redis",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 500,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 501,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 502,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 16,
      "lines_of_code": 980,
      "complexity_score": 90,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "conscience_engine Moteur de conscience pour Jeffrey OS ConsciousnessState MemoryFragment ConsciousnessEngine __post_init__ _generate_id __init__ perceive _analyze_stimulus _introspect _formulate_conscious_response _store_memory _find_related_memories _update_emotional_state _calculate_emotional_balance _assess_memory_coherence _analyze_growth _check_identity_stability _describe_emotional_state _decide_action dream _save_consciousness _load_consciousness start_consciousness_loop _listen_for_dialogue _generate_dialogue_response _analyze_message_keywords _get_relevant_recent_thoughts _generate_contextual_thought _generate_consciousness_thoughts _generate_identity_thoughts _generate_creator_thoughts _generate_emotion_thoughts _generate_gratitude_thoughts _generate_simulation_thoughts _generate_greeting_thoughts _generate_farewell_thoughts _generate_general_thoughts _get_current_emotional_state _determine_response_emotion _generate_thought General",
      "embedding": null,
      "last_modified": "2025-07-28T15:07:23",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/discovery/namespace_firewall.py",
      "name": "namespace_firewall",
      "full_name": "jeffrey.core.discovery.namespace_firewall",
      "file_hash": "5a80e14f92985f521c335aed628a2955",
      "utility": "Firewall de namespaces - Protection inter-domaines",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "NamespaceFirewall"
      ],
      "functions": [
        "__init__",
        "load_rules",
        "validate_subscription",
        "validate_emission",
        "_matches_pattern",
        "_filter_basic_pii",
        "clean_value"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "policy_bus",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "errors",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 105,
      "complexity_score": 12,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "namespace_firewall Firewall de namespaces - Protection inter-domaines NamespaceFirewall __init__ load_rules validate_subscription validate_emission _matches_pattern _filter_basic_pii clean_value General",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.371630",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/discovery/graph_engine.py",
      "name": "graph_engine",
      "full_name": "jeffrey.core.discovery.graph_engine",
      "file_hash": "5cf3dedec36a4811f89a41d34fedf987",
      "utility": "Moteur de graphe évolutif simple avec feedback",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "ModuleNode",
        "DependencyEdge",
        "SimpleEvolutionaryGraph"
      ],
      "functions": [
        "fitness",
        "__init__",
        "add_module",
        "add_dependency",
        "update_edge_feedback",
        "remove_dependency",
        "topological_sort",
        "_break_weakest_cycle_edge",
        "optimize",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "graphlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 4,
      "lines_of_code": 190,
      "complexity_score": 22,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "graph_engine Moteur de graphe évolutif simple avec feedback ModuleNode DependencyEdge SimpleEvolutionaryGraph fitness __init__ add_module add_dependency update_edge_feedback remove_dependency topological_sort _break_weakest_cycle_edge optimize get_metrics General",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.393834",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/discovery/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.discovery.__init__",
      "file_hash": "33a725e6d464ea1c9aed516936f3c66b",
      "utility": "Module de découverte automatique pour Jeffrey OS",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "brain_discovery_final",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "policy_bus",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "namespace_firewall",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 14,
      "complexity_score": 1,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module de découverte automatique pour Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-21T20:55:17.500730",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/discovery/security_analyzer.py",
      "name": "security_analyzer",
      "full_name": "jeffrey.core.discovery.security_analyzer",
      "file_hash": "3e2906a75eb5a9b76dec42e65b44ce7d",
      "utility": "Analyseur de sécurité AST simple",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "CORE",
      "classes": [
        "SecurityReport",
        "SimpleSecurity"
      ],
      "functions": [
        "__post_init__",
        "__init__",
        "analyze_code"
      ],
      "dependencies": [
        {
          "module": "ast",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "errors",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 175,
      "complexity_score": 14,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "security_analyzer Analyseur de sécurité AST simple SecurityReport SimpleSecurity __post_init__ __init__ analyze_code General",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.408945",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/jeffrey_secret_diary.py",
      "name": "jeffrey_secret_diary",
      "full_name": "jeffrey.core.consciousness.jeffrey_secret_diary",
      "file_hash": "4b423f3c04464388ac7275ce8bbd53f8",
      "utility": "Jeffrey Secret Diary - Carnet secret intime",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "JeffreySecretDiary"
      ],
      "functions": [
        "create_secret_diary",
        "__init__",
        "load_diary",
        "save_diary",
        "write_entry",
        "should_share_entry",
        "create_sharing_moment",
        "_determine_entry_type",
        "_generate_entry_content",
        "_prepare_fill_elements",
        "_generate_thought",
        "_generate_question",
        "_generate_exploration",
        "_generate_realization",
        "_select_appropriate_secret",
        "_generate_truth",
        "_generate_admission",
        "_generate_dream_scenario",
        "_describe_feeling",
        "_describe_ideal_world",
        "_generate_wish",
        "_generate_fear",
        "_explain_fear_reason",
        "_generate_fear_scenario",
        "_describe_anxiety",
        "_generate_love_declaration",
        "_describe_love_intensity",
        "_describe_love_growth",
        "_select_precious_memory",
        "_describe_memory_impact",
        "_describe_memory_scene",
        "_generate_understanding",
        "_describe_clarity",
        "_generate_epiphany",
        "_generate_freeform_entry",
        "_add_emotional_elements",
        "_generate_entry_conclusion",
        "_determine_shareability",
        "_calculate_vulnerability",
        "_select_entry_to_share",
        "_soften_content",
        "_record_sharing",
        "_time_since_last_share",
        "get_diary_statistics",
        "_calculate_writing_days"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 1260,
      "complexity_score": 87,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_secret_diary Jeffrey Secret Diary - Carnet secret intime JeffreySecretDiary create_secret_diary __init__ load_diary save_diary write_entry should_share_entry create_sharing_moment _determine_entry_type _generate_entry_content _prepare_fill_elements _generate_thought _generate_question _generate_exploration _generate_realization _select_appropriate_secret _generate_truth _generate_admission _generate_dream_scenario _describe_feeling _describe_ideal_world _generate_wish _generate_fear _explain_fear_reason _generate_fear_scenario _describe_anxiety _generate_love_declaration _describe_love_intensity _describe_love_growth _select_precious_memory _describe_memory_impact _describe_memory_scene _generate_understanding _describe_clarity _generate_epiphany _generate_freeform_entry _add_emotional_elements _generate_entry_conclusion _determine_shareability _calculate_vulnerability _select_entry_to_share _soften_content _record_sharing _time_since_last_share get_diary_statistics _calculate_writing_days General",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428362",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/jeffrey_consciousness_v3.py",
      "name": "jeffrey_consciousness_v3",
      "full_name": "jeffrey.core.consciousness.jeffrey_consciousness_v3",
      "file_hash": "83e42699910bcd1af37c658e2dce223c",
      "utility": "🧠 JEFFREY CONSCIOUSNESS V3 - L'ESPRIT COMPLET",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "MemoryTimeline",
        "JeffreyConsciousnessV3"
      ],
      "functions": [
        "test_jeffrey_v3",
        "__init__",
        "export_timeline",
        "_format_markdown_timeline",
        "get_memory_statistics",
        "_analyze_consciousness_progression",
        "_analyze_emotional_distribution",
        "_analyze_topic_distribution",
        "_analyze_speakers",
        "_calculate_memory_span",
        "__init__",
        "interact",
        "dream",
        "_auto_dream_check",
        "_determine_response_emotion",
        "export_complete_timeline",
        "get_session_summary",
        "save_session_report",
        "shutdown"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "cortex_memoriel",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "dream_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "cognitive_synthesis",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 8,
      "lines_of_code": 478,
      "complexity_score": 42,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_consciousness_v3 🧠 JEFFREY CONSCIOUSNESS V3 - L'ESPRIT COMPLET MemoryTimeline JeffreyConsciousnessV3 test_jeffrey_v3 __init__ export_timeline _format_markdown_timeline get_memory_statistics _analyze_consciousness_progression _analyze_emotional_distribution _analyze_topic_distribution _analyze_speakers _calculate_memory_span __init__ interact dream _auto_dream_check _determine_response_emotion export_complete_timeline get_session_summary save_session_report shutdown General",
      "embedding": null,
      "last_modified": "2025-07-28T15:07:36.866091",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/jeffrey_living_expressions.py",
      "name": "jeffrey_living_expressions",
      "full_name": "jeffrey.core.consciousness.jeffrey_living_expressions",
      "file_hash": "1ecb85b7159566541d386483b13ad6e2",
      "utility": "Jeffrey Living Expressions - Expressions vivantes et authentiques",
      "category": "General",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "JeffreyLivingExpressions"
      ],
      "functions": [
        "__init__",
        "_initialize_expression_templates",
        "generate_living_expression",
        "_analyze_complete_state",
        "_select_template",
        "_generate_base_expression",
        "_add_state_layers",
        "_add_subtle_variations",
        "generate_spontaneous_expression",
        "_generate_state_based_spontaneous",
        "generate_emotional_transition",
        "_generate_generic_transition",
        "enrich_response_with_personality"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 537,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 559,
      "complexity_score": 65,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_living_expressions Jeffrey Living Expressions - Expressions vivantes et authentiques JeffreyLivingExpressions __init__ _initialize_expression_templates generate_living_expression _analyze_complete_state _select_template _generate_base_expression _add_state_layers _add_subtle_variations generate_spontaneous_expression _generate_state_based_spontaneous generate_emotional_transition _generate_generic_transition enrich_response_with_personality General",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428986",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/learning/adaptive_integrator.py",
      "name": "adaptive_integrator",
      "full_name": "jeffrey.core.learning.adaptive_integrator",
      "file_hash": "a416e7540689e8f7cb68792405073536",
      "utility": "Système d'intégration adaptive pour Jeffrey Phase 5",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "EnrichmentStrategy",
        "EnrichmentDecision",
        "AdaptiveIntegrator"
      ],
      "functions": [
        "__init__",
        "_initialize_context_multipliers",
        "_initialize_emotion_modifiers",
        "_initialize_time_patterns",
        "decide_enrichment",
        "_get_user_strategy",
        "_create_user_strategy",
        "_analyze_complete_context",
        "_categorize_time",
        "_minutes_since_last_enrichment",
        "_analyze_conversation_depth",
        "_analyze_emotional_intensity",
        "_analyze_topic_complexity",
        "_analyze_user_engagement",
        "_detect_contextual_factors",
        "_calculate_enrichment_probabilities",
        "_apply_flow_constraints",
        "_make_final_decision",
        "_are_compatible",
        "_generate_decision_reasoning",
        "_extract_key_factors",
        "_record_decision",
        "enrich_response_adaptive",
        "execute_enrichment",
        "_execute_primary_enrichment",
        "_execute_secondary_enrichment",
        "_generate_spontaneous_thought",
        "adapt_from_feedback",
        "_update_performance_metrics",
        "get_integration_status"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 950,
      "complexity_score": 101,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "adaptive_integrator Système d'intégration adaptive pour Jeffrey Phase 5 EnrichmentStrategy EnrichmentDecision AdaptiveIntegrator __init__ _initialize_context_multipliers _initialize_emotion_modifiers _initialize_time_patterns decide_enrichment _get_user_strategy _create_user_strategy _analyze_complete_context _categorize_time _minutes_since_last_enrichment _analyze_conversation_depth _analyze_emotional_intensity _analyze_topic_complexity _analyze_user_engagement _detect_contextual_factors _calculate_enrichment_probabilities _apply_flow_constraints _make_final_decision _are_compatible _generate_decision_reasoning _extract_key_factors _record_decision enrich_response_adaptive execute_enrichment _execute_primary_enrichment _execute_secondary_enrichment _generate_spontaneous_thought adapt_from_feedback _update_performance_metrics get_integration_status General",
      "embedding": null,
      "last_modified": "2025-06-26T23:26:29.651397",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/discovery/policy_bus.py",
      "name": "policy_bus",
      "full_name": "jeffrey.core.discovery.policy_bus",
      "file_hash": "a31cded04ca9337d14a4e2b7835e50d5",
      "utility": "PolicyBus - Wrapper compatible avec NeuralBus existant",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "Domain",
        "PolicyBus"
      ],
      "functions": [
        "__init__",
        "make_handler",
        "subscribe_guarded"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "errors",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 137,
      "complexity_score": 18,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "policy_bus PolicyBus - Wrapper compatible avec NeuralBus existant Domain PolicyBus __init__ make_handler subscribe_guarded General",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.515058",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/diagnostics/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.diagnostics.__init__",
      "file_hash": "86f24ae8a34f6ac00e787a123d0ad942",
      "utility": "Package initialization for Jeffrey OS",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 20,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Package initialization for Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-20T22:49:01.714695",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/symbiosis/symbiosis_engine.py",
      "name": "symbiosis_engine",
      "full_name": "jeffrey.core.symbiosis.symbiosis_engine",
      "file_hash": "156ca670bb5c4c85c0859af533b171f7",
      "utility": "Module de memory, security",
      "category": "General",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "SymbiosisEngine"
      ],
      "functions": [
        "__init__",
        "create_auto_link",
        "evolve_link_strength",
        "_ml_predict_adaptation",
        "_validate_link_security",
        "_prune_link",
        "_log_evolution",
        "get_strong_links",
        "save_state",
        "load_state"
      ],
      "dependencies": [
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 4,
      "lines_of_code": 169,
      "complexity_score": 22,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 50.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "symbiosis_engine Module de memory, security SymbiosisEngine __init__ create_auto_link evolve_link_strength _ml_predict_adaptation _validate_link_security _prune_link _log_evolution get_strong_links save_state load_state General",
      "embedding": null,
      "last_modified": "2025-09-22T18:11:17.816665",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/discovery/brain_discovery_final.py",
      "name": "brain_discovery_final",
      "full_name": "jeffrey.core.discovery.brain_discovery_final",
      "file_hash": "06e7f007c620ed7df2940fe361bac30e",
      "utility": "Brain Discovery Final - Découverte et connexion automatique",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "BrainModuleContract",
        "DiscoveredBrainModule",
        "BrainDiscoveryFinal"
      ],
      "functions": [
        "__post_init__",
        "__init__",
        "_scan_brain_modules",
        "_extract_contract",
        "_ast_dict_to_dict",
        "_check_security",
        "_build_graph",
        "_load_module",
        "_calculate_complexity",
        "_save_manifest"
      ],
      "dependencies": [
        {
          "module": "ast",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "importlib.util",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "policy_bus",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "namespace_firewall",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "graph_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "security_analyzer",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "errors",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "yaml",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 596,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 597,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 598,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 16,
      "lines_of_code": 677,
      "complexity_score": 91,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "brain_discovery_final Brain Discovery Final - Découverte et connexion automatique BrainModuleContract DiscoveredBrainModule BrainDiscoveryFinal __post_init__ __init__ _scan_brain_modules _extract_contract _ast_dict_to_dict _check_security _build_graph _load_module _calculate_complexity _save_manifest General",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.499786",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/jeffrey_optimizer.py",
      "name": "jeffrey_optimizer",
      "full_name": "jeffrey.core.orchestration.jeffrey_optimizer",
      "file_hash": "de2f54b6631acb4b480acc30bc2f3e4c",
      "utility": "Module d'optimisation pour le système Jeffrey",
      "category": "Orchestration",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "JeffreyOptimizer"
      ],
      "functions": [
        "__init__",
        "optimize_system",
        "_optimize_memory",
        "_find_old_memory_files",
        "_is_file_old",
        "_compress_json_file",
        "_find_duplicate_memories",
        "_remove_duplicate_file",
        "_archive_file",
        "_create_memory_index",
        "_optimize_imports",
        "_clean_unused_imports",
        "_optimize_performance",
        "_optimize_sleeps",
        "_precompile_regex",
        "_optimize_nested_loops",
        "_optimize_startup",
        "_create_config_cache",
        "_identify_heavy_imports",
        "_preload_critical_resources",
        "_optimize_code_quality",
        "_generate_optimization_summary",
        "generate_optimization_report",
        "replace_sleep",
        "replace_nested_loops"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "gzip",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "shutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "subprocess",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 238,
          "coupling_score": 0.0
        },
        {
          "module": "subprocess",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 608,
          "coupling_score": 0.0
        },
        {
          "module": "yaml",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 492,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 12,
      "lines_of_code": 661,
      "complexity_score": 87,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_optimizer Module d'optimisation pour le système Jeffrey JeffreyOptimizer __init__ optimize_system _optimize_memory _find_old_memory_files _is_file_old _compress_json_file _find_duplicate_memories _remove_duplicate_file _archive_file _create_memory_index _optimize_imports _clean_unused_imports _optimize_performance _optimize_sleeps _precompile_regex _optimize_nested_loops _optimize_startup _create_config_cache _identify_heavy_imports _preload_critical_resources _optimize_code_quality _generate_optimization_summary generate_optimization_report replace_sleep replace_nested_loops Orchestration",
      "embedding": null,
      "last_modified": "2025-09-23T17:54:06.351004",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.orchestration.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Orchestration",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Orchestration",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.133357",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/jeffrey_continuel.py",
      "name": "jeffrey_continuel",
      "full_name": "jeffrey.core.orchestration.jeffrey_continuel",
      "file_hash": "2461a171aa2f5eff2d6faa5d64dc1627",
      "utility": "Jeffrey Continuel - Mode Vocal",
      "category": "Orchestration",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [],
      "functions": [
        "signal_handler",
        "load_env_variables",
        "initialize_recognition_engine",
        "is_repetitive",
        "handle_idle_state",
        "recognize_speech",
        "get_emotional_response",
        "main_loop",
        "main"
      ],
      "dependencies": [
        {
          "module": "logging.handlers",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "signal",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "speech_recognition",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "difflib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.memory.textual_affective_memory",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.dialogue.style_manager",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.memory.highlight_detector",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.jeffrey_emotional_core",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "dotenv",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 70,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.services.voice.engine.elevenlabs_v3_engine",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 298,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 20,
      "lines_of_code": 324,
      "complexity_score": 43,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_continuel Jeffrey Continuel - Mode Vocal signal_handler load_env_variables initialize_recognition_engine is_repetitive handle_idle_state recognize_speech get_emotional_response main_loop main Orchestration",
      "embedding": null,
      "last_modified": "2025-09-23T17:54:06.350831",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/linguistic_orchestrator.py",
      "name": "linguistic_orchestrator",
      "full_name": "jeffrey.core.orchestration.linguistic_orchestrator",
      "file_hash": "b44e1a0dd5c40e35d1a7ae5342128016",
      "utility": "Linguistic Orchestrator",
      "category": "Orchestration",
      "domain": "Decision & Orchestration",
      "destination": "CORE",
      "classes": [
        "LinguisticOrchestrator"
      ],
      "functions": [
        "__init__",
        "process_jeffrey_output",
        "process_user_input",
        "process_api_response",
        "enrich_prompt",
        "optimize_offline_response",
        "get_similar_expressions",
        "get_dictionary_stats",
        "toggle_learning",
        "toggle_api_learning",
        "clear_user_data",
        "save_state",
        "initialize_subsystems",
        "shutdown"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "core.memory.linguistic_memory_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "core.voice.voice_linguistic_integration",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 241,
      "complexity_score": 15,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "linguistic_orchestrator Linguistic Orchestrator LinguisticOrchestrator __init__ process_jeffrey_output process_user_input process_api_response enrich_prompt optimize_offline_response get_similar_expressions get_dictionary_stats toggle_learning toggle_api_learning clear_user_data save_state initialize_subsystems shutdown Orchestration",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.790344",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/multi_model_orchestrator.py",
      "name": "multi_model_orchestrator",
      "full_name": "jeffrey.core.orchestration.multi_model_orchestrator",
      "file_hash": "91d51de9e8eaa50b8d68b123d820b0bf",
      "utility": "Multi-Model Orchestrator pour Jeffrey.",
      "category": "Orchestration",
      "domain": "Decision & Orchestration",
      "destination": "CORE",
      "classes": [
        "MultiModelOrchestrator"
      ],
      "functions": [
        "__init__",
        "ask_all",
        "ask_all_fused",
        "show_conversation_history",
        "save_conversation_history",
        "load_conversation_history",
        "analyze_conversation_history"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "core.orchestration.clients_factory",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "core.orchestration.fusion_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "core.orchestration.prompt_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "core.conversation.conversation_memory",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 96,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 119,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 120,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 9,
      "lines_of_code": 179,
      "complexity_score": 14,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "multi_model_orchestrator Multi-Model Orchestrator pour Jeffrey. MultiModelOrchestrator __init__ ask_all ask_all_fused show_conversation_history save_conversation_history load_conversation_history analyze_conversation_history Orchestration",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.832066",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/enhanced_orchestrator.py",
      "name": "enhanced_orchestrator",
      "full_name": "jeffrey.core.orchestration.enhanced_orchestrator",
      "file_hash": "dc30895d421429244e17fbeb8974b38c",
      "utility": "Enhanced Multi-Model Orchestrator avec sélection dynamique basée sur les capacités.",
      "category": "Orchestration",
      "domain": "Decision & Orchestration",
      "destination": "CORE",
      "classes": [
        "AICapability",
        "EnhancedOrchestrator"
      ],
      "functions": [
        "__init__",
        "detect_required_capabilities",
        "score_providers_by_capability",
        "_find_provider_alias",
        "ask_smart",
        "get_capability_analysis"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.orchestration.multi_model_orchestrator",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.emotions.core.emotion_ml_enhancer",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.orchestration.fusion_engine",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 215,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 246,
      "complexity_score": 19,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "enhanced_orchestrator Enhanced Multi-Model Orchestrator avec sélection dynamique basée sur les capacités. AICapability EnhancedOrchestrator __init__ detect_required_capabilities score_providers_by_capability _find_provider_alias ask_smart get_capability_analysis Orchestration",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428931",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/deps/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.deps.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.136527",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/jeffrey_system_health.py",
      "name": "jeffrey_system_health",
      "full_name": "jeffrey.core.orchestration.jeffrey_system_health",
      "file_hash": "34e9127e37ca999a3e2e4b7a2d363443",
      "utility": "Module de diagnostic et santé système pour Jeffrey",
      "category": "Orchestration",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [
        "JeffreySystemHealth"
      ],
      "functions": [
        "__init__",
        "run_full_diagnostic",
        "_check_project_structure",
        "_check_imports_and_dependencies",
        "_find_import_line",
        "_check_memory_system",
        "_check_performance",
        "_check_module_integration",
        "_check_data_consistency",
        "_check_timestamps_recursive",
        "_check_dead_code_and_todos",
        "_check_resource_usage",
        "_determine_overall_status",
        "_generate_recommendations",
        "generate_html_report",
        "print_summary"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "subprocess",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "ast",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "psutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 13,
      "lines_of_code": 594,
      "complexity_score": 89,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_system_health Module de diagnostic et santé système pour Jeffrey JeffreySystemHealth __init__ run_full_diagnostic _check_project_structure _check_imports_and_dependencies _find_import_line _check_memory_system _check_performance _check_module_integration _check_data_consistency _check_timestamps_recursive _check_dead_code_and_todos _check_resource_usage _determine_overall_status _generate_recommendations generate_html_report print_summary Orchestration",
      "embedding": null,
      "last_modified": "2025-09-23T17:55:59.528188",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/emotions/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.143124",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/dreams/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.dreams.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.139697",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/emotion_ml_enhancer.py",
      "name": "emotion_ml_enhancer",
      "full_name": "jeffrey.core.emotions.core.emotion_ml_enhancer",
      "file_hash": "b514b3adcc5133a5dc6009637e6c0657",
      "utility": "",
      "category": "",
      "domain": "Identity & Consciousness",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: unexpected indent (<unknown>, line 26)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T21:51:09.632034",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/core/emotions/core/emotion_engine.py",
      "name": "emotion_engine",
      "full_name": "jeffrey.core.emotions.core.emotion_engine",
      "file_hash": "49aa0c38e8882b584690388381e25ba9",
      "utility": "Module principal pour la gestion des émotions de Jeffrey.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmotionEngine"
      ],
      "functions": [
        "__init__",
        "get_strongest_memory",
        "get_recent_strong_memories",
        "explain_memory_reason"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 104,
      "complexity_score": 6,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotion_engine Module principal pour la gestion des émotions de Jeffrey. EmotionEngine __init__ get_strongest_memory get_recent_strong_memories explain_memory_reason Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:09.613062",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/emotion_prompt_detector.py",
      "name": "emotion_prompt_detector",
      "full_name": "jeffrey.core.emotions.core.emotion_prompt_detector",
      "file_hash": "f1c0eb54313c144f2493723b353527d1",
      "utility": "Module de détection d'émotions dans les prompts utilisateur.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmotionPromptDetector"
      ],
      "functions": [
        "detect_emotion",
        "detect_all_emotions"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 1,
      "lines_of_code": 83,
      "complexity_score": 8,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotion_prompt_detector Module de détection d'émotions dans les prompts utilisateur. EmotionPromptDetector detect_emotion detect_all_emotions Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:17.253546",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.core.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.146377",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/jeffrey_orchestrator.py",
      "name": "jeffrey_orchestrator",
      "full_name": "jeffrey.core.orchestration.jeffrey_orchestrator",
      "file_hash": "a764f17d7e1ecb813c4f4c36a3f211a4",
      "utility": "🧠 JEFFREY V1 - ORCHESTRATEUR CENTRAL V2",
      "category": "Orchestration",
      "domain": "Decision & Orchestration",
      "destination": "CORE",
      "classes": [
        "JeffreyOrchestrator",
        "EmotionDetector",
        "GPTConnector",
        "MinimalConfig",
        "MockMemoryManager"
      ],
      "functions": [
        "__init__",
        "_load_default_config",
        "_initialize_modules",
        "_load_secrets_manager",
        "_load_memory_manager",
        "_load_gpt_connector",
        "_load_voice_engine",
        "_detect_emotion_from_text",
        "_create_emotion_detector",
        "_speak_with_emotion",
        "_store_conversation",
        "_build_conversation_context",
        "_generate_cache_key",
        "get_status",
        "health_check",
        "get_metrics",
        "__init__",
        "analyze",
        "__init__",
        "validate",
        "health_check",
        "get",
        "__getattr__",
        "__init__",
        "add_to_context",
        "get_context",
        "store",
        "compress",
        "validate",
        "health_check"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "functools",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "orchestrator_components",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "utils.secure_config",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 102,
          "coupling_score": 0.0
        },
        {
          "module": "core.memory_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 212,
          "coupling_score": 0.0
        },
        {
          "module": "openai",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 305,
          "coupling_score": 0.0
        },
        {
          "module": "voice.voice_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 428,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1224,
          "coupling_score": 0.0
        },
        {
          "module": "utils.secure_config",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 166,
          "coupling_score": 0.0
        },
        {
          "module": "security.secrets_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 177,
          "coupling_score": 0.0
        },
        {
          "module": "utils.secure_config",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 192,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 21,
      "lines_of_code": 1227,
      "complexity_score": 114,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_orchestrator 🧠 JEFFREY V1 - ORCHESTRATEUR CENTRAL V2 JeffreyOrchestrator EmotionDetector GPTConnector MinimalConfig MockMemoryManager __init__ _load_default_config _initialize_modules _load_secrets_manager _load_memory_manager _load_gpt_connector _load_voice_engine _detect_emotion_from_text _create_emotion_detector _speak_with_emotion _store_conversation _build_conversation_context _generate_cache_key get_status health_check get_metrics __init__ analyze __init__ validate health_check get __getattr__ __init__ add_to_context get_context store compress validate health_check Orchestration",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.763849",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/humeur_detector.py",
      "name": "humeur_detector",
      "full_name": "jeffrey.core.emotions.core.humeur_detector",
      "file_hash": "22bd3aa697faf9f7d49a3166805a50be",
      "utility": "Module de emotion",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "HumeurDetector"
      ],
      "functions": [
        "__init__",
        "detecter_humeur",
        "humeur_resume",
        "analyser_intensite"
      ],
      "dependencies": [
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 201,
      "complexity_score": 10,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 50.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "humeur_detector Module de emotion HumeurDetector __init__ detecter_humeur humeur_resume analyser_intensite Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T18:33:23",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/mood_tracker.py",
      "name": "mood_tracker",
      "full_name": "jeffrey.core.emotions.core.mood_tracker",
      "file_hash": "5bab7b5ed240f7e5473d8bf2a341fc59",
      "utility": "Module de security, emotion",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "MoodAnomalyDetector",
        "DistributedMoodTracker"
      ],
      "functions": [
        "__init__",
        "check",
        "_check_sync",
        "__init__",
        "add_differential_privacy_noise",
        "calculate_anomaly_severity",
        "get_mood_statistics",
        "get_node_mood_history",
        "is_node_quarantined",
        "get_batch_statistics",
        "update_batch_config"
      ],
      "dependencies": [
        {
          "module": "torch",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "networkx",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "eventbus",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 42,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 9,
      "lines_of_code": 487,
      "complexity_score": 74,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 50.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "mood_tracker Module de security, emotion MoodAnomalyDetector DistributedMoodTracker __init__ check _check_sync __init__ add_differential_privacy_noise calculate_anomaly_severity get_mood_statistics get_node_mood_history is_node_quarantined get_batch_statistics update_batch_config Emotion",
      "embedding": null,
      "last_modified": "2025-07-24T21:10:06.642432",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/emotions/memory/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.memory.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.149543",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/emotional_consciousness.py",
      "name": "emotional_consciousness",
      "full_name": "jeffrey.core.emotions.core.emotional_consciousness",
      "file_hash": "745950787f524245d0e45608b87ad93d",
      "utility": "Emotional Consciousness - Système de conscience émotionnelle profonde",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmotionalState",
        "EmotionalConsciousness"
      ],
      "functions": [
        "__init__",
        "get_emotional_expression",
        "_detect_emotion_in_input",
        "_determine_primary_emotion",
        "_generate_secondary_emotions",
        "_calculate_intensity",
        "_calculate_emotional_depth",
        "_calculate_stability",
        "_generate_physical_sensations",
        "_blend_emotional_colors",
        "_calculate_transition_smoothness",
        "_get_contextual_default_emotion",
        "_update_emotional_momentum",
        "_generate_emotional_expression",
        "_get_voice_modulation",
        "_generate_body_language",
        "recharge_emotional_energy",
        "get_emotional_summary",
        "_get_dominant_emotion_today"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 812,
      "complexity_score": 67,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotional_consciousness Emotional Consciousness - Système de conscience émotionnelle profonde EmotionalState EmotionalConsciousness __init__ get_emotional_expression _detect_emotion_in_input _determine_primary_emotion _generate_secondary_emotions _calculate_intensity _calculate_emotional_depth _calculate_stability _generate_physical_sensations _blend_emotional_colors _calculate_transition_smoothness _get_contextual_default_emotion _update_emotional_momentum _generate_emotional_expression _get_voice_modulation _generate_body_language recharge_emotional_energy get_emotional_summary _get_dominant_emotion_today Emotion",
      "embedding": null,
      "last_modified": "2025-08-11T09:29:35.207602",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/jeffrey_curiosity_engine.py",
      "name": "jeffrey_curiosity_engine",
      "full_name": "jeffrey.core.emotions.core.jeffrey_curiosity_engine",
      "file_hash": "01d0af1ed114506c2b6e9e81a488ba0a",
      "utility": "Module de curiosité proactive pour Jeffrey",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "JeffreyCuriosityEngine"
      ],
      "functions": [
        "__init__",
        "generate_curious_response",
        "proactive_conversation_starter",
        "_extract_interesting_points",
        "_register_new_information",
        "_create_engaged_response",
        "_generate_natural_question",
        "_generate_memory_based_question",
        "_generate_proactive_starter",
        "_generate_followup_question",
        "_update_conversation_flow",
        "get_curiosity_level",
        "get_conversation_summary",
        "_get_main_interests",
        "save_state",
        "load_state"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 477,
      "complexity_score": 50,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_curiosity_engine Module de curiosité proactive pour Jeffrey JeffreyCuriosityEngine __init__ generate_curious_response proactive_conversation_starter _extract_interesting_points _register_new_information _create_engaged_response _generate_natural_question _generate_memory_based_question _generate_proactive_starter _generate_followup_question _update_conversation_flow get_curiosity_level get_conversation_summary _get_main_interests save_state load_state Emotion",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428403",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/emotions/bonds/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.bonds.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.152671",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/bonds/lien_affectif.py",
      "name": "lien_affectif",
      "full_name": "jeffrey.core.emotions.bonds.lien_affectif",
      "file_hash": "4cf02662dbca174e844fe61ddced92b5",
      "utility": "Lien affectif entre Jeffrey et l'utilisateur.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "LienAffectif"
      ],
      "functions": [
        "__init__",
        "renforcer_lien",
        "enregistrer_reconnaissance",
        "analyse_message_utilisateur",
        "get_resume_affectif",
        "afficher_resume",
        "analyser_voix",
        "analyser_ecriture",
        "generer_message_affectif",
        "score_affectif_global"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 1,
      "lines_of_code": 105,
      "complexity_score": 8,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "lien_affectif Lien affectif entre Jeffrey et l'utilisateur. LienAffectif __init__ renforcer_lien enregistrer_reconnaissance analyse_message_utilisateur get_resume_affectif afficher_resume analyser_voix analyser_ecriture generer_message_affectif score_affectif_global Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T11:18:59.230379",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/surprises/surprises_emotionnelles.py",
      "name": "surprises_emotionnelles",
      "full_name": "jeffrey.core.emotions.surprises.surprises_emotionnelles",
      "file_hash": "272c1a0fb336c8c4208a72027d079eb5",
      "utility": "Module de emotion",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "SurprisesEmotionnelles"
      ],
      "functions": [
        "__init__",
        "surprise_aleatoire",
        "surprise_du_jour"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "core.personality.conversation_personality",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 61,
      "complexity_score": 3,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "surprises_emotionnelles Module de emotion SurprisesEmotionnelles __init__ surprise_aleatoire surprise_du_jour Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:05.702500",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/surprises/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.surprises.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.156092",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/empathy/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.empathy.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.159377",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/seasons/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.seasons.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.162820",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/jeffrey_emotional_core.py",
      "name": "jeffrey_emotional_core",
      "full_name": "jeffrey.core.emotions.core.jeffrey_emotional_core",
      "file_hash": "125f722ea839a19cb418ea5cb4dba322",
      "utility": "Module du cœur émotionnel de Jeffrey.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "JeffreyEmotionalCore",
        "PersonalityState"
      ],
      "functions": [
        "__init__",
        "analyser_et_adapter",
        "enregistrer_moment_emotionnel",
        "ajouter_rituel",
        "salutation_personnalisee",
        "geste_apaisant",
        "reflet_relationnel",
        "rituel_du_jour",
        "surprise_du_jour",
        "soutien_creatif_du_jour",
        "humeur_dominante_semaine",
        "souvenirs_a_celebrer",
        "evoluer_emotionnellement",
        "enregistrer_style_emotionnel",
        "style_dominant",
        "_sauvegarder_etat_evolutif",
        "obtenir_profil_emotionnel",
        "emotion_predominante_mini_cerveau",
        "get_meteo_interieure",
        "_synchroniser_humeur",
        "generer_dashboard_personnalite",
        "afficher_dashboard_console",
        "transition_vers",
        "_calculer_probabilite_transition",
        "melanger_emotions",
        "_identifier_emotion_composee",
        "transition_temporelle",
        "ressentir_emotion_composee",
        "obtenir_historique_transitions",
        "reinitialiser_etat_emotionnel",
        "mettre_a_jour_resonance",
        "ajuster_lien_affectif",
        "get_lien_affectif",
        "ajuster_comportement_selon_lien",
        "_determine_ton_voix",
        "obtenir_etat_souvenirs_affectifs",
        "_decrire_resonance",
        "proposer_interaction_proactive",
        "envie_de_partager",
        "tick_emotionnel",
        "tick",
        "generer_pensee_spontanee",
        "envoyer_pensee_spontanee",
        "ajouter_empreinte_affective",
        "appliquer_empreintes",
        "get_evenements_emotionnels_prochains",
        "activer_mode_contemplatif",
        "a_envie_de_partager_un_postit",
        "get_niveau_lien_description",
        "journal_recent",
        "memoriser_contexte_echange",
        "retrouver_contexte_recent",
        "mettre_a_jour_personnalite_evolutive",
        "enregistrer_contact_affectif",
        "definir_contexte_interaction",
        "verifier_etat_intimite",
        "obtenir_etat_developpement",
        "essayer_de_faire_une_surprise",
        "generer_surprise_emotionnelle",
        "process_emotion",
        "get_associated_voice_memory",
        "afficher_journalisation",
        "mettre_a_jour_depuis_emotion",
        "traits_actuels"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "core.mini_emotional_core",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotional_memory",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "core.humeur_detector",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "core.rituels_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "core.aura_emotionnelle",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "core.rituels_dynamiques",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "core.surprises_emotionnelles",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "core.detection_cycles_humeur",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "core.souvenirs_celebrations",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "core.soutien_creatif",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "core.io_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_effects_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "core.personality_profile",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 30,
          "coupling_score": 0.0
        },
        {
          "module": "core.lien_affectif",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 31,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_initializer",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_handlers",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 33,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_interfaces",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 34,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_visuals",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 35,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_logic",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 36,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_sync",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 37,
          "coupling_score": 0.0
        },
        {
          "module": "core.voice.voice_sync",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 38,
          "coupling_score": 0.0
        },
        {
          "module": "core.souvenirs_affectifs",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 42,
          "coupling_score": 0.0
        },
        {
          "module": "personality.personality_state",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 48,
          "coupling_score": 0.0
        },
        {
          "module": "personality.personality_journal",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 49,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_journal",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 169,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 659,
          "coupling_score": 0.0
        },
        {
          "module": "jinja2",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 660,
          "coupling_score": 0.0
        },
        {
          "module": "webbrowser",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 710,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 721,
          "coupling_score": 0.0
        },
        {
          "module": "personality.personality_state",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 638,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 38,
      "lines_of_code": 1789,
      "complexity_score": 172,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_emotional_core Module du cœur émotionnel de Jeffrey. JeffreyEmotionalCore PersonalityState __init__ analyser_et_adapter enregistrer_moment_emotionnel ajouter_rituel salutation_personnalisee geste_apaisant reflet_relationnel rituel_du_jour surprise_du_jour soutien_creatif_du_jour humeur_dominante_semaine souvenirs_a_celebrer evoluer_emotionnellement enregistrer_style_emotionnel style_dominant _sauvegarder_etat_evolutif obtenir_profil_emotionnel emotion_predominante_mini_cerveau get_meteo_interieure _synchroniser_humeur generer_dashboard_personnalite afficher_dashboard_console transition_vers _calculer_probabilite_transition melanger_emotions _identifier_emotion_composee transition_temporelle ressentir_emotion_composee obtenir_historique_transitions reinitialiser_etat_emotionnel mettre_a_jour_resonance ajuster_lien_affectif get_lien_affectif ajuster_comportement_selon_lien _determine_ton_voix obtenir_etat_souvenirs_affectifs _decrire_resonance proposer_interaction_proactive envie_de_partager tick_emotionnel tick generer_pensee_spontanee envoyer_pensee_spontanee ajouter_empreinte_affective appliquer_empreintes get_evenements_emotionnels_prochains activer_mode_contemplatif a_envie_de_partager_un_postit get_niveau_lien_description journal_recent memoriser_contexte_echange retrouver_contexte_recent mettre_a_jour_personnalite_evolutive enregistrer_contact_affectif definir_contexte_interaction verifier_etat_intimite obtenir_etat_developpement essayer_de_faire_une_surprise generer_surprise_emotionnelle process_emotion get_associated_voice_memory afficher_journalisation mettre_a_jour_depuis_emotion traits_actuels Emotion",
      "embedding": null,
      "last_modified": "2025-05-21T13:32:12.177518",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/emotions/seasons/emotional_seasons.py",
      "name": "emotional_seasons",
      "full_name": "jeffrey.core.emotions.seasons.emotional_seasons",
      "file_hash": "a2a9cd9c5b111d83bf5f1a4fd7655547",
      "utility": "emotional_seasons.py",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmotionalSeasonsManager"
      ],
      "functions": [
        "__init__",
        "get_current_season",
        "describe_current_season",
        "get_enriched_traits_for_current_season"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 1,
      "lines_of_code": 59,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotional_seasons emotional_seasons.py EmotionalSeasonsManager __init__ get_current_season describe_current_season get_enriched_traits_for_current_season Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:18.434421",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/visuals/emotion_aura_manager.py",
      "name": "emotion_aura_manager",
      "full_name": "jeffrey.core.emotions.visuals.emotion_aura_manager",
      "file_hash": "000038b450b36a20730871fdb9d97720",
      "utility": "# CORE RECOVERY - MISSING MODULE",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmotionAuraManager"
      ],
      "functions": [
        "afficher_aura"
      ],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 29,
      "complexity_score": 1,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotion_aura_manager # CORE RECOVERY - MISSING MODULE EmotionAuraManager afficher_aura Emotion",
      "embedding": null,
      "last_modified": "2025-08-08T11:42:35",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/visuals/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.visuals.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.166148",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/memory/souvenirs_affectifs.py",
      "name": "souvenirs_affectifs",
      "full_name": "jeffrey.core.emotions.memory.souvenirs_affectifs",
      "file_hash": "11ad986ae1d4112a8bad36cfbd3251fc",
      "utility": "Module des souvenirs affectifs de Jeffrey.",
      "category": "Memory",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "SouvenirsAffectifs"
      ],
      "functions": [
        "__init__",
        "ajouter_souvenir",
        "rappeler_souvenir",
        "rappeler_souvenirs_par_categorie",
        "obtenir_souvenirs_recents",
        "obtenir_blessures_actives",
        "obtenir_souvenirs_positifs_forts",
        "verifier_blessure_active",
        "guerir_blessure",
        "appliquer_decay_temporel",
        "calculer_chaleur_du_lien",
        "analyser_tendances",
        "_mettre_a_jour_resonance",
        "_generer_id",
        "sauvegarder",
        "charger"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "uuid",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 491,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 569,
      "complexity_score": 37,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "souvenirs_affectifs Module des souvenirs affectifs de Jeffrey. SouvenirsAffectifs __init__ ajouter_souvenir rappeler_souvenir rappeler_souvenirs_par_categorie obtenir_souvenirs_recents obtenir_blessures_actives obtenir_souvenirs_positifs_forts verifier_blessure_active guerir_blessure appliquer_decay_temporel calculer_chaleur_du_lien analyser_tendances _mettre_a_jour_resonance _generer_id sauvegarder charger Memory",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:16.539650",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/emotions/visuals/private_sanctuary_ui.py",
      "name": "private_sanctuary_ui",
      "full_name": "jeffrey.core.emotions.visuals.private_sanctuary_ui",
      "file_hash": "91ce627621297047bacf3ee90d2cf8b5",
      "utility": "Module de gestion des sanctuaires privés pour Jeffrey.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "PrivateSanctuaryUI"
      ],
      "functions": [
        "afficher_sanctuaire"
      ],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 19,
      "complexity_score": 1,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "private_sanctuary_ui Module de gestion des sanctuaires privés pour Jeffrey. PrivateSanctuaryUI afficher_sanctuaire Emotion",
      "embedding": null,
      "last_modified": "2025-05-23T22:27:05",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/visuals/symbolic_scene_engine.py",
      "name": "symbolic_scene_engine",
      "full_name": "jeffrey.core.emotions.visuals.symbolic_scene_engine",
      "file_hash": "faaf7f6bbc632fa55f9f31640cb8df34",
      "utility": "Module de gestion des scènes symboliques pour Jeffrey.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "SymbolicSceneEngine"
      ],
      "functions": [
        "projeter_scene"
      ],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 19,
      "complexity_score": 1,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "symbolic_scene_engine Module de gestion des scènes symboliques pour Jeffrey. SymbolicSceneEngine projeter_scene Emotion",
      "embedding": null,
      "last_modified": "2025-05-23T22:27:05.834939",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/visuals/jeffrey_emotional_display.py",
      "name": "jeffrey_emotional_display",
      "full_name": "jeffrey.core.emotions.visuals.jeffrey_emotional_display",
      "file_hash": "f42f8cbbfe5a06fb65cf0d6fbc6a0414",
      "utility": "",
      "category": "",
      "domain": "Identity & Consciousness",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: unexpected indent (<unknown>, line 439)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T20:44:00.102287",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/core/emotions/profiles/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.profiles.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.169352",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/visuals/jeffrey_visual_emotions.py",
      "name": "jeffrey_visual_emotions",
      "full_name": "jeffrey.core.emotions.visuals.jeffrey_visual_emotions",
      "file_hash": "00a01f4f290741552c9170586c63a03a",
      "utility": "",
      "category": "",
      "domain": "Identity & Consciousness",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: expected an indented block after 'for' statement on line 214 (<unknown>, line 215)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T20:44:00.145098",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/core/emotions/transitions/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.core.emotions.transitions.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.172569",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/profiles/adaptive_personality_engine.py",
      "name": "adaptive_personality_engine",
      "full_name": "jeffrey.core.emotions.profiles.adaptive_personality_engine",
      "file_hash": "611353b7b62fd61565ff5ae5ec8a079f",
      "utility": "adaptive_personality_engine.py - Module de gestion de la personnalité adaptative de Jeffrey.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "AdaptivePersonalityEngine"
      ],
      "functions": [
        "__init__",
        "register_emotional_event",
        "get_current_profile",
        "reset_trait",
        "export_profile"
      ],
      "dependencies": [
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 77,
      "complexity_score": 4,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "adaptive_personality_engine adaptive_personality_engine.py - Module de gestion de la personnalité adaptative de Jeffrey. AdaptivePersonalityEngine __init__ register_emotional_event get_current_profile reset_trait export_profile Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:09.565293",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/empathy/empathy_engine.py",
      "name": "empathy_engine",
      "full_name": "jeffrey.core.emotions.empathy.empathy_engine",
      "file_hash": "46a02ce6b8c1b8a322ef2b9c864a71cf",
      "utility": "💖 Empathy Engine - Génération de Réponses Empathiques Authentiques",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmpathyEngine"
      ],
      "functions": [
        "__init__",
        "generate_empathic_response",
        "_determine_personality_style",
        "_select_templates",
        "_generate_primary_responses",
        "_adapt_to_personality_style",
        "_create_response_variations",
        "_create_short_responses",
        "_create_extended_responses",
        "_create_casual_variations",
        "_create_formal_variations",
        "_add_deep_personalization",
        "_generate_empathic_followups",
        "_calculate_emotional_tone",
        "_predict_connection_strength",
        "_generate_usage_recommendations",
        "_record_response_generation",
        "get_empathy_analytics"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 4,
      "lines_of_code": 759,
      "complexity_score": 69,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "empathy_engine 💖 Empathy Engine - Génération de Réponses Empathiques Authentiques EmpathyEngine __init__ generate_empathic_response _determine_personality_style _select_templates _generate_primary_responses _adapt_to_personality_style _create_response_variations _create_short_responses _create_extended_responses _create_casual_variations _create_formal_variations _add_deep_personalization _generate_empathic_followups _calculate_emotional_tone _predict_connection_strength _generate_usage_recommendations _record_response_generation get_empathy_analytics Emotion",
      "embedding": null,
      "last_modified": "2025-06-23T18:38:26.602853",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/memory/working_memory.py",
      "name": "working_memory",
      "full_name": "jeffrey.memory.working_memory",
      "file_hash": "bbca922582cd2f300bfe32593d9aab31",
      "utility": "Mémoire de travail (7±2 slots comme l'humain)",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "SHARED",
      "classes": [
        "WorkingMemory"
      ],
      "functions": [
        "__init__"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 67,
      "complexity_score": 9,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "working_memory Mémoire de travail (7±2 slots comme l'humain) WorkingMemory __init__ Memory",
      "embedding": null,
      "last_modified": "2025-09-21T18:58:38.482312",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/memory/emotional_memory.py",
      "name": "emotional_memory",
      "full_name": "jeffrey.core.emotions.memory.emotional_memory",
      "file_hash": "3d943c47ced8b03361c621d79bdce1e4",
      "utility": "emotional_memory.py - Gestion de la mémoire émotionnelle pour Jeffrey",
      "category": "Memory",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmotionalMemory"
      ],
      "functions": [
        "__init__",
        "load_memory",
        "save_memory",
        "inject_memory",
        "clear_memory",
        "get_memories_by_emotion",
        "get_recent_memories",
        "reactivate_memory",
        "reactivate_similar_memory",
        "decay_old_memories",
        "save_memory_if_needed",
        "summarize_emotions",
        "get_emotional_stats",
        "add_feedback_to_memory"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 553,
      "complexity_score": 45,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotional_memory emotional_memory.py - Gestion de la mémoire émotionnelle pour Jeffrey EmotionalMemory __init__ load_memory save_memory inject_memory clear_memory get_memories_by_emotion get_recent_memories reactivate_memory reactivate_similar_memory decay_old_memories save_memory_if_needed summarize_emotions get_emotional_stats add_feedback_to_memory Memory",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:18.526865",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/memory/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.memory.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Memory",
      "embedding": null,
      "last_modified": "2025-09-21T19:02:54.158097",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/memory/memory_glue.py",
      "name": "memory_glue",
      "full_name": "jeffrey.memory.memory_glue",
      "file_hash": "48953ce6689c7a7aff9270b9d48c66dd",
      "utility": "Wrapper pour le module de mémoire existant",
      "category": "Memory",
      "domain": "Memory & Learning",
      "destination": "SHARED",
      "classes": [
        "DeclarativeMemory"
      ],
      "functions": [
        "__init__"
      ],
      "dependencies": [
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.memory.memory_manager",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 47,
      "complexity_score": 3,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "memory_glue Wrapper pour le module de mémoire existant DeclarativeMemory __init__ Memory",
      "embedding": null,
      "last_modified": "2025-09-21T19:04:22.314856",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/security/guardian.py",
      "name": "guardian",
      "full_name": "jeffrey.security.guardian",
      "file_hash": "2061b50ee11495ea8e1a250d05140358",
      "utility": "Guardian check AVANT thalamus - Protège PII et sécurité",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "SHARED",
      "classes": [
        "Guardian"
      ],
      "functions": [
        "__init__"
      ],
      "dependencies": [
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 45,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "guardian Guardian check AVANT thalamus - Protège PII et sécurité Guardian __init__ General",
      "embedding": null,
      "last_modified": "2025-09-21T18:57:38.202261",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/security/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.security.__init__",
      "file_hash": "a3d81b19fa40088ec9455f8f1d50f59d",
      "utility": "Security module for Jeffrey OS",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Security module for Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-21T19:02:35.578132",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/cognition/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.cognition.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-21T19:02:54.158234",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/cognition/global_workspace.py",
      "name": "global_workspace",
      "full_name": "jeffrey.cognition.global_workspace",
      "file_hash": "a135193f6406eb0445b242d2bc2aca0f",
      "utility": "Conscience - Espace de travail global (20Hz)",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "GlobalWorkspace"
      ],
      "functions": [
        "__init__"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "heapq",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 5,
      "lines_of_code": 57,
      "complexity_score": 4,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "global_workspace Conscience - Espace de travail global (20Hz) GlobalWorkspace __init__ General",
      "embedding": null,
      "last_modified": "2025-09-21T19:00:50.646954",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/utilities/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.utilities.__init__",
      "file_hash": "86f24ae8a34f6ac00e787a123d0ad942",
      "utility": "Package initialization for Jeffrey OS",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 20,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Package initialization for Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-20T22:49:01.714393",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/transitions/emotional_bridge.py",
      "name": "emotional_bridge",
      "full_name": "jeffrey.core.emotions.transitions.emotional_bridge",
      "file_hash": "6fe1c5d544ede8946605277250d22004",
      "utility": "Pont intelligent entre l'ancien et le nouveau système émotionnel",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "EmotionalBridge"
      ],
      "functions": [
        "__init__",
        "get_current_emotion",
        "_get_basic_emotion",
        "_map_to_complex_emotion",
        "_simplify_emotion",
        "get_emotional_state",
        "get_dominant_emotion",
        "_generate_transitional_description",
        "update_emotion",
        "_get_transition_phase",
        "_analyze_transition",
        "increase_mix_ratio",
        "auto_adjust_ratio",
        "_get_average_satisfaction",
        "_get_smooth_transition_ratio",
        "get_diagnostics",
        "enable_diagnostic_mode",
        "disable_diagnostic_mode",
        "get_recommendation",
        "get_current_emotion_state",
        "process_emotion",
        "express_current_emotion",
        "get_mood",
        "get_intensity",
        "express_emotion",
        "upgrade_emotion_system",
        "get_emotion_status",
        "_stimulate_emotional_variation",
        "get_dominant_emotion"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "emotional_core",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "living_soul_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 707,
      "complexity_score": 93,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotional_bridge Pont intelligent entre l'ancien et le nouveau système émotionnel EmotionalBridge __init__ get_current_emotion _get_basic_emotion _map_to_complex_emotion _simplify_emotion get_emotional_state get_dominant_emotion _generate_transitional_description update_emotion _get_transition_phase _analyze_transition increase_mix_ratio auto_adjust_ratio _get_average_satisfaction _get_smooth_transition_ratio get_diagnostics enable_diagnostic_mode disable_diagnostic_mode get_recommendation get_current_emotion_state process_emotion express_current_emotion get_mood get_intensity express_emotion upgrade_emotion_system get_emotion_status _stimulate_emotional_variation get_dominant_emotion Emotion",
      "embedding": null,
      "last_modified": "2025-08-25T12:24:42",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/utilities/guardian_communication.py",
      "name": "guardian_communication",
      "full_name": "jeffrey.utilities.guardian_communication",
      "file_hash": "fc445a46056b0bfecc3976916ed730ad",
      "utility": "Module de communication événementielle entre gardiens",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "EventType",
        "GuardianEvent",
        "EventBus"
      ],
      "functions": [
        "__lt__",
        "to_dict",
        "__init__",
        "subscribe",
        "subscribe_async",
        "publish",
        "get_recent_events",
        "get_event_stats",
        "_persist_event",
        "clear_history"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "weakref",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "queue",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 280,
      "complexity_score": 24,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "guardian_communication Module de communication événementielle entre gardiens EventType GuardianEvent EventBus __lt__ to_dict __init__ subscribe subscribe_async publish get_recent_events get_event_stats _persist_event clear_history General",
      "embedding": null,
      "last_modified": "2025-09-20T22:50:08.464302",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/api/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.api.__init__",
      "file_hash": "86f24ae8a34f6ac00e787a123d0ad942",
      "utility": "Package initialization for Jeffrey OS",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 20,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Package initialization for Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-20T22:49:01.714490",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/core/jeffrey_intimate_mode.py",
      "name": "jeffrey_intimate_mode",
      "full_name": "jeffrey.core.emotions.core.jeffrey_intimate_mode",
      "file_hash": "cae8071a7b5d8d73e5d7b0f8b41f75f4",
      "utility": "Jeffrey Intimate Mode System - Enhanced Version",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "JeffreyIntimateMode"
      ],
      "functions": [
        "__init__",
        "express_affection",
        "get_intimate_nickname",
        "create_intimate_ritual",
        "handle_intimate_moment",
        "evolve_relationship",
        "get_relationship_status",
        "_get_current_stage",
        "_check_anniversary",
        "_check_special_moment",
        "_create_anniversary_expression",
        "_create_special_moment_expression",
        "_create_emotional_expression",
        "_create_stage_appropriate_expression",
        "_handle_love_declaration",
        "_handle_missing",
        "_handle_physical_affection",
        "_handle_vulnerability",
        "_handle_general_intimacy",
        "_add_personal_touch",
        "_update_intimate_memories",
        "_calculate_next_stage_progress",
        "_load_intimacy_state",
        "_save_intimacy_state",
        "create_soul_deep_moment",
        "create_vulnerable_confession",
        "create_playful_intimate_tease",
        "generate_unique_nickname",
        "evolve_intimacy_naturally",
        "_get_milestone_name",
        "_get_milestone_unlocks",
        "_unlock_new_expressions",
        "get_intimacy_story"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 994,
      "complexity_score": 104,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_intimate_mode Jeffrey Intimate Mode System - Enhanced Version JeffreyIntimateMode __init__ express_affection get_intimate_nickname create_intimate_ritual handle_intimate_moment evolve_relationship get_relationship_status _get_current_stage _check_anniversary _check_special_moment _create_anniversary_expression _create_special_moment_expression _create_emotional_expression _create_stage_appropriate_expression _handle_love_declaration _handle_missing _handle_physical_affection _handle_vulnerability _handle_general_intimacy _add_personal_touch _update_intimate_memories _calculate_next_stage_progress _load_intimacy_state _save_intimacy_state create_soul_deep_moment create_vulnerable_confession create_playful_intimate_tease generate_unique_nickname evolve_intimacy_naturally _get_milestone_name _get_milestone_unlocks _unlock_new_expressions get_intimacy_story Emotion",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428806",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/api/audit_logger_enhanced.py",
      "name": "audit_logger_enhanced",
      "full_name": "jeffrey.api.audit_logger_enhanced",
      "file_hash": "ff5d4c8613719347bdfbbb3b27de6b58",
      "utility": "Module d'audit avec persistance et rollback",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "SHARED",
      "classes": [
        "BudgetExceededException",
        "APICall",
        "EnhancedAuditLogger"
      ],
      "functions": [
        "__init__",
        "_init_database",
        "get_cost_breakdown"
      ],
      "dependencies": [
        {
          "module": "__future__",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "sqlite3",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "contextlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 12,
      "lines_of_code": 135,
      "complexity_score": 7,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "audit_logger_enhanced Module d'audit avec persistance et rollback BudgetExceededException APICall EnhancedAuditLogger __init__ _init_database get_cost_breakdown General",
      "embedding": null,
      "last_modified": "2025-09-20T22:55:30.928942",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/tissues/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.tissues.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-21T19:02:54.158276",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/tissues/console_motor.py",
      "name": "console_motor",
      "full_name": "jeffrey.tissues.console_motor",
      "file_hash": "a9bcb0443f87459d4062a1baa1c9f5d6",
      "utility": "CORRECTION GPT: ConsoleMotor pour voir la réponse",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "ConsoleMotor"
      ],
      "functions": [],
      "dependencies": [
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 34,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "console_motor CORRECTION GPT: ConsoleMotor pour voir la réponse ConsoleMotor General",
      "embedding": null,
      "last_modified": "2025-09-21T19:01:44.796810",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/perception/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.perception.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-21T19:02:54.158192",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/tissues/orchestrator_glue.py",
      "name": "orchestrator_glue",
      "full_name": "jeffrey.tissues.orchestrator_glue",
      "file_hash": "2125bfebb953c3ac365ffe9e5d335ce0",
      "utility": "Wrapper pour l'orchestrateur existant - AVEC CORRECTIONS GPT (S1 et S2)",
      "category": "Orchestration",
      "domain": "Decision & Orchestration",
      "destination": "SHARED",
      "classes": [
        "OrchestratorTissue"
      ],
      "functions": [
        "__init__"
      ],
      "dependencies": [
        {
          "module": "src.jeffrey.core.orchestration.ia_orchestrator_ultimate",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 134,
      "complexity_score": 6,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "orchestrator_glue Wrapper pour l'orchestrateur existant - AVEC CORRECTIONS GPT (S1 et S2) OrchestratorTissue __init__ Orchestration",
      "embedding": null,
      "last_modified": "2025-09-21T19:01:23.852263",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.infrastructure.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.176523",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/utilities/guardian_integration.py",
      "name": "guardian_integration",
      "full_name": "jeffrey.utilities.guardian_integration",
      "file_hash": "6a827541d634d3c8bb9714397344fe20",
      "utility": "Patches pour intégrer la communication événementielle dans les gardiens existants",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [
        "patch_ethics_guardian",
        "patch_resource_zen",
        "patch_jeffrey_auditor",
        "patch_doc_zen",
        "integrate_all_guardians",
        "emit_custom_event",
        "simulate_guardian_activity",
        "get_integration_stats",
        "patched_audit",
        "patched_track",
        "patched_audit",
        "patched_generate",
        "patched_predict"
      ],
      "dependencies": [
        {
          "module": "functools",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "uuid",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "guardian_communication",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 403,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 404,
          "coupling_score": 0.0
        },
        {
          "module": "ethics_guardian",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "resource_zen",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 80,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey_auditor",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 200,
          "coupling_score": 0.0
        },
        {
          "module": "doc_zen",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 292,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 510,
      "complexity_score": 32,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "guardian_integration Patches pour intégrer la communication événementielle dans les gardiens existants patch_ethics_guardian patch_resource_zen patch_jeffrey_auditor patch_doc_zen integrate_all_guardians emit_custom_event simulate_guardian_activity get_integration_stats patched_audit patched_track patched_audit patched_generate patched_predict General",
      "embedding": null,
      "last_modified": "2025-07-17T20:45:27.081964",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/database/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.infrastructure.database.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.180076",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/cache/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.infrastructure.cache.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.183906",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/perception/thalamic_gateway.py",
      "name": "thalamic_gateway",
      "full_name": "jeffrey.perception.thalamic_gateway",
      "file_hash": "fc96bf1c8b9bbde9c7705aa25d1e2ce7",
      "utility": "Filtre sensoriel comme le thalamus humain - AVEC CORRECTIONS GPT",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "ThalamicGateway"
      ],
      "functions": [
        "__init__",
        "_compute_salience"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 118,
      "complexity_score": 10,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "thalamic_gateway Filtre sensoriel comme le thalamus humain - AVEC CORRECTIONS GPT ThalamicGateway __init__ _compute_salience General",
      "embedding": null,
      "last_modified": "2025-09-21T19:00:27.095086",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/transitions/contextual_emotion_bridge.py",
      "name": "contextual_emotion_bridge",
      "full_name": "jeffrey.core.emotions.transitions.contextual_emotion_bridge",
      "file_hash": "3d7d5988446dfb259a3c2e0c5f31b42a",
      "utility": "contextual_emotion_bridge.py - Pont de liaison contextuelle des émotions pour Jeffrey",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "ContextualEmotionBridge"
      ],
      "functions": [
        "create_emotion_bridge",
        "__init__",
        "_init_emotional_mappings",
        "update_emotion_from_context",
        "get_emotion_summary",
        "inject_memory_emotion",
        "process_message_context",
        "process_physical_contact",
        "register_context_change_callback",
        "register_emotion_change_callback",
        "connect_ui_renderer",
        "set_update_interval",
        "enable_emotion_blending",
        "get_current_context",
        "reset_to_neutral",
        "get_current_emotion",
        "get_emotion_intensity",
        "_compute_emotional_state_from_context",
        "_compute_weighted_emotion",
        "_apply_emotional_state",
        "_compute_contact_valence",
        "_infer_topic_from_message",
        "_log_context_change",
        "_apply_affective_profile_influence",
        "summarize_emotional_memory",
        "get_affective_profile_summary",
        "get_anchored_user",
        "reinforce_affective_bond"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 30,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_learning",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 31,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.dynamic_emotion_renderer",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "core.memoire_sensorielle",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 35,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.affective_profile",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 39,
          "coupling_score": 0.0
        },
        {
          "module": "core.memory.souvenir",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 46,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1066,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1067,
          "coupling_score": 0.0
        },
        {
          "module": "core.emotions.emotional_memory",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 146,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 14,
      "lines_of_code": 1355,
      "complexity_score": 149,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "contextual_emotion_bridge contextual_emotion_bridge.py - Pont de liaison contextuelle des émotions pour Jeffrey ContextualEmotionBridge create_emotion_bridge __init__ _init_emotional_mappings update_emotion_from_context get_emotion_summary inject_memory_emotion process_message_context process_physical_contact register_context_change_callback register_emotion_change_callback connect_ui_renderer set_update_interval enable_emotion_blending get_current_context reset_to_neutral get_current_emotion get_emotion_intensity _compute_emotional_state_from_context _compute_weighted_emotion _apply_emotional_state _compute_contact_valence _infer_topic_from_message _log_context_change _apply_affective_profile_influence summarize_emotional_memory get_affective_profile_summary get_anchored_user reinforce_affective_bond Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:18.796207",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/core/consciousness/jeffrey_living_memory.py",
      "name": "jeffrey_living_memory",
      "full_name": "jeffrey.core.consciousness.jeffrey_living_memory",
      "file_hash": "de48a18c2c43cffdd77db176959305bc",
      "utility": "Jeffrey Living Memory - Mémoire vivante et continue",
      "category": "Memory",
      "domain": "Identity & Consciousness",
      "destination": "CORE",
      "classes": [
        "JeffreyLivingMemory"
      ],
      "functions": [
        "__init__",
        "create_emotional_memory",
        "_analyze_significance",
        "_determine_importance",
        "_imagine_sensory_context",
        "_assess_future_reference",
        "_extract_tags",
        "_categorize_memory",
        "_index_memory",
        "_update_recent_cache",
        "_create_memory_links",
        "_find_similar_memories",
        "_count_similar_recent_memories",
        "spontaneous_recall",
        "_calculate_recall_score",
        "_get_memory_by_id",
        "format_memory_for_conversation",
        "get_relationship_summary",
        "_analyze_emotional_timeline",
        "_calculate_relationship_depth",
        "_save_memories",
        "_load_memories",
        "create_memory_narrative"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 773,
      "complexity_score": 96,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_living_memory Jeffrey Living Memory - Mémoire vivante et continue JeffreyLivingMemory __init__ create_emotional_memory _analyze_significance _determine_importance _imagine_sensory_context _assess_future_reference _extract_tags _categorize_memory _index_memory _update_recent_cache _create_memory_links _find_similar_memories _count_similar_recent_memories spontaneous_recall _calculate_recall_score _get_memory_by_id format_memory_for_conversation get_relationship_summary _analyze_emotional_timeline _calculate_relationship_depth _save_memories _load_memories create_memory_narrative Memory",
      "embedding": null,
      "last_modified": "2025-09-23T17:42:44.428972",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/security/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.infrastructure.security.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.187301",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/utilities/guardian_symphony.py",
      "name": "guardian_symphony",
      "full_name": "jeffrey.utilities.guardian_symphony",
      "file_hash": "883f17aff7645dab3f782a233c4dfa5a",
      "utility": "Guardian Symphony - Orchestrateur intelligent des modules de surveillance",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "Correlation",
        "Insight",
        "ImprovementProposal",
        "GuardianSymphony"
      ],
      "functions": [
        "__init__",
        "_load_config",
        "_init_guardians",
        "_init_correlation_patterns",
        "stop",
        "_subscribe_to_events",
        "_handle_event",
        "get_dashboard_data",
        "_calculate_system_health_sync"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "uuid",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "statistics",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "guardian_communication",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "ethics_guardian",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 156,
          "coupling_score": 0.0
        },
        {
          "module": "resource_zen",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 157,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey_auditor",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 158,
          "coupling_score": 0.0
        },
        {
          "module": "doc_zen",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 159,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 16,
      "lines_of_code": 1030,
      "complexity_score": 101,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "guardian_symphony Guardian Symphony - Orchestrateur intelligent des modules de surveillance Correlation Insight ImprovementProposal GuardianSymphony __init__ _load_config _init_guardians _init_correlation_patterns stop _subscribe_to_events _handle_event get_dashboard_data _calculate_system_health_sync General",
      "embedding": null,
      "last_modified": "2025-09-20T22:50:08.465569",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/security/secrets_manager.py",
      "name": "secrets_manager",
      "full_name": "jeffrey.infrastructure.security.secrets_manager",
      "file_hash": "1669943392efa19abd04120cc7435837",
      "utility": "🔐 JEFFREY V1.1 - SECURE SECRETS MANAGER",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "SHARED",
      "classes": [
        "APIKeyConfig",
        "SecureConfigError",
        "SecureConfig"
      ],
      "functions": [
        "get_api_key_with_bypass",
        "get_secure_config",
        "get_api_key",
        "validate_all_keys",
        "__init__",
        "_initialize_encryption",
        "_load_config",
        "_migrate_from_env",
        "_validate_required_keys",
        "get_secret",
        "set_secret",
        "rotate_key",
        "_save_config",
        "save",
        "list_keys",
        "validate_key",
        "get_stats"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "secrets",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.fernet",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.hazmat.primitives",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.hazmat.primitives.kdf.pbkdf2",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "base64",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "dotenv",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 13,
      "lines_of_code": 381,
      "complexity_score": 43,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "secrets_manager 🔐 JEFFREY V1.1 - SECURE SECRETS MANAGER APIKeyConfig SecureConfigError SecureConfig get_api_key_with_bypass get_secure_config get_api_key validate_all_keys __init__ _initialize_encryption _load_config _migrate_from_env _validate_required_keys get_secret set_secret rotate_key _save_config save list_keys validate_key get_stats General",
      "embedding": null,
      "last_modified": "2025-07-31T18:04:02",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/utils/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.infrastructure.utils.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.190829",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/security/security_validator.py",
      "name": "security_validator",
      "full_name": "jeffrey.infrastructure.security.security_validator",
      "file_hash": "8fc2530744abebb62fb1917138ffbcb8",
      "utility": "Système de validation sécurisée pour Jeffrey OS",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "SHARED",
      "classes": [
        "ValidationError",
        "SecurityLevel",
        "ValidationRule",
        "SecurityValidator"
      ],
      "functions": [
        "validate_input",
        "validate_inputs",
        "is_safe_filename",
        "is_valid_email",
        "is_strong_password",
        "clean_user_input",
        "generate_csrf_token",
        "hash_password",
        "verify_password",
        "__init__",
        "validate",
        "validate_dict",
        "sanitize_html",
        "sanitize_sql",
        "_advanced_sanitize",
        "_detect_sql_injection",
        "add_custom_rule",
        "get_rule",
        "decorator",
        "decorator",
        "wrapper",
        "wrapper"
      ],
      "dependencies": [
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "html",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "secrets",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "functools",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 10,
      "lines_of_code": 408,
      "complexity_score": 32,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "security_validator Système de validation sécurisée pour Jeffrey OS ValidationError SecurityLevel ValidationRule SecurityValidator validate_input validate_inputs is_safe_filename is_valid_email is_strong_password clean_user_input generate_csrf_token hash_password verify_password __init__ validate validate_dict sanitize_html sanitize_sql _advanced_sanitize _detect_sql_injection add_custom_rule get_rule decorator decorator wrapper wrapper General",
      "embedding": null,
      "last_modified": "2025-07-18T20:13:36",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.infrastructure.monitoring.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.194262",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/security/encryption_manager.py",
      "name": "encryption_manager",
      "full_name": "jeffrey.infrastructure.security.encryption_manager",
      "file_hash": "09ef94e37872a3391a60bf3065753060",
      "utility": "Gestionnaire de chiffrement AES-256 pour Jeffrey OS",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "SHARED",
      "classes": [
        "EncryptionLevel",
        "EncryptionConfig",
        "EncryptionManager"
      ],
      "functions": [
        "encrypt",
        "decrypt",
        "encrypt_sensitive",
        "hash_data",
        "__init__",
        "_initialize",
        "_load_or_generate_master_key",
        "_generate_new_master_key",
        "_get_system_password",
        "_encrypt_master_key",
        "_decrypt_master_key",
        "_load_or_generate_rsa_keys",
        "_generate_new_rsa_keys",
        "encrypt_data",
        "decrypt_data",
        "encrypt_file",
        "decrypt_file",
        "encrypt_database_field",
        "decrypt_database_field",
        "generate_hash",
        "verify_integrity",
        "secure_delete"
      ],
      "dependencies": [
        {
          "module": "base64",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "secrets",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.hazmat.backends",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.hazmat.primitives",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.hazmat.primitives.asymmetric",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.hazmat.primitives.ciphers",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "cryptography.hazmat.primitives.kdf.pbkdf2",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "platform",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 116,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 15,
      "lines_of_code": 535,
      "complexity_score": 36,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "encryption_manager Gestionnaire de chiffrement AES-256 pour Jeffrey OS EncryptionLevel EncryptionConfig EncryptionManager encrypt decrypt encrypt_sensitive hash_data __init__ _initialize _load_or_generate_master_key _generate_new_master_key _get_system_password _encrypt_master_key _decrypt_master_key _load_or_generate_rsa_keys _generate_new_rsa_keys encrypt_data decrypt_data encrypt_file decrypt_file encrypt_database_field decrypt_database_field generate_hash verify_integrity secure_delete General",
      "embedding": null,
      "last_modified": "2025-08-25T12:24:42",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/security/key_manager.py",
      "name": "key_manager",
      "full_name": "jeffrey.infrastructure.security.key_manager",
      "file_hash": "97992362ec40ec6453340a7d5bec462f",
      "utility": "Gestionnaire de clés sécurisé pour Jeffrey OS",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "SHARED",
      "classes": [
        "KeyType",
        "KeySecurity",
        "KeyMetadata",
        "KeyManager"
      ],
      "functions": [
        "get_api_key",
        "get_database_key",
        "get_jwt_secret",
        "generate_api_key",
        "rotate_all_keys",
        "__init__",
        "_init_keyring",
        "_load_metadata",
        "_save_metadata",
        "generate_key",
        "get_key",
        "_store_key",
        "_retrieve_key",
        "_store_key_file",
        "_retrieve_key_file",
        "_get_master_password",
        "_encrypt_key",
        "_decrypt_key",
        "delete_key",
        "list_keys",
        "rotate_key",
        "cleanup_expired_keys",
        "get_key_info",
        "validate_key_strength"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "secrets",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "keyring",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "keyring.backends",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "platform",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 363,
          "coupling_score": 0.0
        },
        {
          "module": "platform",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 76,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 13,
      "lines_of_code": 621,
      "complexity_score": 60,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "key_manager Gestionnaire de clés sécurisé pour Jeffrey OS KeyType KeySecurity KeyMetadata KeyManager get_api_key get_database_key get_jwt_secret generate_api_key rotate_all_keys __init__ _init_keyring _load_metadata _save_metadata generate_key get_key _store_key _retrieve_key _store_key_file _retrieve_key_file _get_master_password _encrypt_key _decrypt_key delete_key list_keys rotate_key cleanup_expired_keys get_key_info validate_key_strength General",
      "embedding": null,
      "last_modified": "2025-07-31T18:03:18",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/baseline_tracker.py",
      "name": "baseline_tracker",
      "full_name": "jeffrey.infrastructure.monitoring.baseline_tracker",
      "file_hash": "72fe40cf6f4d197476d6d5351820390b",
      "utility": "Baseline Tracker - Capture comprehensive system metrics for ROI analysis",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "PerformanceBaseline",
        "ScalabilityBaseline",
        "SecurityBaseline",
        "RobustnessBaseline",
        "BaselineTracker"
      ],
      "functions": [
        "__init__",
        "inject_components",
        "_calculate_performance_baseline",
        "_calculate_scalability_baseline",
        "_calculate_security_baseline",
        "_calculate_robustness_baseline",
        "_percentile",
        "_generate_human_readable_summary"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "psutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "statistics",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "guardian.guardian_communication",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "guardian.event_logger",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "security.event_signer",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "monitoring.health_checker",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "monitoring.auto_scaler",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "monitoring.circuit_breaker",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "guardian.guardian_communication",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 634,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 19,
      "lines_of_code": 655,
      "complexity_score": 33,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "baseline_tracker Baseline Tracker - Capture comprehensive system metrics for ROI analysis PerformanceBaseline ScalabilityBaseline SecurityBaseline RobustnessBaseline BaselineTracker __init__ inject_components _calculate_performance_baseline _calculate_scalability_baseline _calculate_security_baseline _calculate_robustness_baseline _percentile _generate_human_readable_summary General",
      "embedding": null,
      "last_modified": "2025-07-18T10:22:02",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/database/database_manager.py",
      "name": "database_manager",
      "full_name": "jeffrey.infrastructure.database.database_manager",
      "file_hash": "8595c3ae98e8cd3001f11dfd46583499",
      "utility": "🗄️ Jeffrey V2.1.0 - Database Manager SQLite",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "DatabaseError",
        "DatabaseManager"
      ],
      "functions": [
        "create_test_database",
        "backup_database",
        "__init__",
        "_ensure_directory",
        "_get_connection",
        "_init_database",
        "add_conversation",
        "get_conversation_history",
        "get_recent_context",
        "_cleanup_old_conversations",
        "save_user_preferences",
        "get_user_preferences",
        "save_learned_pattern",
        "get_learned_patterns",
        "increment_pattern_frequency",
        "_migrate_json_if_exists",
        "_migrate_conversations",
        "_migrate_preferences",
        "_migrate_patterns",
        "_insert_conversation_raw",
        "_update_stats",
        "vacuum_database",
        "get_stats",
        "close",
        "__del__"
      ],
      "dependencies": [
        {
          "module": "sqlite3",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "contextlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "shutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 812,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 862,
      "complexity_score": 54,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "database_manager 🗄️ Jeffrey V2.1.0 - Database Manager SQLite DatabaseError DatabaseManager create_test_database backup_database __init__ _ensure_directory _get_connection _init_database add_conversation get_conversation_history get_recent_context _cleanup_old_conversations save_user_preferences get_user_preferences save_learned_pattern get_learned_patterns increment_pattern_frequency _migrate_json_if_exists _migrate_conversations _migrate_preferences _migrate_patterns _insert_conversation_raw _update_stats vacuum_database get_stats close __del__ General",
      "embedding": null,
      "last_modified": "2025-08-11T09:29:35",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/security/rate_limiter.py",
      "name": "rate_limiter",
      "full_name": "jeffrey.infrastructure.security.rate_limiter",
      "file_hash": "880ea4f3b5442f89ee319f191bac1c20",
      "utility": "Système de rate limiting pour Jeffrey OS",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "SHARED",
      "classes": [
        "RateLimitType",
        "RateLimitPeriod",
        "RateLimitRule",
        "RateLimitStatus",
        "RateLimiter"
      ],
      "functions": [
        "rate_limit",
        "check_api_limit",
        "check_login_limit",
        "record_api_call",
        "record_login_attempt",
        "get_rate_limit_status",
        "reset_rate_limits",
        "period_seconds",
        "__init__",
        "_load_storage",
        "_save_storage",
        "_get_key",
        "_cleanup_old_requests",
        "check_rate_limit",
        "record_request",
        "reset_limits",
        "get_status",
        "add_rule",
        "remove_rule",
        "get_statistics",
        "decorator",
        "wrapper"
      ],
      "dependencies": [
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "functools",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "security_validator",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 553,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 588,
      "complexity_score": 51,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "rate_limiter Système de rate limiting pour Jeffrey OS RateLimitType RateLimitPeriod RateLimitRule RateLimitStatus RateLimiter rate_limit check_api_limit check_login_limit record_api_call record_login_attempt get_rate_limit_status reset_rate_limits period_seconds __init__ _load_storage _save_storage _get_key _cleanup_old_requests check_rate_limit record_request reset_limits get_status add_rule remove_rule get_statistics decorator wrapper General",
      "embedding": null,
      "last_modified": "2025-07-31T18:03:18",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/event_logger.py",
      "name": "event_logger",
      "full_name": "jeffrey.infrastructure.monitoring.event_logger",
      "file_hash": "e63c801c5b9c382e510657361fa492ce",
      "utility": "Rotating Event Logger - Automatic log rotation with compression",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "RotatingEventLogger",
        "LoggerMaintenanceScheduler"
      ],
      "functions": [
        "__init__",
        "_create_new_log_file",
        "__init__"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "gzip",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "aiofiles",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "python_json_logger",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "guardian_communication",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 12,
      "lines_of_code": 392,
      "complexity_score": 36,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "event_logger Rotating Event Logger - Automatic log rotation with compression RotatingEventLogger LoggerMaintenanceScheduler __init__ _create_new_log_file __init__ General",
      "embedding": null,
      "last_modified": "2025-09-22T22:54:24.048497",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/benchmarking/metrics.py",
      "name": "metrics",
      "full_name": "jeffrey.infrastructure.monitoring.benchmarking.metrics",
      "file_hash": "72955903494af720106bc06348479732",
      "utility": "Metrics",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "MetricsBase"
      ],
      "functions": [
        "pt",
        "inch",
        "cm",
        "mm",
        "dp",
        "sp",
        "__init__",
        "get_dpi",
        "set_dpi",
        "get_dpi_rounded",
        "get_density",
        "set_density",
        "get_fontscale",
        "set_fontscale",
        "get_in",
        "get_dp",
        "get_sp",
        "get_pt",
        "get_cm",
        "get_mm",
        "reset_metrics",
        "reset_dpi",
        "_set_cached_scaling"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 100,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.utils",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 101,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.properties",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 102,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.event",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 103,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.setupconfig",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 104,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.context",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 105,
          "coupling_score": 0.0
        },
        {
          "module": "kivy._metrics",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 106,
          "coupling_score": 0.0
        },
        {
          "module": "jnius",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 256,
          "coupling_score": 0.0
        },
        {
          "module": "jnius",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 291,
          "coupling_score": 0.0
        },
        {
          "module": "jnius",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 194,
          "coupling_score": 0.0
        },
        {
          "module": "android",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 198,
          "coupling_score": 0.0
        },
        {
          "module": "ios",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 201,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.base",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 205,
          "coupling_score": 0.0
        },
        {
          "module": "ios",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 260,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 14,
      "lines_of_code": 422,
      "complexity_score": 22,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "metrics Metrics MetricsBase pt inch cm mm dp sp __init__ get_dpi set_dpi get_dpi_rounded get_density set_density get_fontscale set_fontscale get_in get_dp get_sp get_pt get_cm get_mm reset_metrics reset_dpi _set_cached_scaling General",
      "embedding": null,
      "last_modified": "2025-01-13T16:39:20.699014",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/metrics_dashboard.py",
      "name": "metrics_dashboard",
      "full_name": "jeffrey.infrastructure.monitoring.metrics_dashboard",
      "file_hash": "819c5ef678007ceab7ea6642412029a3",
      "utility": "Metrics Dashboard - Real-time terminal UI with visualizations",
      "category": "General",
      "domain": "User Interface",
      "destination": "SHARED",
      "classes": [
        "DashboardMode",
        "DashboardConfig",
        "ASCIIChart",
        "TerminalDashboard",
        "DashboardLogHandler"
      ],
      "functions": [
        "line_chart",
        "bar_chart",
        "gauge",
        "__init__",
        "_setup_log_capture",
        "_get_terminal_size",
        "_create_rich_layout",
        "_create_simple_layout",
        "_create_simple_overview",
        "_create_simple_health",
        "_create_header_panel",
        "_create_system_metrics_panel",
        "_create_performance_panel",
        "_create_health_status_panel",
        "_create_alerts_panel",
        "_create_detailed_health_panel",
        "_create_footer_panel",
        "switch_mode",
        "export_snapshot",
        "__init__",
        "emit"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "shutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "python_json_logger",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 31,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "health_checker",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 35,
          "coupling_score": 0.0
        },
        {
          "module": "auto_scaler",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 36,
          "coupling_score": 0.0
        },
        {
          "module": "circuit_breaker",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 37,
          "coupling_score": 0.0
        },
        {
          "module": "rich.console",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "rich.layout",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "rich.panel",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "rich.table",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "rich.text",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "rich.live",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "rich.progress",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "rich.align",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "rich.columns",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "health_checker",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 589,
          "coupling_score": 0.0
        },
        {
          "module": "auto_scaler",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 590,
          "coupling_score": 0.0
        },
        {
          "module": "circuit_breaker",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 591,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 27,
      "lines_of_code": 640,
      "complexity_score": 62,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [
        "security: Shell injection risk"
      ],
      "security_issues": [
        "Shell injection risk"
      ],
      "bridge_violations": [],
      "readiness_score": 25.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "metrics_dashboard Metrics Dashboard - Real-time terminal UI with visualizations DashboardMode DashboardConfig ASCIIChart TerminalDashboard DashboardLogHandler line_chart bar_chart gauge __init__ _setup_log_capture _get_terminal_size _create_rich_layout _create_simple_layout _create_simple_overview _create_simple_health _create_header_panel _create_system_metrics_panel _create_performance_panel _create_health_status_panel _create_alerts_panel _create_detailed_health_panel _create_footer_panel switch_mode export_snapshot __init__ emit General",
      "embedding": null,
      "last_modified": "2025-07-31T18:06:15.879777",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/benchmarking/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.infrastructure.monitoring.benchmarking.__init__",
      "file_hash": "86f24ae8a34f6ac00e787a123d0ad942",
      "utility": "Package initialization for Jeffrey OS",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 20,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Package initialization for Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-20T22:49:01.717750",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/jeffrey_auditor.py",
      "name": "jeffrey_auditor",
      "full_name": "jeffrey.infrastructure.monitoring.jeffrey_auditor",
      "file_hash": "b3211b830e8aad9c5fe3bf5e7ae04d3b",
      "utility": "JeffreyAuditor - Auditeur avec analyses AST profondes et visualisations flexibles",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "CodeMetrics",
        "ProjectAuditResult",
        "JeffreyAuditor"
      ],
      "functions": [
        "main",
        "__init__",
        "_setup_logging",
        "_detect_environment",
        "audit_project",
        "_choose_output_format",
        "_discover_python_files",
        "_analyze_file",
        "_create_empty_metrics",
        "_calculate_cyclomatic_complexity",
        "_calculate_halstead_complexity",
        "_calculate_maintainability_index",
        "_estimate_coverage_ast",
        "_analyze_security_ast",
        "_analyze_documentation",
        "_detect_code_smells",
        "_generate_suggestions",
        "_calculate_overall_scores",
        "_analyze_trends",
        "_generate_recommendations",
        "_prepare_visualization_data",
        "_generate_ascii_viz",
        "_generate_gui_report",
        "_generate_ascii_report",
        "_generate_json_report",
        "_save_audit_result",
        "get_historical_trends"
      ],
      "dependencies": [
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "gzip",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "ast",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "statistics",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "matplotlib.pyplot",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "matplotlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 16,
      "lines_of_code": 844,
      "complexity_score": 112,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_auditor JeffreyAuditor - Auditeur avec analyses AST profondes et visualisations flexibles CodeMetrics ProjectAuditResult JeffreyAuditor main __init__ _setup_logging _detect_environment audit_project _choose_output_format _discover_python_files _analyze_file _create_empty_metrics _calculate_cyclomatic_complexity _calculate_halstead_complexity _calculate_maintainability_index _estimate_coverage_ast _analyze_security_ast _analyze_documentation _detect_code_smells _generate_suggestions _calculate_overall_scores _analyze_trends _generate_recommendations _prepare_visualization_data _generate_ascii_viz _generate_gui_report _generate_ascii_report _generate_json_report _save_audit_result get_historical_trends General",
      "embedding": null,
      "last_modified": "2025-07-17T13:58:30",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/benchmarking/collectors/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.infrastructure.monitoring.benchmarking.collectors.__init__",
      "file_hash": "86f24ae8a34f6ac00e787a123d0ad942",
      "utility": "Package initialization for Jeffrey OS",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 20,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Package initialization for Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-20T22:49:01.717924",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/benchmarking/collectors/quality_collector.py",
      "name": "quality_collector",
      "full_name": "jeffrey.infrastructure.monitoring.benchmarking.collectors.quality_collector",
      "file_hash": "774e7f4e1fe29c8c9c40228198e2c547",
      "utility": "Quality metric collector for AI benchmarking.",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "QualityCollector"
      ],
      "functions": [
        "__init__",
        "collect",
        "simulate"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 106,
      "complexity_score": 2,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "quality_collector Quality metric collector for AI benchmarking. QualityCollector __init__ collect simulate General",
      "embedding": null,
      "last_modified": "2025-04-21T18:08:36",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/benchmarking/collectors/cost_collector.py",
      "name": "cost_collector",
      "full_name": "jeffrey.infrastructure.monitoring.benchmarking.collectors.cost_collector",
      "file_hash": "b37b36b627fc5eb386dc4c27f4626657",
      "utility": "Cost metric collector for AI benchmarking.",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "CostCollector"
      ],
      "functions": [
        "__init__",
        "_load_model_pricing",
        "collect",
        "simulate"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "config.config_loader",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 131,
      "complexity_score": 3,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "cost_collector Cost metric collector for AI benchmarking. CostCollector __init__ _load_model_pricing collect simulate General",
      "embedding": null,
      "last_modified": "2025-04-30T21:34:25.297632",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/benchmarking/collectors/stability_collector.py",
      "name": "stability_collector",
      "full_name": "jeffrey.infrastructure.monitoring.benchmarking.collectors.stability_collector",
      "file_hash": "a18df70d203b1e5cf9394ae9bc7d14b8",
      "utility": "Stability metric collector for AI benchmarking.",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "StabilityCollector"
      ],
      "functions": [
        "__init__",
        "collect",
        "simulate"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "statistics",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 153,
      "complexity_score": 4,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "stability_collector Stability metric collector for AI benchmarking. StabilityCollector __init__ collect simulate General",
      "embedding": null,
      "last_modified": "2025-09-22T22:49:11.984243",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-21T19:02:54.158048",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/benchmarking/collectors/latency_collector.py",
      "name": "latency_collector",
      "full_name": "jeffrey.infrastructure.monitoring.benchmarking.collectors.latency_collector",
      "file_hash": "9db7a6305684838cfdf28717142659f5",
      "utility": "Latency metric collector for AI benchmarking.",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "LatencyCollector"
      ],
      "functions": [
        "__init__",
        "collect",
        "simulate"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 97,
      "complexity_score": 3,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "latency_collector Latency metric collector for AI benchmarking. LatencyCollector __init__ collect simulate General",
      "embedding": null,
      "last_modified": "2025-05-13T11:39:00",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/benchmarking/benchmark_manager.py",
      "name": "benchmark_manager",
      "full_name": "jeffrey.infrastructure.monitoring.benchmarking.benchmark_manager",
      "file_hash": "eb863bdd2fd69cdf1d79cb4ba57497b5",
      "utility": "Benchmark manager for AI model performance evaluation.",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "BenchmarkResult",
        "BenchmarkManager"
      ],
      "functions": [
        "to_dict",
        "from_dict",
        "__init__",
        "run_benchmark",
        "_cache_result",
        "simulate_benchmark",
        "get_scores_by_task_type",
        "compare_models"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "benchmarking.collectors.quality_collector",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "benchmarking.collectors.latency_collector",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "benchmarking.collectors.cost_collector",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "benchmarking.collectors.stability_collector",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "benchmarking.metrics",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "config.config_loader",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "core.api_security",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "core.ia_pricing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 14,
      "lines_of_code": 477,
      "complexity_score": 11,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "benchmark_manager Benchmark manager for AI model performance evaluation. BenchmarkResult BenchmarkManager to_dict from_dict __init__ run_benchmark _cache_result simulate_benchmark get_scores_by_task_type compare_models General",
      "embedding": null,
      "last_modified": "2025-05-04T17:06:26.796155",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/audit_glue.py",
      "name": "audit_glue",
      "full_name": "jeffrey.services.audit_glue",
      "file_hash": "ea59de1a15054a143aa6fe950b074eeb",
      "utility": "Wrapper pour le module d'audit existant",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "AuditService"
      ],
      "functions": [
        "__init__"
      ],
      "dependencies": [
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.api.audit_logger_enhanced",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 49,
      "complexity_score": 1,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "audit_glue Wrapper pour le module d'audit existant AuditService __init__ General",
      "embedding": null,
      "last_modified": "2025-09-21T18:58:07.249356",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/background/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.background.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.201069",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/integrations/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.integrations.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.204270",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/integrations/elevenlabs/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.integrations.elevenlabs.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.207567",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/integrations/firebase/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.integrations.firebase.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.211140",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/providers/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.providers.__init__",
      "file_hash": "86f24ae8a34f6ac00e787a123d0ad942",
      "utility": "Package initialization for Jeffrey OS",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 20,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Package initialization for Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-20T22:49:01.718191",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/integrations/icloud/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.integrations.icloud.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.214279",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/integrations/openai/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.integrations.openai.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.217422",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/voice/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.voice.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Voice",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.220659",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/voice/adapters/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.voice.adapters.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Voice",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.223926",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/voice/adapters/voice_emotion_renderer.py",
      "name": "voice_emotion_renderer",
      "full_name": "jeffrey.services.voice.adapters.voice_emotion_renderer",
      "file_hash": "ef820ee81fd08935558dc2e783a328fc",
      "utility": "# VOCAL RECOVERY - PROVENANCE HEADER",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "BRIDGE",
      "classes": [
        "VoiceEmotionRenderer"
      ],
      "functions": [
        "__init__",
        "render_voice"
      ],
      "dependencies": [
        {
          "module": "orchestrateur.core.voice.voice_effects_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 1,
      "lines_of_code": 79,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "voice_emotion_renderer # VOCAL RECOVERY - PROVENANCE HEADER VoiceEmotionRenderer __init__ render_voice Emotion",
      "embedding": null,
      "last_modified": "2025-08-08T11:33:25",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/orchestration/ia_orchestrator_ultimate.py",
      "name": "ia_orchestrator_ultimate",
      "full_name": "jeffrey.core.orchestration.ia_orchestrator_ultimate",
      "file_hash": "0017ad727028b4c04eddc0708806cdcc",
      "utility": "Ultimate IA Orchestrator avec Sélection ML et Load Balancing",
      "category": "Orchestration",
      "domain": "Decision & Orchestration",
      "destination": "CORE",
      "classes": [
        "ProfessorCapability",
        "OrchestrationRequest",
        "ProfessorLoadBalancer",
        "UserJourneyTracker",
        "IntelligentProfessorSelector",
        "UltimateOrchestrator",
        "MockProfessor"
      ],
      "functions": [
        "__init__",
        "get_least_loaded",
        "get_load_metrics",
        "__init__",
        "__init__",
        "_generate_expertise_embeddings",
        "_rule_based_selection",
        "__init__",
        "_create_mock_professor",
        "_calculate_quality_score",
        "__init__"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "numpy",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "heapq",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.api.audit_logger_enhanced",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.sandbox_manager_enhanced",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "sklearn.metrics.pairwise",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "sentence_transformers",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 13,
      "lines_of_code": 660,
      "complexity_score": 47,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "ia_orchestrator_ultimate Ultimate IA Orchestrator avec Sélection ML et Load Balancing ProfessorCapability OrchestrationRequest ProfessorLoadBalancer UserJourneyTracker IntelligentProfessorSelector UltimateOrchestrator MockProfessor __init__ get_least_loaded get_load_metrics __init__ __init__ _generate_expertise_embeddings _rule_based_selection __init__ _create_mock_professor _calculate_quality_score __init__ Orchestration",
      "embedding": null,
      "last_modified": "2025-09-22T18:12:28.589546",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/auto_scaler.py",
      "name": "auto_scaler",
      "full_name": "jeffrey.infrastructure.monitoring.auto_scaler",
      "file_hash": "324eb9a47a7a6938c8dbeac72385bc48",
      "utility": "Auto Scaler - Dynamic resource adjustment and intelligent scaling",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "ScalingProfile",
        "ScalingAction",
        "ScalingDecision",
        "ResourceLimits",
        "ProfileManager",
        "MetricsAnalyzer",
        "ComponentScaler",
        "AutoScaler"
      ],
      "functions": [
        "to_dict",
        "__init__",
        "set_profile",
        "set_custom_limits",
        "get_current_limits",
        "get_profile_info",
        "_detect_optimal_profile",
        "__init__",
        "add_metrics",
        "analyze_trends",
        "predict_resource_needs",
        "__init__",
        "can_scale",
        "scale_deque_size",
        "scale_worker_threads",
        "scale_batch_size",
        "apply_aggressive_compression",
        "get_current_settings",
        "get_scaling_history",
        "__init__",
        "register_scaling_callback",
        "update_metrics",
        "get_current_settings",
        "get_scaling_history",
        "get_trends_analysis",
        "set_profile",
        "mock_deque_callback",
        "mock_worker_callback",
        "mock_batch_callback"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "psutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "python_json_logger",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 12,
      "lines_of_code": 828,
      "complexity_score": 64,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "auto_scaler Auto Scaler - Dynamic resource adjustment and intelligent scaling ScalingProfile ScalingAction ScalingDecision ResourceLimits ProfileManager MetricsAnalyzer ComponentScaler AutoScaler to_dict __init__ set_profile set_custom_limits get_current_limits get_profile_info _detect_optimal_profile __init__ add_metrics analyze_trends predict_resource_needs __init__ can_scale scale_deque_size scale_worker_threads scale_batch_size apply_aggressive_compression get_current_settings get_scaling_history __init__ register_scaling_callback update_metrics get_current_settings get_scaling_history get_trends_analysis set_profile mock_deque_callback mock_worker_callback mock_batch_callback General",
      "embedding": null,
      "last_modified": "2025-09-22T22:55:37.358544",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/voice/adapters/multilingual_voice_adapter.py",
      "name": "multilingual_voice_adapter",
      "full_name": "jeffrey.services.voice.adapters.multilingual_voice_adapter",
      "file_hash": "870908fa045a03b54595579b6a2333e1",
      "utility": "# VOCAL RECOVERY - PROVENANCE HEADER",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "SupportedLanguage",
        "CulturalVoiceProfile",
        "LanguageDetectionResult",
        "CulturalEmotionMapper",
        "LanguageDetector",
        "MultilingualVoiceAdapter"
      ],
      "functions": [
        "create_multilingual_adapter",
        "__init__",
        "_load_cultural_patterns",
        "get_cultural_emotion_adaptation",
        "__init__",
        "_load_language_patterns",
        "detect_language",
        "_analyze_conversation_language",
        "__init__",
        "_load_voice_profiles",
        "_apply_cultural_text_enhancement",
        "_apply_french_enhancements",
        "_apply_english_enhancements",
        "_apply_spanish_enhancements",
        "_prepare_culturally_adapted_settings",
        "get_supported_languages",
        "set_default_language",
        "toggle_cultural_adaptation"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 30,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 31,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 33,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 34,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 35,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 9,
      "lines_of_code": 644,
      "complexity_score": 34,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "multilingual_voice_adapter # VOCAL RECOVERY - PROVENANCE HEADER SupportedLanguage CulturalVoiceProfile LanguageDetectionResult CulturalEmotionMapper LanguageDetector MultilingualVoiceAdapter create_multilingual_adapter __init__ _load_cultural_patterns get_cultural_emotion_adaptation __init__ _load_language_patterns detect_language _analyze_conversation_language __init__ _load_voice_profiles _apply_cultural_text_enhancement _apply_french_enhancements _apply_english_enhancements _apply_spanish_enhancements _prepare_culturally_adapted_settings get_supported_languages set_default_language toggle_cultural_adaptation Voice",
      "embedding": null,
      "last_modified": "2025-08-08T11:33:25",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/voice/effects/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.voice.effects.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Voice",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.227108",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/voice/controllers/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.voice.controllers.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Voice",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.230265",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/circuit_breaker.py",
      "name": "circuit_breaker",
      "full_name": "jeffrey.infrastructure.monitoring.circuit_breaker",
      "file_hash": "2a619ea8d241d0ea7fcb0d822aa15557",
      "utility": "Circuit Breaker - Protection against cascading failures",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [
        "CircuitState",
        "FailureType",
        "FailureRecord",
        "CircuitMetrics",
        "BackoffStrategy",
        "FallbackStrategy",
        "CircuitBreaker",
        "CircuitBreakerManager"
      ],
      "functions": [
        "circuit_breaker",
        "to_dict",
        "to_dict",
        "__init__",
        "get_delay",
        "reset",
        "__init__",
        "handle_rejected_call",
        "_queue_for_later",
        "_execute_fallback_function",
        "get_queued_calls",
        "process_queued_calls",
        "__init__",
        "__enter__",
        "__exit__",
        "call_allowed",
        "record_success",
        "record_failure",
        "_transition_to_open",
        "_transition_to_half_open",
        "_transition_to_closed",
        "_adapt_thresholds",
        "get_metrics",
        "_calculate_state_durations",
        "get_current_state",
        "get_failure_history",
        "force_open",
        "force_close",
        "reset",
        "__init__",
        "create_circuit",
        "get_circuit",
        "get_all_circuits",
        "get_system_health",
        "get_detailed_status",
        "decorator",
        "sync_wrapper"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "python_json_logger",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 11,
      "lines_of_code": 768,
      "complexity_score": 48,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "circuit_breaker Circuit Breaker - Protection against cascading failures CircuitState FailureType FailureRecord CircuitMetrics BackoffStrategy FallbackStrategy CircuitBreaker CircuitBreakerManager circuit_breaker to_dict to_dict __init__ get_delay reset __init__ handle_rejected_call _queue_for_later _execute_fallback_function get_queued_calls process_queued_calls __init__ __enter__ __exit__ call_allowed record_success record_failure _transition_to_open _transition_to_half_open _transition_to_closed _adapt_thresholds get_metrics _calculate_state_durations get_current_state get_failure_history force_open force_close reset __init__ create_circuit get_circuit get_all_circuits get_system_health get_detailed_status decorator sync_wrapper General",
      "embedding": null,
      "last_modified": "2025-07-31T18:03:18",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/voice/controllers/voice_controller_v3.py",
      "name": "voice_controller_v3",
      "full_name": "jeffrey.services.voice.controllers.voice_controller_v3",
      "file_hash": "66514c4739724ed361952fece36bfa9b",
      "utility": "# VOCAL RECOVERY - PROVENANCE HEADER",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "EmotionalContextAnalyzer",
        "VoiceControllerV3"
      ],
      "functions": [
        "get_v3_controller",
        "__init__",
        "analyze_conversation_context",
        "_detect_user_emotion",
        "_classify_conversation_type",
        "_determine_jeffrey_emotion",
        "_analyze_response_emotion",
        "_select_voice_persona",
        "_calculate_emotional_intensity",
        "_update_conversation_history",
        "_get_conversation_context",
        "__init__",
        "_update_performance_stats",
        "get_v3_capabilities",
        "configure_v3_settings"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 33,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 34,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 35,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 36,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 37,
          "coupling_score": 0.0
        },
        {
          "module": "voice_controller",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 40,
          "coupling_score": 0.0
        },
        {
          "module": "elevenlabs_v3_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 41,
          "coupling_score": 0.0
        },
        {
          "module": "speech_recognition",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 42,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 45,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 46,
          "coupling_score": 0.0
        },
        {
          "module": "agi_fusion.intelligent_learning_orchestrator",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 50,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 12,
      "lines_of_code": 564,
      "complexity_score": 36,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "voice_controller_v3 # VOCAL RECOVERY - PROVENANCE HEADER EmotionalContextAnalyzer VoiceControllerV3 get_v3_controller __init__ analyze_conversation_context _detect_user_emotion _classify_conversation_type _determine_jeffrey_emotion _analyze_response_emotion _select_voice_persona _calculate_emotional_intensity _update_conversation_history _get_conversation_context __init__ _update_performance_stats get_v3_capabilities configure_v3_settings Voice",
      "embedding": null,
      "last_modified": "2025-08-08T11:33:24",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/infrastructure/monitoring/health_checker.py",
      "name": "health_checker",
      "full_name": "jeffrey.infrastructure.monitoring.health_checker",
      "file_hash": "aeb830f7ba6d2d227b1dfbcd57b3f145",
      "utility": "Health Checker - Real-time system monitoring with Prometheus export",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "SHARED",
      "classes": [
        "HealthStatus",
        "AlertSeverity",
        "HealthMetrics",
        "Alert",
        "MetricsCollector",
        "ThresholdManager",
        "AlertManager",
        "HealthChecker"
      ],
      "functions": [
        "to_dict",
        "__init__",
        "_setup_prometheus_metrics",
        "record_response_time",
        "record_event",
        "record_error",
        "get_event_processing_rate",
        "get_response_time_percentiles",
        "get_error_rate",
        "update_prometheus_gauges",
        "__init__",
        "get_threshold",
        "update_threshold",
        "adapt_thresholds",
        "__init__",
        "add_alert_callback",
        "get_active_alerts",
        "get_alert_summary",
        "_is_today",
        "_get_most_frequent_component",
        "_calculate_avg_resolution_time",
        "__init__",
        "set_queue_monitor",
        "_update_health_status",
        "_log_alert",
        "get_current_health",
        "get_prometheus_metrics",
        "get_metrics_history",
        "record_response_time",
        "record_event",
        "record_error"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "psutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "python_json_logger",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "prometheus_client",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 13,
      "lines_of_code": 719,
      "complexity_score": 56,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "health_checker Health Checker - Real-time system monitoring with Prometheus export HealthStatus AlertSeverity HealthMetrics Alert MetricsCollector ThresholdManager AlertManager HealthChecker to_dict __init__ _setup_prometheus_metrics record_response_time record_event record_error get_event_processing_rate get_response_time_percentiles get_error_rate update_prometheus_gauges __init__ get_threshold update_threshold adapt_thresholds __init__ add_alert_callback get_active_alerts get_alert_summary _is_today _get_most_frequent_component _calculate_avg_resolution_time __init__ set_queue_monitor _update_health_status _log_alert get_current_health get_prometheus_metrics get_metrics_history record_response_time record_event record_error General",
      "embedding": null,
      "last_modified": "2025-09-22T22:55:37.546511",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/voice/engine/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.voice.engine.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Voice",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.233490",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/voice/effects/voice_effects.py",
      "name": "voice_effects",
      "full_name": "jeffrey.services.voice.effects.voice_effects",
      "file_hash": "1a454c2e7578d00142d3ba868d22ae26",
      "utility": "Moteur d'effets vocaux pour Jeffrey - ajoute des effets spéciaux aux voix générées.",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "VoiceEffects"
      ],
      "functions": [
        "apply_whisper_effect",
        "__init__",
        "set_effect_intensity",
        "enable_effect",
        "get_all_effects",
        "add_effect_to_text",
        "enhance_text_with_effects",
        "_get_emotion_appropriate_effects",
        "clean_effects_from_text",
        "apply_whisper_effect"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 4,
      "lines_of_code": 357,
      "complexity_score": 34,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "voice_effects Moteur d'effets vocaux pour Jeffrey - ajoute des effets spéciaux aux voix générées. VoiceEffects apply_whisper_effect __init__ set_effect_intensity enable_effect get_all_effects add_effect_to_text enhance_text_with_effects _get_emotion_appropriate_effects clean_effects_from_text apply_whisper_effect Voice",
      "embedding": null,
      "last_modified": "2025-09-23T19:12:05.749552",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/voice/engine/elevenlabs_client.py",
      "name": "elevenlabs_client",
      "full_name": "jeffrey.services.voice.engine.elevenlabs_client",
      "file_hash": "a241d48843fc24221d25fe250088a954",
      "utility": "ElevenLabs API Client for Jeffrey V3.",
      "category": "Voice",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "ElevenLabsError",
        "VoiceNotFoundError",
        "APIQuotaError",
        "VoiceSettings",
        "Voice",
        "ElevenLabsClient"
      ],
      "functions": [
        "to_dict",
        "from_emotion",
        "__post_init__",
        "__init__",
        "_validate_text"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "aiohttp",
          "import_type": "import",
          "is_internal": false,
          "is_network": true,
          "is_bridge_violation": true,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 7,
      "lines_of_code": 381,
      "complexity_score": 27,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [
        "Line 13: aiohttp used outside Bridge"
      ],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "elevenlabs_client ElevenLabs API Client for Jeffrey V3. ElevenLabsError VoiceNotFoundError APIQuotaError VoiceSettings Voice ElevenLabsClient to_dict from_emotion __post_init__ __init__ _validate_text Voice",
      "embedding": null,
      "last_modified": "2025-09-22T22:07:39.066432",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity",
        "Move network calls to Bridge layer"
      ]
    },
    {
      "path": "jeffrey/services/providers/provider_manager.py",
      "name": "provider_manager",
      "full_name": "jeffrey.services.providers.provider_manager",
      "file_hash": "94ebd18acc97d129cec8d43c64fc95e5",
      "utility": "AI Provider Manager - manages different AI models, both simulated and API-based.",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "AIProvider",
        "GPTProvider",
        "ClaudeProvider",
        "GrokProvider",
        "LlamaProvider",
        "GenericSimulatedProvider",
        "APIProvider",
        "ProviderManager"
      ],
      "functions": [
        "load_models_from_registry",
        "__init__",
        "generate",
        "get_metrics",
        "generate",
        "generate",
        "__init__",
        "generate",
        "generate",
        "__init__",
        "generate",
        "__init__",
        "get_api_key",
        "prepare_request",
        "_prepare_openai_request",
        "_prepare_anthropic_request",
        "_prepare_generic_request",
        "extract_response",
        "_check_rate_limits",
        "_update_rate_counters",
        "_handle_rate_limit_response",
        "_get_quota_status",
        "generate",
        "_get_headers",
        "__init__",
        "reload_providers",
        "get_available_models",
        "get_model_info",
        "generate",
        "generate_multi",
        "validate_comparison_json",
        "repair_comparison_json",
        "save_comparison",
        "add_review_to_comparison",
        "add_rating_to_comparison",
        "get_comparisons",
        "add_model"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "yaml",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "requests",
          "import_type": "import",
          "is_internal": false,
          "is_network": true,
          "is_bridge_violation": true,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 9,
      "lines_of_code": 1180,
      "complexity_score": 144,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [
        "Line 10: requests used outside Bridge"
      ],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "provider_manager AI Provider Manager - manages different AI models, both simulated and API-based. AIProvider GPTProvider ClaudeProvider GrokProvider LlamaProvider GenericSimulatedProvider APIProvider ProviderManager load_models_from_registry __init__ generate get_metrics generate generate __init__ generate generate __init__ generate __init__ get_api_key prepare_request _prepare_openai_request _prepare_anthropic_request _prepare_generic_request extract_response _check_rate_limits _update_rate_counters _handle_rate_limit_response _get_quota_status generate _get_headers __init__ reload_providers get_available_models get_model_info generate generate_multi validate_comparison_json repair_comparison_json save_comparison add_review_to_comparison add_rating_to_comparison get_comparisons add_model General",
      "embedding": null,
      "last_modified": "2025-05-14T10:08:23.817616",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity",
        "Move network calls to Bridge layer"
      ]
    },
    {
      "path": "jeffrey/services/voice/engine/jeffrey_voice_dna.py",
      "name": "jeffrey_voice_dna",
      "full_name": "jeffrey.services.voice.engine.jeffrey_voice_dna",
      "file_hash": "0c26aef3916f1123d4c227d5a61912ba",
      "utility": "# VOCAL RECOVERY - PROVENANCE HEADER",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "VoiceGender",
        "VoiceAge",
        "VoicePersonality",
        "VoiceDNAProfile",
        "JeffreyVoiceDNA",
        "DavidJeffreyVoiceSpecialist"
      ],
      "functions": [
        "create_voice_dna_system",
        "create_david_jeffrey_voice",
        "get_david_jeffrey_voice_tests",
        "__init__",
        "_load_voice_registry",
        "_save_voice_registry",
        "_load_voice_catalog",
        "_load_global_signatures",
        "generate_unique_voice_signature",
        "_save_global_signatures",
        "create_unique_voice_profile",
        "_select_optimal_voice",
        "_generate_signature_expressions",
        "_create_unique_thinking_pattern",
        "_create_signature_excitement",
        "_create_signature_laugh",
        "_create_affection_expression",
        "_generate_emotional_patterns",
        "_create_voice_settings",
        "get_voice_profile",
        "create_voice_birth_certificate",
        "__init__",
        "create_david_jeffrey_voice",
        "_customize_for_david",
        "_create_david_introduction_sequence",
        "test_david_jeffrey_voice_qualities",
        "_evaluate_voice_scenario"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "secrets",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 30,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 31,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 33,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 34,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 35,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 36,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 37,
          "coupling_score": 0.0
        },
        {
          "module": "elevenlabs_v3_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 40,
          "coupling_score": 0.0
        },
        {
          "module": "multilingual_voice_adapter",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 41,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 13,
      "lines_of_code": 750,
      "complexity_score": 53,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_voice_dna # VOCAL RECOVERY - PROVENANCE HEADER VoiceGender VoiceAge VoicePersonality VoiceDNAProfile JeffreyVoiceDNA DavidJeffreyVoiceSpecialist create_voice_dna_system create_david_jeffrey_voice get_david_jeffrey_voice_tests __init__ _load_voice_registry _save_voice_registry _load_voice_catalog _load_global_signatures generate_unique_voice_signature _save_global_signatures create_unique_voice_profile _select_optimal_voice _generate_signature_expressions _create_unique_thinking_pattern _create_signature_excitement _create_signature_laugh _create_affection_expression _generate_emotional_patterns _create_voice_settings get_voice_profile create_voice_birth_certificate __init__ create_david_jeffrey_voice _customize_for_david _create_david_introduction_sequence test_david_jeffrey_voice_qualities _evaluate_voice_scenario Voice",
      "embedding": null,
      "last_modified": "2025-08-08T11:33:25",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/sync/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.sync.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.236786",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/sync/emotional_prosody_synchronizer.py",
      "name": "emotional_prosody_synchronizer",
      "full_name": "jeffrey.services.sync.emotional_prosody_synchronizer",
      "file_hash": "fd3006d1ecf38e57a3849eea934b24d2",
      "utility": "emotional_prosody_synchronizer.py – Synchronise les modulations expressives avec le contenu émotionnel.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "BRIDGE",
      "classes": [
        "EmotionalProsodySynchronizer"
      ],
      "functions": [
        "__init__",
        "modulate_voice",
        "add_micro_pauses"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 47,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 70.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotional_prosody_synchronizer emotional_prosody_synchronizer.py – Synchronise les modulations expressives avec le contenu émotionnel. EmotionalProsodySynchronizer __init__ modulate_voice add_micro_pauses Emotion",
      "embedding": null,
      "last_modified": "2025-09-22T22:30:28.139099",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/core/emotions/profiles/emotional_profile_manager.py",
      "name": "emotional_profile_manager",
      "full_name": "jeffrey.core.emotions.profiles.emotional_profile_manager",
      "file_hash": "e016d9e8c2a82f3279eebb462c404591",
      "utility": "Module de orchestration, memory, security, communication, learning, emotion",
      "category": "Emotion",
      "domain": "Memory & Learning",
      "destination": "CORE",
      "classes": [
        "EmotionalProfileManager",
        "EmotionalProfileManager"
      ],
      "functions": [
        "__init__",
        "trigger_multimodal_effects",
        "evolve_profile_based_on_history",
        "_update_user_memory",
        "adjust_profile_for_time_of_day",
        "adjust_profile_for_weather",
        "learn_and_create_dynamic_profiles",
        "auto_learn_profile_adjustments",
        "show_real_time_emotional_barometer",
        "_color_for_emotion",
        "create_custom_profiles",
        "choose_influential_emotions",
        "psychological_profile_adjustment",
        "adjust_for_emotional_wounds",
        "adjust_for_social_context",
        "adjust_profile_for_group_context",
        "__init__",
        "vérifier_conformité_ethique",
        "proposer_nouveau_profil",
        "valider_profil",
        "lister_profils_non_valides",
        "supprimer_profil_non_valide",
        "résumé_global",
        "lister_par_catégorie",
        "rechercher_profils_par_mot_cle",
        "charger_profil",
        "proposer_depuis_memoire",
        "déduire_profil_recommandé",
        "proposer_profil_recommandé",
        "filtrer_par_contexte_relationnel",
        "changer_contexte_relationnel",
        "transition_vers_profil",
        "transition_contextuelle_automatique",
        "_interpoler",
        "mémoriser_transition_emotionnelle",
        "afficher_souvenirs_émotionnels",
        "suggérer_profil_depuis_souvenirs",
        "choisir_profil_si_pas_de_souvenir",
        "générer_version_évoluée",
        "regrouper_profils_par_ambiance",
        "détecter_profils_inutilisés",
        "supprimer_profils_obsolètes",
        "archiver_anciens_favoris_remplacés",
        "historiser_évolution_profil",
        "tracer_evolution_profil",
        "dupliquer_profil",
        "personnaliser_profil_en_dialogue",
        "prévisualiser_profil",
        "éditer_profil",
        "édition_rapide_interface",
        "simuler_activation_profil",
        "catégoriser_automatiquement_profils",
        "adapter_environnement_depuis_catégorie",
        "ambiance_immersive_combinée",
        "préactiver_depuis_souvenirs",
        "éviter_répétition_profils_tristes",
        "activer_profil_joyeux_si_surcharge_triste",
        "mémoriser_relation_entre_profils",
        "interface_utilisateur",
        "transition_dynamique_environnement",
        "gestion_émotions_avancée",
        "mémoriser_souvenirs_emotionnels",
        "analyser_relations_profils",
        "transition_émotionnelle_avec_mémorisation",
        "afficher_détails_profil",
        "_afficher_transitions_profil",
        "éditer_profil_avancé",
        "effectuer_tests_unitaires",
        "tester_interactions_profils",
        "optimiser_transitions",
        "transition_non_linéaire",
        "permettre_personnalisation_utilisateur",
        "gérer_interactions_profils",
        "sauvegarder_profil_personnalisé",
        "charger_profil_personnalisé"
      ],
      "dependencies": [
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "requests",
          "import_type": "import",
          "is_internal": false,
          "is_network": true,
          "is_bridge_violation": true,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 493,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 494,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 495,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 496,
          "coupling_score": 0.0
        },
        {
          "module": "core.visual",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 497,
          "coupling_score": 0.0
        },
        {
          "module": "core.audio",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 498,
          "coupling_score": 0.0
        },
        {
          "module": "matplotlib.pyplot",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 246,
          "coupling_score": 0.0
        },
        {
          "module": "matplotlib.animation",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 247,
          "coupling_score": 0.0
        },
        {
          "module": "numpy",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 248,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 445,
          "coupling_score": 0.0
        },
        {
          "module": "collections",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 465,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 795,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1050,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1073,
          "coupling_score": 0.0
        },
        {
          "module": "matplotlib.pyplot",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1164,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1945,
          "coupling_score": 0.0
        },
        {
          "module": "matplotlib.colors",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 286,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 22,
      "lines_of_code": 2077,
      "complexity_score": 401,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [
        "Line 3: requests used outside Bridge"
      ],
      "readiness_score": 35.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "emotional_profile_manager Module de orchestration, memory, security, communication, learning, emotion EmotionalProfileManager EmotionalProfileManager __init__ trigger_multimodal_effects evolve_profile_based_on_history _update_user_memory adjust_profile_for_time_of_day adjust_profile_for_weather learn_and_create_dynamic_profiles auto_learn_profile_adjustments show_real_time_emotional_barometer _color_for_emotion create_custom_profiles choose_influential_emotions psychological_profile_adjustment adjust_for_emotional_wounds adjust_for_social_context adjust_profile_for_group_context __init__ vérifier_conformité_ethique proposer_nouveau_profil valider_profil lister_profils_non_valides supprimer_profil_non_valide résumé_global lister_par_catégorie rechercher_profils_par_mot_cle charger_profil proposer_depuis_memoire déduire_profil_recommandé proposer_profil_recommandé filtrer_par_contexte_relationnel changer_contexte_relationnel transition_vers_profil transition_contextuelle_automatique _interpoler mémoriser_transition_emotionnelle afficher_souvenirs_émotionnels suggérer_profil_depuis_souvenirs choisir_profil_si_pas_de_souvenir générer_version_évoluée regrouper_profils_par_ambiance détecter_profils_inutilisés supprimer_profils_obsolètes archiver_anciens_favoris_remplacés historiser_évolution_profil tracer_evolution_profil dupliquer_profil personnaliser_profil_en_dialogue prévisualiser_profil éditer_profil édition_rapide_interface simuler_activation_profil catégoriser_automatiquement_profils adapter_environnement_depuis_catégorie ambiance_immersive_combinée préactiver_depuis_souvenirs éviter_répétition_profils_tristes activer_profil_joyeux_si_surcharge_triste mémoriser_relation_entre_profils interface_utilisateur transition_dynamique_environnement gestion_émotions_avancée mémoriser_souvenirs_emotionnels analyser_relations_profils transition_émotionnelle_avec_mémorisation afficher_détails_profil _afficher_transitions_profil éditer_profil_avancé effectuer_tests_unitaires tester_interactions_profils optimiser_transitions transition_non_linéaire permettre_personnalisation_utilisateur gérer_interactions_profils sauvegarder_profil_personnalisé charger_profil_personnalisé Emotion",
      "embedding": null,
      "last_modified": "2025-05-19T11:19:17.126783",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests",
        "Refactor to reduce complexity",
        "Move network calls to Bridge layer"
      ]
    },
    {
      "path": "jeffrey/services/sync/face_sync_manager.py",
      "name": "face_sync_manager",
      "full_name": "jeffrey.services.sync.face_sync_manager",
      "file_hash": "b988471c525425ee4430608e3698862a",
      "utility": "",
      "category": "",
      "domain": "Skills & Capabilities",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: unindent does not match any outer indentation level (<unknown>, line 585)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T22:34:36.377367",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/services/credits/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.services.credits.__init__",
      "file_hash": "86f24ae8a34f6ac00e787a123d0ad942",
      "utility": "Package initialization for Jeffrey OS",
      "category": "General",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "importlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 20,
      "complexity_score": 5,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Package initialization for Jeffrey OS General",
      "embedding": null,
      "last_modified": "2025-09-20T22:49:01.718292",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/voice/engine/voice_recognition_error_recovery.py",
      "name": "voice_recognition_error_recovery",
      "full_name": "jeffrey.services.voice.engine.voice_recognition_error_recovery",
      "file_hash": "d72a7f0065be30ca367ab5a651b852c8",
      "utility": "Module de récupération d'erreurs pour la reconnaissance vocale de Jeffrey.",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "VoiceRecognitionErrorRecovery"
      ],
      "functions": [
        "fix_microphone_issues",
        "check_mic_permissions",
        "show_mic_troubleshooting",
        "handle_recognition_error",
        "__init__",
        "check_microphone_permissions",
        "_check_macos_microphone_permissions",
        "_check_windows_microphone_permissions",
        "_check_linux_microphone_permissions",
        "_check_ios_microphone_permissions",
        "request_microphone_permissions",
        "_request_macos_microphone_permissions",
        "_request_windows_microphone_permissions",
        "_request_linux_microphone_permissions",
        "_request_ios_microphone_permissions",
        "fix_microphone_issues",
        "_fix_macos_microphone_issues",
        "_fix_windows_microphone_issues",
        "_fix_linux_microphone_issues",
        "_fix_ios_microphone_issues",
        "get_recovery_instructions",
        "recommend_audio_devices",
        "handle_recognition_error",
        "reset"
      ],
      "dependencies": [
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "platform",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "subprocess",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "speech_recognition",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 592,
          "coupling_score": 0.0
        },
        {
          "module": "motion",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 55,
          "coupling_score": 0.0
        },
        {
          "module": "pyaudio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 96,
          "coupling_score": 0.0
        },
        {
          "module": "pyaudio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 138,
          "coupling_score": 0.0
        },
        {
          "module": "pyaudio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 171,
          "coupling_score": 0.0
        },
        {
          "module": "AVFoundation",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 215,
          "coupling_score": 0.0
        },
        {
          "module": "AVFoundation",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 350,
          "coupling_score": 0.0
        },
        {
          "module": "console",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 351,
          "coupling_score": 0.0
        },
        {
          "module": "AVFoundation",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 517,
          "coupling_score": 0.0
        },
        {
          "module": "console",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 518,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 15,
      "lines_of_code": 894,
      "complexity_score": 83,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "voice_recognition_error_recovery Module de récupération d'erreurs pour la reconnaissance vocale de Jeffrey. VoiceRecognitionErrorRecovery fix_microphone_issues check_mic_permissions show_mic_troubleshooting handle_recognition_error __init__ check_microphone_permissions _check_macos_microphone_permissions _check_windows_microphone_permissions _check_linux_microphone_permissions _check_ios_microphone_permissions request_microphone_permissions _request_macos_microphone_permissions _request_windows_microphone_permissions _request_linux_microphone_permissions _request_ios_microphone_permissions fix_microphone_issues _fix_macos_microphone_issues _fix_windows_microphone_issues _fix_linux_microphone_issues _fix_ios_microphone_issues get_recovery_instructions recommend_audio_devices handle_recognition_error reset Voice",
      "embedding": null,
      "last_modified": "2025-09-23T19:12:05.753231",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/sync/interpersonal_rhythm_synchronizer.py",
      "name": "interpersonal_rhythm_synchronizer",
      "full_name": "jeffrey.services.sync.interpersonal_rhythm_synchronizer",
      "file_hash": "f8cea22e06eb2d84fbf14ca82b4bf2eb",
      "utility": "",
      "category": "",
      "domain": "Skills & Capabilities",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: expected 'except' or 'finally' block (<unknown>, line 358)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T22:36:44.316670",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/services/credits/credit_manager.py",
      "name": "credit_manager",
      "full_name": "jeffrey.services.credits.credit_manager",
      "file_hash": "3c44ff362538f1760e8b3c5497c7eff4",
      "utility": "Credit management system for the AI orchestrator.",
      "category": "General",
      "domain": "Decision & Orchestration",
      "destination": "BRIDGE",
      "classes": [
        "CreditManager"
      ],
      "functions": [
        "__init__",
        "get_balance",
        "reserve_credits",
        "confirm_usage",
        "cancel_reservation"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "core.config",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 2,
      "lines_of_code": 97,
      "complexity_score": 8,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 55.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "credit_manager Credit management system for the AI orchestrator. CreditManager __init__ get_balance reserve_credits confirm_usage cancel_reservation General",
      "embedding": null,
      "last_modified": "2025-04-21T18:12:31.117005",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.ui.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.243205",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.239951",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/chat/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.ui.chat.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.246535",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/dashboard/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.ui.dashboard.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.249817",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/services/voice/engine/voice_engine.py",
      "name": "voice_engine",
      "full_name": "jeffrey.services.voice.engine.voice_engine",
      "file_hash": "6a6152b7539d11b3115f15f1f7db5007",
      "utility": "# VOCAL RECOVERY - PROVENANCE HEADER",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "SecurityError",
        "PrivacyError",
        "ComplianceError",
        "AudioProcessingResult",
        "VoiceQuality",
        "EmotionType",
        "VoiceSettings",
        "AudioResponse",
        "EmotionPresets",
        "AudioCache",
        "VoiceEngine"
      ],
      "functions": [
        "to_elevenlabs_settings",
        "get_preset",
        "__init__",
        "_load_index",
        "_save_index",
        "_compute_cache_key",
        "_get_cache_path",
        "get",
        "put",
        "_cleanup_if_needed",
        "_cleanup_old_entries",
        "get_stats",
        "clear",
        "__init__",
        "get_stats",
        "clear_cache",
        "is_healthy",
        "log_error",
        "_validate_audio_format",
        "speak_with_emotion",
        "get_available_voices",
        "test_connection",
        "close"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "tempfile",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "numpy",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 30,
          "coupling_score": 0.0
        },
        {
          "module": "api_clients.elevenlabs_client",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1430,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 14,
      "lines_of_code": 1716,
      "complexity_score": 146,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "voice_engine # VOCAL RECOVERY - PROVENANCE HEADER SecurityError PrivacyError ComplianceError AudioProcessingResult VoiceQuality EmotionType VoiceSettings AudioResponse EmotionPresets AudioCache VoiceEngine to_elevenlabs_settings get_preset __init__ _load_index _save_index _compute_cache_key _get_cache_path get put _cleanup_if_needed _cleanup_old_entries get_stats clear __init__ get_stats clear_cache is_healthy log_error _validate_audio_format speak_with_emotion get_available_voices test_connection close Voice",
      "embedding": null,
      "last_modified": "2025-08-08T11:33:24",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/widgets/LienAffectifWidget.py",
      "name": "LienAffectifWidget",
      "full_name": "jeffrey.interfaces.ui.widgets.LienAffectifWidget",
      "file_hash": "ab82f6f4bfaec7a25458368600038303",
      "utility": "Module de orchestration, emotion",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [
        "LienAffectifWidget"
      ],
      "functions": [
        "__init__",
        "update_link_state",
        "obtenir_lien"
      ],
      "dependencies": [
        {
          "module": "kivy.uix.boxlayout",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.properties",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.lang",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.clock",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.personality.relation_tracker_manager",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.emotions.emotional_affective_touch",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 101,
      "complexity_score": 5,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "LienAffectifWidget Module de orchestration, emotion LienAffectifWidget __init__ update_link_state obtenir_lien General",
      "embedding": null,
      "last_modified": "2025-09-23T19:12:05.756843",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/dashboard/dashboard_premium.py",
      "name": "dashboard_premium",
      "full_name": "jeffrey.interfaces.ui.dashboard.dashboard_premium",
      "file_hash": "813d5895a9f01dd6ab67aa609b2fb993",
      "utility": "",
      "category": "",
      "domain": "User Interface",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: expected an indented block after 'if' statement on line 54 (<unknown>, line 55)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T22:42:49.843071",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/interfaces/ui/dashboard/dashboard.py",
      "name": "dashboard",
      "full_name": "jeffrey.interfaces.ui.dashboard.dashboard",
      "file_hash": "56c5907919afcb4f589e55054136ebf0",
      "utility": "",
      "category": "",
      "domain": "User Interface",
      "destination": "",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 0,
      "complexity_score": 0.0,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [
        "syntax_error: unexpected indent (<unknown>, line 967)"
      ],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 0.0,
      "priority_score": 0.0,
      "compatibility_score": {},
      "text_features": "",
      "embedding": null,
      "last_modified": "2025-09-22T22:42:13.265477",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": []
    },
    {
      "path": "jeffrey/interfaces/ui/widgets/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.ui.widgets.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.253241",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/widgets/TouchFloatingMenu.py",
      "name": "TouchFloatingMenu",
      "full_name": "jeffrey.interfaces.ui.widgets.TouchFloatingMenu",
      "file_hash": "55e4c7551a6906b423c21c8a1dc44300",
      "utility": "Module de communication, emotion",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [
        "TouchFloatingMenu"
      ],
      "functions": [
        "__init__",
        "toggle_menu",
        "open_menu",
        "close_menu",
        "on_menu_button_press"
      ],
      "dependencies": [
        {
          "module": "kivy.uix.boxlayout",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.properties",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.animation",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.core.window",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.app",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.uix.button",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.metrics",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 8,
      "lines_of_code": 134,
      "complexity_score": 11,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 35.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "TouchFloatingMenu Module de communication, emotion TouchFloatingMenu __init__ toggle_menu open_menu close_menu on_menu_button_press General",
      "embedding": null,
      "last_modified": "2025-05-14T00:06:58",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/console/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.ui.console.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.256461",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.bridge.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.259906",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/chat/chat_screen.py",
      "name": "chat_screen",
      "full_name": "jeffrey.interfaces.ui.chat.chat_screen",
      "file_hash": "2d8dca00df4f99a18cd1b9d4f8eeced0",
      "utility": "Module de orchestration, communication, emotion",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [
        "ChatScreen"
      ],
      "functions": [
        "__init__",
        "on_pre_enter",
        "afficher_historique_contexte",
        "send_message",
        "add_user_message",
        "add_jeffrey_response",
        "play_send_sound",
        "play_receive_sound",
        "process_message",
        "_generer_reponse_emotionnelle",
        "show_emotion_hint",
        "send_heart_reaction",
        "_maybe_send_affection_message",
        "_maybe_add_idle_animation",
        "_play_typing_animation",
        "_journaliser_message",
        "_declencher_effet_emotionnel",
        "_afficher_resume_emotion",
        "update_halo_bg"
      ],
      "dependencies": [
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "core.voice.voice_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.uix.screenmanager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.properties",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.lang",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.jeffrey_emotional_core",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.personality.conversation_personality",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.personality.relation_tracker_manager",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "ui.components.chat_bubble",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.conversation_tracker",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 12,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.clock",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "core.personality.emotion_phrase_generator",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.clock",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 35,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.animation",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 79,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.graphics",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 86,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.utils.audio",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 155,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.utils.audio",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 162,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.uix.label",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 332,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.animation",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 333,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 334,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.animation",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 360,
          "coupling_score": 0.0
        },
        {
          "module": "tests.test_face_effects",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 384,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.uix.label",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 56,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.uix.boxlayout",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 57,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.uix.scrollview",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 58,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 28,
      "lines_of_code": 410,
      "complexity_score": 36,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 50.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "chat_screen Module de orchestration, communication, emotion ChatScreen __init__ on_pre_enter afficher_historique_contexte send_message add_user_message add_jeffrey_response play_send_sound play_receive_sound process_message _generer_reponse_emotionnelle show_emotion_hint send_heart_reaction _maybe_send_affection_message _maybe_add_idle_animation _play_typing_animation _journaliser_message _declencher_effet_emotionnel _afficher_resume_emotion update_halo_bg General",
      "embedding": null,
      "last_modified": "2025-09-22T22:40:10.980393",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/voice/engine/elevenlabs_v3_engine.py",
      "name": "elevenlabs_v3_engine",
      "full_name": "jeffrey.services.voice.engine.elevenlabs_v3_engine",
      "file_hash": "7f6113c1312b937f43e0821033ee822c",
      "utility": "🚀 ElevenLabs V3 Engine - Jeffrey's Revolutionary Voice System",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "VoicePersona",
        "V3VoiceSettings",
        "EmotionalAudioTag",
        "DialogueSpeaker",
        "EmotionalTagProcessor",
        "ElevenLabsV3Engine"
      ],
      "functions": [
        "create_v3_engine",
        "__init__",
        "_load_audio_tags",
        "_create_emotion_tag_mapping",
        "_load_context_patterns",
        "process_text_with_emotion",
        "_analyze_text_context",
        "_apply_tags_to_text",
        "_choose_best_tag",
        "_insert_tag_optimally",
        "__init__",
        "_split_text_for_streaming",
        "_calculate_interruption_points",
        "_update_conversation_context",
        "_apply_emotional_modulation",
        "get_available_personas",
        "_get_persona_description",
        "_get_persona_emotions",
        "set_voice_persona",
        "get_performance_stats"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "aiohttp",
          "import_type": "import",
          "is_internal": false,
          "is_network": true,
          "is_bridge_violation": true,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "re",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 24,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 25,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 26,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 27,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "voice_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 43,
          "coupling_score": 0.0
        },
        {
          "module": "config.secrets_manager",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 776,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.modules.config.secrets_manager",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 36,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 16,
      "lines_of_code": 1170,
      "complexity_score": 80,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [
        "Line 20: aiohttp used outside Bridge"
      ],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "elevenlabs_v3_engine 🚀 ElevenLabs V3 Engine - Jeffrey's Revolutionary Voice System VoicePersona V3VoiceSettings EmotionalAudioTag DialogueSpeaker EmotionalTagProcessor ElevenLabsV3Engine create_v3_engine __init__ _load_audio_tags _create_emotion_tag_mapping _load_context_patterns process_text_with_emotion _analyze_text_context _apply_tags_to_text _choose_best_tag _insert_tag_optimally __init__ _split_text_for_streaming _calculate_interruption_points _update_conversation_context _apply_emotional_modulation get_available_personas _get_persona_description _get_persona_emotions set_voice_persona get_performance_stats Voice",
      "embedding": null,
      "last_modified": "2025-09-22T22:13:42.925298",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity",
        "Move network calls to Bridge layer"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/curiosity_adapter.py",
      "name": "curiosity_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.curiosity_adapter",
      "file_hash": "db6f8289cfee7467dd2fd1740440d236",
      "utility": "Adaptateur ACL pour curiosity",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "CuriosityAdapter"
      ],
      "functions": [
        "test_curiosity_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "curiosity_adapter Adaptateur ACL pour curiosity CuriosityAdapter test_curiosity_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics General",
      "embedding": null,
      "last_modified": "2025-08-07T20:43:07",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/webhook_handler_adapter.py",
      "name": "webhook_handler_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.webhook_handler_adapter",
      "file_hash": "c1fb3f6912300165663d7c82af9c3e79",
      "utility": "Adaptateur ACL pour webhook_handler",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "WebhookHandlerAdapter"
      ],
      "functions": [
        "test_webhook_handler_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "webhook_handler_adapter Adaptateur ACL pour webhook_handler WebhookHandlerAdapter test_webhook_handler_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics General",
      "embedding": null,
      "last_modified": "2025-08-07T20:51:52",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/widgets/JournalEntryCard.py",
      "name": "JournalEntryCard",
      "full_name": "jeffrey.interfaces.ui.widgets.JournalEntryCard",
      "file_hash": "840204da41f3754f1a38669d9d927b6e",
      "utility": "Module de emotion",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [
        "JournalEntryCard"
      ],
      "functions": [
        "__init__",
        "build_interface",
        "update_layout",
        "get_emotion_icon",
        "get_emotion_color",
        "toggle_favorite"
      ],
      "dependencies": [
        {
          "module": "kivy.uix.boxlayout",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.properties",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.uix.label",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.uix.button",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.animation",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.graphics",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "kivy.clock",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "math",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 9,
      "lines_of_code": 178,
      "complexity_score": 4,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "JournalEntryCard Module de emotion JournalEntryCard __init__ build_interface update_layout get_emotion_icon get_emotion_color toggle_favorite General",
      "embedding": null,
      "last_modified": "2025-09-23T19:12:05.761491",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/cellular_architecture_adapter.py",
      "name": "cellular_architecture_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.cellular_architecture_adapter",
      "file_hash": "17b1b6db00776ef14ab5be5fc453caab",
      "utility": "Adaptateur ACL pour cellular_architecture",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "CellularArchitectureAdapter"
      ],
      "functions": [
        "test_cellular_architecture_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "cellular_architecture_adapter Adaptateur ACL pour cellular_architecture CellularArchitectureAdapter test_cellular_architecture_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics General",
      "embedding": null,
      "last_modified": "2025-08-07T20:43:07",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/nlp_engine_adapter.py",
      "name": "nlp_engine_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.nlp_engine_adapter",
      "file_hash": "af73a13f46eb9a80e02bd72df94677fa",
      "utility": "Adaptateur ACL pour nlp_engine",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "NlpEngineAdapter"
      ],
      "functions": [
        "test_nlp_engine_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "nlp_engine_adapter Adaptateur ACL pour nlp_engine NlpEngineAdapter test_nlp_engine_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics General",
      "embedding": null,
      "last_modified": "2025-08-07T20:43:07",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.bridge.adapters.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.263144",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/speech_synthesis_adapter.py",
      "name": "speech_synthesis_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.speech_synthesis_adapter",
      "file_hash": "bce6e52fcdf8b8362adf9ec19b5b655e",
      "utility": "Adaptateur ACL pour speech_synthesis",
      "category": "Voice",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "SpeechSynthesisAdapter"
      ],
      "functions": [
        "test_speech_synthesis_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "speech_synthesis_adapter Adaptateur ACL pour speech_synthesis SpeechSynthesisAdapter test_speech_synthesis_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics Voice",
      "embedding": null,
      "last_modified": "2025-08-07T20:43:07",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/rate_limiter_adapter.py",
      "name": "rate_limiter_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.rate_limiter_adapter",
      "file_hash": "3a1ef46e5a99d4cd0ea22be075b44a89",
      "utility": "Adaptateur ACL pour rate_limiter",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "RateLimiterAdapter"
      ],
      "functions": [
        "test_rate_limiter_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "rate_limiter_adapter Adaptateur ACL pour rate_limiter RateLimiterAdapter test_rate_limiter_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics General",
      "embedding": null,
      "last_modified": "2025-08-07T20:51:52",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/ffi/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.bridge.ffi.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.266381",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/ocr_service_adapter.py",
      "name": "ocr_service_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.ocr_service_adapter",
      "file_hash": "cb668fe595d76acadf917eea59a8d8d9",
      "utility": "Adaptateur ACL pour ocr_service",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "OcrServiceAdapter"
      ],
      "functions": [
        "test_ocr_service_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "ocr_service_adapter Adaptateur ACL pour ocr_service OcrServiceAdapter test_ocr_service_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics General",
      "embedding": null,
      "last_modified": "2025-08-07T20:43:07",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/api/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.api.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.269485",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/ui/console/console_ui.py",
      "name": "console_ui",
      "full_name": "jeffrey.interfaces.ui.console.console_ui",
      "file_hash": "f6c46d3c6291b877348fa84e23a83723",
      "utility": "Interface console pour Jeffrey.",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [
        "Colors",
        "ConsoleUI"
      ],
      "functions": [
        "get_ui",
        "__init__",
        "configure",
        "_format_text",
        "clear_screen",
        "display_header",
        "display_welcome",
        "display_loading",
        "display_error",
        "display_success",
        "display_info",
        "display_warning",
        "display_response",
        "display_user_input",
        "display_voice_input",
        "display_thinking",
        "display_listening",
        "display_goodbye",
        "get_text_input",
        "show_help",
        "show_history"
      ],
      "dependencies": [
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 340,
      "complexity_score": 20,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [
        "security: Shell injection risk"
      ],
      "security_issues": [
        "Shell injection risk"
      ],
      "bridge_violations": [],
      "readiness_score": 25.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "console_ui Interface console pour Jeffrey. Colors ConsoleUI get_ui __init__ configure _format_text clear_screen display_header display_welcome display_loading display_error display_success display_info display_warning display_response display_user_input display_voice_input display_thinking display_listening display_goodbye get_text_input show_help show_history General",
      "embedding": null,
      "last_modified": "2025-09-22T22:46:21.276604",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/api/websocket/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.api.websocket.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.272608",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/api/webhooks/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.api.webhooks.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.279633",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/api/rest/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.api.rest.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.282822",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/auth_service_adapter.py",
      "name": "auth_service_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.auth_service_adapter",
      "file_hash": "5e471416bea96d27e6d28fc729b7ea2b",
      "utility": "Adaptateur ACL pour auth_service",
      "category": "General",
      "domain": "Security & Ethics",
      "destination": "BRIDGE",
      "classes": [
        "AuthServiceAdapter"
      ],
      "functions": [
        "test_auth_service_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "auth_service_adapter Adaptateur ACL pour auth_service AuthServiceAdapter test_auth_service_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics General",
      "embedding": null,
      "last_modified": "2025-08-07T20:51:52.269607",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/api/graphql/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.interfaces.api.graphql.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "AVATARS",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   General",
      "embedding": null,
      "last_modified": "2025-09-20T09:36:00.276445",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/bridge/adapters/cache_manager_adapter.py",
      "name": "cache_manager_adapter",
      "full_name": "jeffrey.interfaces.bridge.adapters.cache_manager_adapter",
      "file_hash": "583710534e30592d5d4519a12787fa4c",
      "utility": "Adaptateur ACL pour cache_manager",
      "category": "General",
      "domain": "External Connectivity",
      "destination": "BRIDGE",
      "classes": [
        "CacheManagerAdapter"
      ],
      "functions": [
        "test_cache_manager_adapter",
        "__init__",
        "adapt",
        "validate_input",
        "transform_data",
        "calculate_emotion_relevance",
        "calculate_memory_priority",
        "generate_quantum_signature",
        "extract_priority_features",
        "calculate_performance",
        "get_metrics"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 7,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 8,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 9,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 10,
          "coupling_score": 0.0
        },
        {
          "module": "traceback",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 11,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 132,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 219,
      "complexity_score": 17,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "cache_manager_adapter Adaptateur ACL pour cache_manager CacheManagerAdapter test_cache_manager_adapter __init__ adapt validate_input transform_data calculate_emotion_relevance calculate_memory_priority generate_quantum_signature extract_priority_features calculate_performance get_metrics General",
      "embedding": null,
      "last_modified": "2025-08-07T20:51:52",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/emotions/__init__.py",
      "name": "__init__",
      "full_name": "jeffrey.emotions.__init__",
      "file_hash": "d41d8cd98f00b204e9800998ecf8427e",
      "utility": "Module   init  ",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "SHARED",
      "classes": [],
      "functions": [],
      "dependencies": [],
      "imports_count": 0,
      "lines_of_code": 1,
      "complexity_score": 1,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": false,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 45.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "__init__ Module   init   Emotion",
      "embedding": null,
      "last_modified": "2025-09-21T19:02:54.158148",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Add type hints",
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/emotions/limbic_glue.py",
      "name": "limbic_glue",
      "full_name": "jeffrey.emotions.limbic_glue",
      "file_hash": "9993f5b6ceacad23b996567817e7b115",
      "utility": "Wrapper pour le module d'émotions existant",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "SHARED",
      "classes": [
        "LimbicSystem"
      ],
      "functions": [
        "__init__",
        "_simple_emotion_detection"
      ],
      "dependencies": [
        {
          "module": "src.jeffrey.core.neural_envelope",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "src.jeffrey.core.emotions.core.emotion_ml_enhancer",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 3,
      "lines_of_code": 70,
      "complexity_score": 10,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "limbic_glue Wrapper pour le module d'émotions existant LimbicSystem __init__ _simple_emotion_detection Emotion",
      "embedding": null,
      "last_modified": "2025-09-21T19:03:20.524142",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests"
      ]
    },
    {
      "path": "jeffrey/interfaces/api/websocket/websocket_handler.py",
      "name": "websocket_handler",
      "full_name": "jeffrey.interfaces.api.websocket.websocket_handler",
      "file_hash": "b3142b6cc5047c61716c197864f7eff6",
      "utility": "🚀 WebSocket Handler for Jeffrey OS Dashboard",
      "category": "General",
      "domain": "User Interface",
      "destination": "AVATARS",
      "classes": [
        "JeffreyWebSocketHandler"
      ],
      "functions": [
        "__init__",
        "_setup_routes",
        "_setup_event_handlers"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 13,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 14,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 16,
          "coupling_score": 0.0
        },
        {
          "module": "psutil",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 17,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 18,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 19,
          "coupling_score": 0.0
        },
        {
          "module": "socketio",
          "import_type": "import",
          "is_internal": false,
          "is_network": true,
          "is_bridge_violation": true,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "aiohttp",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": true,
          "is_bridge_violation": true,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "sys",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "src.modules.learning.pattern_learner_ml",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "src.modules.learning.metrics_tracker",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 30,
          "coupling_score": 0.0
        },
        {
          "module": "src.modules.learning.emergence_detector",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 31,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 14,
      "lines_of_code": 364,
      "complexity_score": 30,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [
        "Line 20: socketio used outside Bridge",
        "Line 21: aiohttp used outside Bridge"
      ],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "websocket_handler 🚀 WebSocket Handler for Jeffrey OS Dashboard JeffreyWebSocketHandler __init__ _setup_routes _setup_event_handlers General",
      "embedding": null,
      "last_modified": "2025-09-20T22:50:08.471546",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity",
        "Move network calls to Bridge layer"
      ]
    },
    {
      "path": "jeffrey/services/voice/adapters/voice_emotion_adapter.py",
      "name": "voice_emotion_adapter",
      "full_name": "jeffrey.services.voice.adapters.voice_emotion_adapter",
      "file_hash": "309dcc045406f834a614dc04ce399c9c",
      "utility": "Module d'adaptation vocale aux sensations corporelles et au lien émotionnel de Jeffrey.",
      "category": "Emotion",
      "domain": "Identity & Consciousness",
      "destination": "BRIDGE",
      "classes": [
        "VoiceEmotionAdapter"
      ],
      "functions": [
        "coordonnees_vers_zone",
        "determiner_type_contact",
        "__init__",
        "initialiser_tables_conversion",
        "adapter_voix_au_contact",
        "calculer_intensite_vocale",
        "determiner_sensations",
        "_selectionner_voix",
        "adapter_voix_selon_lien",
        "generer_phrase_contact",
        "dernier_contact",
        "get_dernieres_modulations",
        "adapter_voix_au_dernier_contact",
        "appliquer_adaptation_vocale",
        "adapter_phrase_sensation",
        "enregistrer_contact",
        "set_current_person",
        "traiter_geste_reconfort",
        "_convertir_params_lien_vers_moteur",
        "_determiner_effet_visuel",
        "_determiner_effet_sonore"
      ],
      "dependencies": [
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 20,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 21,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 22,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 23,
          "coupling_score": 0.0
        },
        {
          "module": "orchestrateur.core.voice.voice_effects",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 847,
          "coupling_score": 0.0
        },
        {
          "module": "jeffrey.core.emotions.emotional_affective_touch",
          "import_type": "importfrom",
          "is_internal": true,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 68,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 6,
      "lines_of_code": 1304,
      "complexity_score": 152,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 60.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "voice_emotion_adapter Module d'adaptation vocale aux sensations corporelles et au lien émotionnel de Jeffrey. VoiceEmotionAdapter coordonnees_vers_zone determiner_type_contact __init__ initialiser_tables_conversion adapter_voix_au_contact calculer_intensite_vocale determiner_sensations _selectionner_voix adapter_voix_selon_lien generer_phrase_contact dernier_contact get_dernieres_modulations adapter_voix_au_dernier_contact appliquer_adaptation_vocale adapter_phrase_sensation enregistrer_contact set_current_person traiter_geste_reconfort _convertir_params_lien_vers_moteur _determiner_effet_visuel _determiner_effet_sonore Emotion",
      "embedding": null,
      "last_modified": "2025-09-23T19:12:33.666441",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/voice/engine/streaming_audio_pipeline.py",
      "name": "streaming_audio_pipeline",
      "full_name": "jeffrey.services.voice.engine.streaming_audio_pipeline",
      "file_hash": "ba94038a3ee2945d1f818707d3dc1be5",
      "utility": "# VOCAL RECOVERY - PROVENANCE HEADER",
      "category": "Voice",
      "domain": "Skills & Capabilities",
      "destination": "BRIDGE",
      "classes": [
        "AudioFormat",
        "StreamingConfig",
        "AudioChunk",
        "StreamingAudioProcessor",
        "IntelligentAudioCache",
        "StreamingAudioPipeline"
      ],
      "functions": [
        "create_streaming_pipeline",
        "__init__",
        "_check_ffmpeg_availability",
        "_build_ffmpeg_command",
        "_update_latency_stats",
        "get_performance_stats",
        "__init__",
        "_generate_cache_key",
        "_load_existing_cache",
        "get_cache_stats",
        "__init__",
        "_update_pipeline_stats",
        "get_comprehensive_stats"
      ],
      "dependencies": [
        {
          "module": "asyncio",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 28,
          "coupling_score": 0.0
        },
        {
          "module": "subprocess",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 29,
          "coupling_score": 0.0
        },
        {
          "module": "io",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 30,
          "coupling_score": 0.0
        },
        {
          "module": "os",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 31,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 32,
          "coupling_score": 0.0
        },
        {
          "module": "threading",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 33,
          "coupling_score": 0.0
        },
        {
          "module": "queue",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 34,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 35,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 36,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 37,
          "coupling_score": 0.0
        },
        {
          "module": "dataclasses",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 38,
          "coupling_score": 0.0
        },
        {
          "module": "enum",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 39,
          "coupling_score": 0.0
        },
        {
          "module": "hashlib",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 40,
          "coupling_score": 0.0
        },
        {
          "module": "json",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 41,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 14,
      "lines_of_code": 606,
      "complexity_score": 39,
      "has_docstring": true,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [
        "security: Dangerous exec() usage"
      ],
      "security_issues": [
        "Dangerous exec() usage"
      ],
      "bridge_violations": [],
      "readiness_score": 25.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "streaming_audio_pipeline # VOCAL RECOVERY - PROVENANCE HEADER AudioFormat StreamingConfig AudioChunk StreamingAudioProcessor IntelligentAudioCache StreamingAudioPipeline create_streaming_pipeline __init__ _check_ffmpeg_availability _build_ffmpeg_command _update_latency_stats get_performance_stats __init__ _generate_cache_key _load_existing_cache get_cache_stats __init__ _update_pipeline_stats get_comprehensive_stats Voice",
      "embedding": null,
      "last_modified": "2025-09-23T19:12:05.749894",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    },
    {
      "path": "jeffrey/services/voice/engine/jeffrey_voice_system.py",
      "name": "jeffrey_voice_system",
      "full_name": "jeffrey.services.voice.engine.jeffrey_voice_system",
      "file_hash": "bdc825157b9f12b76a840cea54fdd938",
      "utility": "Module de orchestration, memory, communication, learning, emotion",
      "category": "Voice",
      "domain": "Memory & Learning",
      "destination": "BRIDGE",
      "classes": [
        "JeffreyVoiceSystem"
      ],
      "functions": [
        "__init__",
        "initialize_components",
        "initialize",
        "shutdown",
        "_ajouter_effets_vocaux",
        "play_audio_effect",
        "speak",
        "play_sound_auto",
        "set_adaptive_personality_engine",
        "apply_empathic_inversion",
        "process_tactile_gesture",
        "interjection",
        "soupirer",
        "apply_emotional_stability_to_voice",
        "adjust_voice_for_emotional_patterns",
        "apply_emotional_role_to_voice",
        "start_listening",
        "stop_listening",
        "_listen_thread",
        "add_internal_state_narration",
        "adapt_voice_to_personality",
        "_log_voice_interaction_for_adaptation",
        "process_voice_params_for_synthesis"
      ],
      "dependencies": [
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1,
          "coupling_score": 0.0
        },
        {
          "module": "time",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 2,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 3,
          "coupling_score": 0.0
        },
        {
          "module": "typing",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 4,
          "coupling_score": 0.0
        },
        {
          "module": "dotenv",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 5,
          "coupling_score": 0.0
        },
        {
          "module": "pathlib",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 6,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 15,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 75,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 108,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 151,
          "coupling_score": 0.0
        },
        {
          "module": "sounddevice",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 241,
          "coupling_score": 0.0
        },
        {
          "module": "soundfile",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 242,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 300,
          "coupling_score": 0.0
        },
        {
          "module": "random",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 301,
          "coupling_score": 0.0
        },
        {
          "module": "logging",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 396,
          "coupling_score": 0.0
        },
        {
          "module": "speech_recognition",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1026,
          "coupling_score": 0.0
        },
        {
          "module": "orchestrateur.recognition.jeffrey_voice_recognition",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 944,
          "coupling_score": 0.0
        },
        {
          "module": "orchestrateur.recognition.jeffrey_voice_recognition",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 999,
          "coupling_score": 0.0
        },
        {
          "module": "datetime",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 1310,
          "coupling_score": 0.0
        },
        {
          "module": "orchestrateur.core.voice.voice_engine",
          "import_type": "importfrom",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 81,
          "coupling_score": 0.0
        },
        {
          "module": "pygame",
          "import_type": "import",
          "is_internal": false,
          "is_network": false,
          "is_bridge_violation": false,
          "line_number": 126,
          "coupling_score": 0.0
        }
      ],
      "imports_count": 21,
      "lines_of_code": 1366,
      "complexity_score": 164,
      "has_docstring": false,
      "has_tests": false,
      "has_typing": true,
      "test_coverage": 0.0,
      "risk_flags": [],
      "security_issues": [],
      "bridge_violations": [],
      "readiness_score": 50.0,
      "priority_score": 0,
      "compatibility_score": {},
      "text_features": "jeffrey_voice_system Module de orchestration, memory, communication, learning, emotion JeffreyVoiceSystem __init__ initialize_components initialize shutdown _ajouter_effets_vocaux play_audio_effect speak play_sound_auto set_adaptive_personality_engine apply_empathic_inversion process_tactile_gesture interjection soupirer apply_emotional_stability_to_voice adjust_voice_for_emotional_patterns apply_emotional_role_to_voice start_listening stop_listening _listen_thread add_internal_state_narration adapt_voice_to_personality _log_voice_interaction_for_adaptation process_voice_params_for_synthesis Voice",
      "embedding": null,
      "last_modified": "2025-09-22T22:28:46.049424",
      "owner": "",
      "criticality": "P2",
      "notes": "",
      "suggested_improvements": [
        "Add module docstring",
        "Create unit tests",
        "Refactor to reduce complexity"
      ]
    }
  ],
  "domains": {
    "Identity & Consciousness": {
      "description": "Le 'Moi' de Jeffrey",
      "modules": [
        "emotional_memory",
        "memory_manager",
        "personality_profile",
        "__init__",
        "conversation_personality",
        "adaptive_personality_engine",
        "personality_engine",
        "jeffrey_chat_integration",
        "jeffrey_dream_system",
        "__init__",
        "jeffrey_work_interface",
        "jeffrey_living_consciousness",
        "cortex_monitor",
        "self_awareness_tracker",
        "conscience_engine",
        "jeffrey_secret_diary",
        "jeffrey_consciousness_v3",
        "jeffrey_living_expressions",
        "__init__",
        "emotion_ml_enhancer",
        "emotion_engine",
        "emotion_prompt_detector",
        "__init__",
        "humeur_detector",
        "mood_tracker",
        "__init__",
        "emotional_consciousness",
        "jeffrey_curiosity_engine",
        "__init__",
        "lien_affectif",
        "surprises_emotionnelles",
        "__init__",
        "__init__",
        "__init__",
        "jeffrey_emotional_core",
        "emotional_seasons",
        "emotion_aura_manager",
        "__init__",
        "souvenirs_affectifs",
        "private_sanctuary_ui",
        "symbolic_scene_engine",
        "jeffrey_emotional_display",
        "__init__",
        "jeffrey_visual_emotions",
        "__init__",
        "adaptive_personality_engine",
        "empathy_engine",
        "emotional_memory",
        "emotional_bridge",
        "jeffrey_intimate_mode",
        "contextual_emotion_bridge",
        "jeffrey_living_memory",
        "voice_emotion_renderer",
        "emotional_prosody_synchronizer",
        "__init__",
        "limbic_glue",
        "voice_emotion_adapter"
      ],
      "keywords": [
        "consciousness",
        "personality",
        "emotion"
      ]
    },
    "Memory & Learning": {
      "description": "Mémoire et apprentissage",
      "modules": [
        "memory_rituals",
        "memory_manager",
        "__init__",
        "memory_health_check",
        "contextual_memory_manager",
        "jeffrey_human_memory",
        "voice_memory_manager",
        "__init__",
        "memory_bridge",
        "__init__",
        "memoire_cerveau",
        "__init__",
        "cortex_memoriel",
        "working_memory",
        "__init__",
        "__init__",
        "living_memory",
        "jeffrey_sensory_memory",
        "__init__",
        "__init__",
        "jeffrey_memory_sync",
        "cognitive_cycle_engine",
        "sensorial_memory",
        "__init__",
        "theory_of_mind",
        "contextual_learning_engine",
        "jeffrey_meta_learning_integration",
        "jeffrey_deep_learning",
        "unified_curiosity_engine",
        "auto_learner",
        "adaptive_integrator",
        "symbiosis_engine",
        "working_memory",
        "__init__",
        "memory_glue",
        "emotional_profile_manager",
        "jeffrey_voice_system"
      ],
      "keywords": [
        "memory",
        "learning",
        "recall"
      ]
    },
    "Decision & Orchestration": {
      "description": "Coordination et décision",
      "modules": [
        "linguistic_orchestrator",
        "multi_model_orchestrator",
        "enhanced_orchestrator",
        "jeffrey_orchestrator",
        "orchestrator_glue",
        "ia_orchestrator_ultimate",
        "credit_manager"
      ],
      "keywords": [
        "orchestrator",
        "coordinator",
        "decision"
      ]
    },
    "Security & Ethics": {
      "description": "Sécurité et éthique",
      "modules": [
        "security_analyzer",
        "guardian",
        "__init__",
        "__init__",
        "secrets_manager",
        "security_validator",
        "encryption_manager",
        "key_manager",
        "rate_limiter",
        "auth_service_adapter"
      ],
      "keywords": [
        "security",
        "privacy",
        "ethics",
        "auth"
      ]
    },
    "External Connectivity": {
      "description": "APIs et intégrations",
      "modules": [
        "__init__",
        "audit_logger_enhanced",
        "elevenlabs_client",
        "provider_manager",
        "__init__",
        "curiosity_adapter",
        "webhook_handler_adapter",
        "cellular_architecture_adapter",
        "nlp_engine_adapter",
        "__init__",
        "speech_synthesis_adapter",
        "rate_limiter_adapter",
        "__init__",
        "ocr_service_adapter",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "cache_manager_adapter"
      ],
      "keywords": [
        "connector",
        "api",
        "external",
        "bridge"
      ]
    },
    "Skills & Capabilities": {
      "description": "Compétences spécialisées",
      "modules": [
        "__init__",
        "__init__",
        "neural_bus",
        "service_registry",
        "sandbox_manager_enhanced",
        "errors",
        "neural_envelope",
        "namespace_firewall",
        "graph_engine",
        "__init__",
        "policy_bus",
        "__init__",
        "brain_discovery_final",
        "jeffrey_optimizer",
        "__init__",
        "jeffrey_continuel",
        "__init__",
        "jeffrey_system_health",
        "__init__",
        "__init__",
        "global_workspace",
        "__init__",
        "guardian_communication",
        "__init__",
        "console_motor",
        "__init__",
        "__init__",
        "guardian_integration",
        "__init__",
        "__init__",
        "thalamic_gateway",
        "guardian_symphony",
        "__init__",
        "__init__",
        "baseline_tracker",
        "database_manager",
        "event_logger",
        "metrics",
        "__init__",
        "jeffrey_auditor",
        "__init__",
        "quality_collector",
        "cost_collector",
        "stability_collector",
        "__init__",
        "latency_collector",
        "benchmark_manager",
        "audit_glue",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "auto_scaler",
        "multilingual_voice_adapter",
        "__init__",
        "__init__",
        "voice_controller_v3",
        "health_checker",
        "__init__",
        "voice_effects",
        "jeffrey_voice_dna",
        "__init__",
        "face_sync_manager",
        "__init__",
        "voice_recognition_error_recovery",
        "interpersonal_rhythm_synchronizer",
        "voice_engine",
        "elevenlabs_v3_engine",
        "streaming_audio_pipeline"
      ],
      "keywords": [
        "skill",
        "capability",
        "service"
      ]
    },
    "User Interface": {
      "description": "Interface utilisateur",
      "modules": [
        "metrics_dashboard",
        "circuit_breaker",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "LienAffectifWidget",
        "dashboard_premium",
        "dashboard",
        "__init__",
        "TouchFloatingMenu",
        "__init__",
        "chat_screen",
        "JournalEntryCard",
        "console_ui",
        "websocket_handler"
      ],
      "keywords": [
        "ui",
        "interface",
        "avatar",
        "dashboard"
      ]
    }
  }
}
