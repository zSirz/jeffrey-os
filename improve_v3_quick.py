#!/usr/bin/env python3
"""
Am√©lioration rapide EmotionDetectorV3 bas√©e sur les erreurs observ√©es
"""

import sys
from pathlib import Path

ROOT = Path(__file__).resolve().parent
sys.path.insert(0, str(ROOT / "src"))


def improve_lexicon():
    """Am√©liorations du lexique bas√©es sur les erreurs"""

    improvements = {
        # Joy - expressions narratives manquantes
        "joy": {
            "ne devineras jamais",
            "devine quoi",
            "super nouvelle",
            "j'ai une bonne nouvelle",
            "√ßa m'est arriv√©",
            "offert",
            "voyage surprise",
            "cadeau",
            "surprise",
            "chance incroyable",
        },
        # Discomfort - mieux diff√©rencier de fear
        "discomfort": {
            "√ßa me met mal",
            "me met pas √† l'aise",
            "√ßa me d√©range un peu",
            "c'est d√©licat",
            "sujet sensible",
            "touche un point sensible",
            "√ßa remue des trucs",
            "√ßa r√©veille des souvenirs",
        },
        # Vulnerability - expressions subtiles
        "vulnerability": {
            "c'est dur pour moi",
            "√ßa me touche",
            "je suis sensible √† √ßa",
            "ruptures c'est dur",
            "difficile pour moi",
            "√ßa me fragilise",
            "j'ai du mal avec √ßa",
            "√ßa me bouleverse",
        },
        # Patterns n√©gatifs pour r√©duire neutral
        "sadness": {"√ßa fait quelques semaines", "je passe tout le temps", "seul en ce moment", "vraiment seul"},
    }

    print("üîß AM√âLIORATIONS SUGG√âR√âES:")
    print("=" * 40)

    for emotion, new_terms in improvements.items():
        print(f"üìù {emotion.upper()}:")
        for term in new_terms:
            print(f"   + '{term}'")
        print()

    # Test avec les exemples qui ont √©chou√©
    test_cases = [
        ("Tu ne devineras jamais ce qui m'est arriv√© !", "joy"),
        ("Mon meilleur ami m'a offert un voyage surprise", "joy"),
        ("On parle de mon ex ? √áa me met mal √† l'aise", "discomfort"),
        ("Les ruptures c'est dur pour moi", "vulnerability"),
        ("Je me sens vraiment seul en ce moment", "sadness"),
    ]

    print("üß™ TESTS AVEC AM√âLIORATIONS:")
    print("-" * 40)

    # Import du d√©tecteur
    from jeffrey.nlp.emotion_detector_v3 import EmotionDetectorV3

    detector = EmotionDetectorV3()

    for text, expected in test_cases:
        result = detector.detect(text)
        status = "‚úÖ" if result.primary == expected else "‚ùå"
        print(f"{status} '{text[:40]}...'")
        print(f"   Expected: {expected} ‚Üí Got: {result.primary}")
        print(f"   Top scores: {sorted(result.scores.items(), key=lambda x: x[1], reverse=True)[:3]}")
        print()


if __name__ == "__main__":
    improve_lexicon()
