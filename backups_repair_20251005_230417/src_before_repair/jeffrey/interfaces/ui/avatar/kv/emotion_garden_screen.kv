#:kivy 2.0.0
#:import hex kivy.utils.get_color_from_hex
#:import dp kivy.metrics.dp

<EmotionFlower>:
    canvas:
        PushMatrix
        Scale:
            origin: self.center
            x: self.bloom_size
            y: self.bloom_size

        # Tige de la fleur
        Color:
            rgba: 0.3, 0.7, 0.3, 0.8
        Line:
            points: [self.center_x, self.center_y - dp(10), self.center_x, self.center_y - dp(30)]
            width: 1.5
            cap: 'round'

        # Feuilles
        Color:
            rgba: 0.2, 0.6, 0.2, 0.7
        Ellipse:
            pos: self.center_x - dp(8), self.center_y - dp(25)
            size: dp(7), dp(15)
            angle_start: 0
            angle_end: 180
        Ellipse:
            pos: self.center_x + dp(1), self.center_y - dp(25)
            size: dp(7), dp(15)
            angle_start: 180
            angle_end: 360

        # Centre de la fleur
        Color:
            rgba: self.emotion_color[0] * 0.8, self.emotion_color[1] * 0.8, self.emotion_color[2] * 0.8, self.emotion_color[3]
        Ellipse:
            pos: self.center_x - dp(10), self.center_y - dp(10)
            size: dp(20), dp(20)

        # Pétales de la fleur
        Color:
            rgba: self.emotion_color

        # Pétale 1
        Ellipse:
            pos: self.center_x - dp(5), self.center_y + dp(5)
            size: dp(10), dp(15)

        # Pétale 2
        Ellipse:
            pos: self.center_x + dp(5), self.center_y + dp(5)
            size: dp(10), dp(15)

        # Pétale 3
        Ellipse:
            pos: self.center_x + dp(5), self.center_y - dp(15)
            size: dp(10), dp(15)

        # Pétale 4
        Ellipse:
            pos: self.center_x - dp(15), self.center_y - dp(15)
            size: dp(10), dp(15)

        # Pétale 5
        Ellipse:
            pos: self.center_x - dp(15), self.center_y + dp(5)
            size: dp(10), dp(15)

        # Effet de brillance au centre
        Color:
            rgba: min(1.0, self.emotion_color[0] * 1.3), min(1.0, self.emotion_color[1] * 1.3), min(1.0, self.emotion_color[2] * 1.3), 0.7
        Ellipse:
            pos: self.center_x - dp(5), self.center_y - dp(5)
            size: dp(10), dp(10)

        # Effet de sélection
        Color:
            rgba: 1, 1, 1, 0.3 if self.is_selected else 0
        Line:
            circle: (self.center_x, self.center_y, dp(25))
            width: dp(2)

        PopMatrix

    # Étiquette avec la description (visible seulement si sélectionnée)
    BoxLayout:
        orientation: 'vertical'
        size_hint: None, None
        size: dp(150), dp(80)
        pos: root.center_x - dp(75), root.center_y + dp(30)
        opacity: 1 if root.is_selected else 0

        canvas.before:
            Color:
                rgba: 0.1, 0.1, 0.1, 0.7
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [dp(5)]

        Label:
            text: root.description
            font_size: dp(12)
            text_size: self.width - dp(10), None
            halign: 'center'
            valign: 'middle'
            color: 1, 1, 1, 1

        Label:
            text: root.date.split('T')[0] if 'T' in root.date else root.date
            font_size: dp(10)
            color: 0.8, 0.8, 0.8, 1
            size_hint_y: 0.3

<EmotionGardenScreen>:
    name: 'emotion_garden'
    canvas.before:
        # Fond du jardin émotionnel avec couleur dynamique liée à l'émotion
        Color:
            rgba: root.background_emotion_color if hasattr(root, 'background_emotion_color') else (0.05, 0.15, 0.05, 1)
        Rectangle:
            pos: self.pos
            size: self.size

        # Rays of light
        Color:
            rgba: 0.3, 0.4, 0.2, 0.2
        Rectangle:
            pos: self.center_x - self.width, self.center_y - dp(50)
            size: self.width * 2, dp(100)

        # Herbe
        Color:
            rgba: 0.2, 0.4, 0.2, 0.5
        Rectangle:
            pos: 0, 0
            size: self.width, dp(50)

    BoxLayout:
        orientation: 'vertical'

        Label:
            text: "Jardin Émotionnel de Jeffrey"
            font_size: dp(24)
            size_hint_y: 0.1
            color: 0.9, 0.9, 0.9, 1

        Button:
            text: "Changer Émotion"
            size_hint_y: 0.1
            on_release: root.trigger_emotion_change()

        FloatLayout:
            id: garden_container
            size_hint_y: 0.9

            Image:
                id: weather_effect
                source: root.weather_source
                size_hint: None, None
                size: dp(100), dp(100)
                pos_hint: {'center_x': 0.5, 'top': 1}
                opacity: 0.6

            Repeater:
                id: flowers
                viewclass: 'EmotionFlower'
                data: []
